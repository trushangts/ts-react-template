{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/chat/components/ChatBody.js\";\nimport React from \"react\";\nimport { Moment, HtmlRender } from \"../../../common/utils/components\";\n\nvar ChatBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBody, _React$Component);\n\n  function ChatBody() {\n    _classCallCheck(this, ChatBody);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatBody).apply(this, arguments));\n  }\n\n  _createClass(ChatBody, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.refs.body.scrollTop = this.refs.body.scrollHeight;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var messages = this.props.messages || [];\n      return React.createElement(\"div\", {\n        id: \"chat-body\",\n        className: \"chat-body custom-scroll\",\n        ref: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, messages.map(function (message, idx) {\n        return React.createElement(\"li\", {\n          className: \"message\",\n          key: \"chat-message-\" + idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"message-picture online\",\n          src: message.user.picture,\n          alt: message.user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"message-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"time\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          date: message.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        })), React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: _this.props.onMessageTo.bind(_this, message.user),\n          className: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, message.user.username), React.createElement(HtmlRender, {\n          html: message.body,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return ChatBody;\n}(React.Component);\n\nexport { ChatBody as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/chat/components/ChatBody.js"],"names":["React","Moment","HtmlRender","ChatBody","refs","body","scrollTop","scrollHeight","messages","props","map","message","idx","user","picture","username","date","onMessageTo","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,kCAAnC;;IAEqBC,Q;;;;;;;;;;;;;yCACE;AACnB,WAAKC,IAAL,CAAUC,IAAV,CAAeC,SAAf,GAA2B,KAAKF,IAAL,CAAUC,IAAV,CAAeE,YAA1C;AACD;;;6BACQ;AAAA;;AACP,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,IAAuB,EAAtC;AAEA,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,yBAA9B;AAAwD,QAAA,GAAG,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD,EAAUC,GAAV,EAAkB;AAC9B,eACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAwB,UAAA,GAAG,EAAE,kBAAkBA,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,UAAA,GAAG,EAAED,OAAO,CAACE,IAAR,CAAaC,OAFpB;AAGE,UAAA,GAAG,EAAEH,OAAO,CAACE,IAAR,CAAaE,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAOE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAEJ,OAAO,CAACK,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAKE;AAAG,UAAA,IAAI,EAAC,IAAR;AACE,UAAA,OAAO,EAAE,KAAI,CAACP,KAAL,CAAWQ,WAAX,CAAuBC,IAAvB,CAA4B,KAA5B,EAAkCP,OAAO,CAACE,IAA1C,CADX;AAEE,UAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGF,OAAO,CAACE,IAAR,CAAaE,QAJhB,CALF,EAYE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAEJ,OAAO,CAACN,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,CAPF,CADF;AAwBD,OAzBA,CADH,CADF,CADF;AAgCD;;;;EAvCmCL,KAAK,CAACmB,S;;SAAvBhB,Q","sourcesContent":["import React from \"react\";\nimport { Moment, HtmlRender } from \"../../../common/utils/components\";\n\nexport default class ChatBody extends React.Component {\n  componentDidUpdate() {\n    this.refs.body.scrollTop = this.refs.body.scrollHeight;\n  }\n  render() {\n    let messages = this.props.messages || [];\n\n    return (\n      <div id=\"chat-body\" className=\"chat-body custom-scroll\" ref=\"body\">\n        <ul>\n          {messages.map((message, idx) => {\n            return (\n              <li className=\"message\" key={\"chat-message-\" + idx}>\n                <img\n                  className=\"message-picture online\"\n                  src={message.user.picture}\n                  alt={message.user.username}\n                />\n\n                <div className=\"message-text\">\n                  <time>\n                    <Moment date={message.date} />\n                  </time>\n\n                  <a href=\"#/\"\n                    onClick={this.props.onMessageTo.bind(this, message.user)}\n                    className=\"username\"\n                  >\n                    {message.user.username}\n                  </a>\n\n                  <HtmlRender html={message.body} />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}