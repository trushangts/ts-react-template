{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/AttributeForm.js\";\nimport React from \"react\";\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\n\nvar AttributeForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttributeForm, _React$Component);\n\n  function AttributeForm() {\n    _classCallCheck(this, AttributeForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AttributeForm).apply(this, arguments));\n  }\n\n  _createClass(AttributeForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit stuff\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BootstrapValidator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"attributeForm\",\n        onSubmit: this.onSubmit,\n        className: \"form-horizontal\",\n        \"data-bv-message\": \"This value is not valid\",\n        \"data-bv-feedbackicons-valid\": \"glyphicon glyphicon-ok\",\n        \"data-bv-feedbackicons-invalid\": \"glyphicon glyphicon-remove\",\n        \"data-bv-feedbackicons-validating\": \"glyphicon glyphicon-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Set validator options via HTML attributes\"), React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"< input data-bv-validatorname data-bv-validatorname-validatoroption=\\\"...\\\" / >\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), \"More validator options can be found here:\", React.createElement(\"a\", {\n        href: \"http://bootstrapvalidator.com/validators/\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"http://bootstrapvalidator.com/validators/\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Full name\"), React.createElement(\"div\", {\n        className: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"firstName\",\n        placeholder: \"First name\",\n        \"data-bv-notempty\": \"true\",\n        \"data-bv-notempty-message\": \"The first name is required and cannot be empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"lastName\",\n        placeholder: \"Last name\",\n        \"data-bv-notempty\": \"true\",\n        \"data-bv-notempty-message\": \"The last name is required and cannot be empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        \"data-bv-message\": \"The username is not valid\",\n        \"data-bv-notempty\": \"true\",\n        \"data-bv-notempty-message\": \"The username is required and cannot be empty\",\n        \"data-bv-regexp\": \"true\",\n        \"data-bv-regexp-regexp\": \"^[a-zA-Z0-9_\\\\.]+$\",\n        \"data-bv-regexp-message\": \"The username can only consist of alphabetical, number, dot and underscore\",\n        \"data-bv-stringlength\": \"true\",\n        \"data-bv-stringlength-min\": \"6\",\n        \"data-bv-stringlength-max\": \"30\",\n        \"data-bv-stringlength-message\": \"The username must be more than 6 and less than 30 characters long\",\n        \"data-bv-different\": \"true\",\n        \"data-bv-different-field\": \"password\",\n        \"data-bv-different-message\": \"The username and password cannot be the same as each other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"email\",\n        type: \"email\",\n        \"data-bv-emailaddress\": \"true\",\n        \"data-bv-emailaddress-message\": \"The input is not a valid email address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        \"data-bv-notempty\": \"true\",\n        \"data-bv-notempty-message\": \"The password is required and cannot be empty\",\n        \"data-bv-identical\": \"true\",\n        \"data-bv-identical-field\": \"confirmPassword\",\n        \"data-bv-identical-message\": \"The password and its confirm are not the same\",\n        \"data-bv-different\": \"true\",\n        \"data-bv-different-field\": \"username\",\n        \"data-bv-different-message\": \"The password cannot be the same as username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Retype password\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"confirmPassword\",\n        \"data-bv-notempty\": \"true\",\n        \"data-bv-notempty-message\": \"The confirm password is required and cannot be empty\",\n        \"data-bv-identical\": \"true\",\n        \"data-bv-identical-field\": \"password\",\n        \"data-bv-identical-message\": \"The password and its confirm are not the same\",\n        \"data-bv-different\": \"true\",\n        \"data-bv-different-field\": \"username\",\n        \"data-bv-different-message\": \"The password cannot be the same as username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Languages\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"languages[]\",\n        value: \"english\",\n        \"data-bv-message\": \"Please specify at least one language you can speak\",\n        \"data-bv-notempty\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \"English\", \" \")), React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"languages[]\",\n        value: \"french\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), \"French\", \" \")), React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"languages[]\",\n        value: \"german\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), \"German\", \" \")), React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"languages[]\",\n        value: \"russian\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), \"Russian\", \" \")), React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"languages[]\",\n        value: \"other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \"Other\", \" \"))))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \"Validate\"))))));\n    }\n  }]);\n\n  return AttributeForm;\n}(React.Component);\n\nexport { AttributeForm as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/AttributeForm.js"],"names":["React","BootstrapValidator","AttributeForm","e","preventDefault","console","log","onSubmit","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\n\nexport default class AttributeForm extends React.Component {\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit stuff\");\n  }\n\n  render() {\n    return (\n      <BootstrapValidator>\n        <form\n          id=\"attributeForm\"\n          onSubmit={this.onSubmit}\n          className=\"form-horizontal\"\n          data-bv-message=\"This value is not valid\"\n          data-bv-feedbackicons-valid=\"glyphicon glyphicon-ok\"\n          data-bv-feedbackicons-invalid=\"glyphicon glyphicon-remove\"\n          data-bv-feedbackicons-validating=\"glyphicon glyphicon-refresh\"\n        >\n          <fieldset>\n            <legend>Set validator options via HTML attributes</legend>\n\n            <div className=\"alert alert-warning\">\n              <code>\n                &lt; input data-bv-validatorname\n                data-bv-validatorname-validatoroption=\"...\" / &gt;\n              </code>\n              <br />\n              <br />\n              More validator options can be found here:\n              <a\n                href=\"http://bootstrapvalidator.com/validators/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                http://bootstrapvalidator.com/validators/\n              </a>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Full name</label>\n              <div className=\"col-lg-4\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  data-bv-notempty=\"true\"\n                  data-bv-notempty-message=\"The first name is required and cannot be empty\"\n                />\n              </div>\n              <div className=\"col-lg-4\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  data-bv-notempty=\"true\"\n                  data-bv-notempty-message=\"The last name is required and cannot be empty\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Username</label>\n              <div className=\"col-lg-5\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  data-bv-message=\"The username is not valid\"\n                  data-bv-notempty=\"true\"\n                  data-bv-notempty-message=\"The username is required and cannot be empty\"\n                  data-bv-regexp=\"true\"\n                  data-bv-regexp-regexp=\"^[a-zA-Z0-9_\\.]+$\"\n                  data-bv-regexp-message=\"The username can only consist of alphabetical, number, dot and underscore\"\n                  data-bv-stringlength=\"true\"\n                  data-bv-stringlength-min=\"6\"\n                  data-bv-stringlength-max=\"30\"\n                  data-bv-stringlength-message=\"The username must be more than 6 and less than 30 characters long\"\n                  data-bv-different=\"true\"\n                  data-bv-different-field=\"password\"\n                  data-bv-different-message=\"The username and password cannot be the same as each other\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Email address</label>\n              <div className=\"col-lg-5\">\n                <input\n                  className=\"form-control\"\n                  name=\"email\"\n                  type=\"email\"\n                  data-bv-emailaddress=\"true\"\n                  data-bv-emailaddress-message=\"The input is not a valid email address\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Password</label>\n              <div className=\"col-lg-5\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  data-bv-notempty=\"true\"\n                  data-bv-notempty-message=\"The password is required and cannot be empty\"\n                  data-bv-identical=\"true\"\n                  data-bv-identical-field=\"confirmPassword\"\n                  data-bv-identical-message=\"The password and its confirm are not the same\"\n                  data-bv-different=\"true\"\n                  data-bv-different-field=\"username\"\n                  data-bv-different-message=\"The password cannot be the same as username\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Retype password</label>\n              <div className=\"col-lg-5\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"confirmPassword\"\n                  data-bv-notempty=\"true\"\n                  data-bv-notempty-message=\"The confirm password is required and cannot be empty\"\n                  data-bv-identical=\"true\"\n                  data-bv-identical-field=\"password\"\n                  data-bv-identical-message=\"The password and its confirm are not the same\"\n                  data-bv-different=\"true\"\n                  data-bv-different-field=\"username\"\n                  data-bv-different-message=\"The password cannot be the same as username\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">Languages</label>\n              <div className=\"col-lg-5\">\n                <div className=\"checkbox\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name=\"languages[]\"\n                      value=\"english\"\n                      data-bv-message=\"Please specify at least one language you can speak\"\n                      data-bv-notempty=\"true\"\n                    />\n                    English{\" \"}\n                  </label>\n                </div>\n                <div className=\"checkbox\">\n                  <label>\n                    <input type=\"checkbox\" name=\"languages[]\" value=\"french\" />\n                    French{\" \"}\n                  </label>\n                </div>\n                <div className=\"checkbox\">\n                  <label>\n                    <input type=\"checkbox\" name=\"languages[]\" value=\"german\" />\n                    German{\" \"}\n                  </label>\n                </div>\n                <div className=\"checkbox\">\n                  <label>\n                    <input type=\"checkbox\" name=\"languages[]\" value=\"russian\" />\n                    Russian{\" \"}\n                  </label>\n                </div>\n                <div className=\"checkbox\">\n                  <label>\n                    <input type=\"checkbox\" name=\"languages[]\" value=\"other\" />\n                    Other{\" \"}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </fieldset>\n\n          <div className=\"form-actions\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <button className=\"btn btn-default\" type=\"submit\">\n                  <i className=\"fa fa-eye\" />\n                  Validate\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </BootstrapValidator>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}