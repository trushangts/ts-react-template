{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/outlook/components/OutlookFolder.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classnames from \"classnames\";\nimport { Moment } from \"../../../common/utils/components\";\nimport { connect } from \"react-redux\";\nimport { outlookFetchFolder } from \"../OutlookActions\";\n\nvar OutlookFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OutlookFolder, _React$Component);\n\n  function OutlookFolder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OutlookFolder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OutlookFolder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.currentFolder = null;\n    return _this;\n  }\n\n  _createClass(OutlookFolder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.currentFolder !== this.props.match.params.folder) {\n        this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n        this.currentFolder = this.props.match.params.folder;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.match.params.folder !== this.props.match.params.folder) {\n        this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n        this.currentFolder = this.props.match.params.folder;\n      }\n    }\n  }, {\n    key: \"getTeaser\",\n    value: function getTeaser(message) {\n      var clearBody = message.body.replace(/<[^<>]+?>/gm, \" \").replace(/(\\s{2}|\\n)/gm, \" \");\n      var teaserMaxLength = 55 - message.subject.length;\n      return clearBody.length > teaserMaxLength ? clearBody.substring(0, teaserMaxLength) + \"...\" : clearBody;\n    }\n  }, {\n    key: \"getAttachmentsTooltip\",\n    value: function getAttachmentsTooltip(message) {\n      if (message.attachments && message.attachments.length) {\n        var tooltipId = \"message-\" + message._id + \"-attachments-tooltip\";\n        var tooltipLabel = \"FILES: \" + message.attachments.map(function (_) {\n          return _.name;\n        }).join(\", \");\n        return React.createElement(OverlayTrigger, {\n          placement: \"left\",\n          overlay: React.createElement(Tooltip, {\n            id: tooltipId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, tooltipLabel),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"txt-color-darken\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-paperclip fa-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })));\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"getMessageLabels\",\n    value: function getMessageLabels(message) {\n      var labels = {\n        home: {\n          name: \"HOME\",\n          color: \"teal\"\n        },\n        work: {\n          name: \"WORK\",\n          color: \"orange\"\n        }\n      };\n      return message.labels ? message.labels.map(function (label, idx) {\n        return React.createElement(\"span\", {\n          key: message._id + idx,\n          className: \"label bg-color-\" + labels[label].color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, labels[label].name);\n      }) : \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"table-wrap custom-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"inbox-table\",\n        className: \"table table-striped table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.messages.map(function (message) {\n        var classNames = classnames({\n          unread: !message.read\n        });\n        return message.folder === _this2.props.match.params.folder ? React.createElement(\"tr\", {\n          key: message._id,\n          id: \"msg1\",\n          className: classNames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"inbox-table-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox style-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })))), React.createElement(\"td\", {\n          className: \"inbox-data-from hidden-xs hidden-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/outlook/detail/\" + message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, message.contact.name))), React.createElement(\"td\", {\n          className: \"inbox-data-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/outlook/detail/\" + message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, _this2.getMessageLabels(message), message.subject), _this2.getTeaser(message)))), React.createElement(\"td\", {\n          className: \"inbox-data-attachment hidden-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/outlook/detail/\" + message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, _this2.getAttachmentsTooltip(message))), React.createElement(\"td\", {\n          className: \"inbox-data-date hidden-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Moment, {\n          date: message.date,\n          format: \"h:mm a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }))) : null;\n      }))));\n    }\n  }]);\n\n  return OutlookFolder;\n}(React.Component);\n\nexport default connect(function (state) {\n  return state.outlook;\n})(OutlookFolder);","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/outlook/components/OutlookFolder.js"],"names":["React","Link","OverlayTrigger","Tooltip","classnames","Moment","connect","outlookFetchFolder","OutlookFolder","currentFolder","props","match","params","folder","dispatch","prevProps","prevState","snapshot","message","clearBody","body","replace","teaserMaxLength","subject","length","substring","attachments","tooltipId","_id","tooltipLabel","map","_","name","join","labels","home","color","work","label","idx","messages","classNames","unread","read","contact","getMessageLabels","getTeaser","getAttachmentsTooltip","date","Component","state","outlook"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport classnames from \"classnames\";\n\nimport { Moment } from \"../../../common/utils/components\";\n\nimport { connect } from \"react-redux\";\nimport { outlookFetchFolder } from \"../OutlookActions\";\n\nclass OutlookFolder extends React.Component {\n  currentFolder = null;\n\n  componentDidMount() {\n    if (this.currentFolder !== this.props.match.params.folder) {\n      this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n      this.currentFolder = this.props.match.params.folder;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.folder !== this.props.match.params.folder) {\n      this.props.dispatch(outlookFetchFolder(this.props.match.params.folder));\n      this.currentFolder = this.props.match.params.folder;\n    }\n  }\n\n  getTeaser(message) {\n    const clearBody = message.body\n      .replace(/<[^<>]+?>/gm, \" \")\n      .replace(/(\\s{2}|\\n)/gm, \" \");\n\n    const teaserMaxLength = 55 - message.subject.length;\n\n    return clearBody.length > teaserMaxLength\n      ? clearBody.substring(0, teaserMaxLength) + \"...\"\n      : clearBody;\n  }\n\n  getAttachmentsTooltip(message) {\n    if (message.attachments && message.attachments.length) {\n      const tooltipId = \"message-\" + message._id + \"-attachments-tooltip\";\n      const tooltipLabel =\n        \"FILES: \" + message.attachments.map(_ => _.name).join(\", \");\n      return (\n        <OverlayTrigger\n          placement=\"left\"\n          overlay={<Tooltip id={tooltipId}>{tooltipLabel}</Tooltip>}\n        >\n          <span className=\"txt-color-darken\">\n            <i className=\"fa fa-paperclip fa-lg\" />\n          </span>\n        </OverlayTrigger>\n      );\n    } else {\n      return \"\";\n    }\n  }\n\n  getMessageLabels(message) {\n    let labels = {\n      home: {\n        name: \"HOME\",\n        color: \"teal\"\n      },\n      work: {\n        name: \"WORK\",\n        color: \"orange\"\n      }\n    };\n\n    return message.labels\n      ? message.labels.map((label, idx) => {\n          return (\n            <span\n              key={message._id + idx}\n              className={\"label bg-color-\" + labels[label].color}\n            >\n              {labels[label].name}\n            </span>\n          );\n        })\n      : \"\";\n  }\n\n  render() {\n    return (\n      <div className=\"table-wrap custom-scroll\">\n        <table id=\"inbox-table\" className=\"table table-striped table-hover\">\n          <tbody>\n            {this.props.messages.map(message => {\n              let classNames = classnames({\n                unread: !message.read\n              });\n              return message.folder === this.props.match.params.folder ? (\n                <tr key={message._id} id=\"msg1\" className={classNames}>\n                  <td className=\"inbox-table-icon\">\n                    <div className=\"checkbox\">\n                      <label>\n                        <input type=\"checkbox\" className=\"checkbox style-2\" />\n                        <span />\n                      </label>\n                    </div>\n                  </td>\n                  <td className=\"inbox-data-from hidden-xs hidden-sm\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      <div>{message.contact.name}</div>\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-message\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      <div>\n                        <span>\n                          {this.getMessageLabels(message)}\n                          {message.subject}\n                        </span>\n                        {this.getTeaser(message)}\n                      </div>\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-attachment hidden-xs\">\n                    <Link to={\"/outlook/detail/\" + message._id}>\n                      {this.getAttachmentsTooltip(message)}\n                    </Link>\n                  </td>\n                  <td className=\"inbox-data-date hidden-xs\">\n                    <Moment date={message.date} format=\"h:mm a\" />\n                  </td>\n                </tr>\n              ) : null;\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state.outlook)(OutlookFolder);\n"]},"metadata":{},"sourceType":"module"}