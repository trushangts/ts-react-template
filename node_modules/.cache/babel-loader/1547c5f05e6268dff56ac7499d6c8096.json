{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/ImageCropping.js\";\nimport React from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { ButtonToolbar, ToggleButtonGroup, ToggleButton, ButtonGroup, Button } from \"react-bootstrap\";\nimport { BigBreadcrumbs, Stats } from \"../../../common\";\n\nvar ImageCropping =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageCropping, _React$Component);\n\n  function ImageCropping(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCropping);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCropping).call(this, props));\n\n    _this.selectImage = function (selectedImage) {\n      _this.setState({\n        selectedImage: selectedImage\n      });\n    };\n\n    _this.setOption = function (name, value) {\n      var options = _this.state.options;\n      options[name] = value;\n\n      _this.setState({\n        options: options\n      });\n    };\n\n    _this.onCrop = function (e) {\n      _this.setState({\n        crop: _this.refs.cropper.getData()\n      });\n    };\n\n    _this.state = {\n      aspectRatios: [{\n        name: \"16:9\",\n        val: 16 / 9\n      }, {\n        name: \"4:3\",\n        val: 4 / 3\n      }, {\n        name: \"1:1\",\n        val: 1 / 1\n      }, {\n        name: \"2:3\",\n        val: 2 / 3\n      }],\n      images: [\"/assets/img/superbox/superbox-full-7.jpg\", \"/assets/img/superbox/superbox-full-9.jpg\", \"/assets/img/superbox/superbox-full-10.jpg\", \"/assets/img/superbox/superbox-full-11.jpg\", \"/assets/img/superbox/superbox-full-13.jpg\", \"/assets/img/superbox/superbox-full-16.jpg\", \"/assets/img/superbox/superbox-full-18.jpg\", \"/assets/img/superbox/superbox-full-19.jpg\", \"/assets/img/superbox/superbox-full-23.jpg\", \"/assets/img/superbox/superbox-full-1.jpg\", \"/assets/img/superbox/superbox-full-2.jpg\", \"/assets/img/superbox/superbox-full-3.jpg\", \"/assets/img/superbox/superbox-full-4.jpg\", \"/assets/img/superbox/superbox-full-12.jpg\", \"/assets/img/superbox/superbox-full-14.jpg\", \"/assets/img/superbox/superbox-full-15.jpg\", \"/assets/img/superbox/superbox-full-17.jpg\", \"/assets/img/superbox/superbox-full-20.jpg\", \"/assets/img/superbox/superbox-full-6.jpg\", \"/assets/img/superbox/superbox-full-8.jpg\", \"/assets/img/superbox/superbox-full-22.jpg\", \"/assets/img/superbox/superbox-full-24.jpg\"],\n      selectedImage: \"/assets/img/superbox/superbox-full-7.jpg\",\n      crop: {\n        x: null,\n        y: null,\n        width: null,\n        height: null,\n        rotate: null,\n        scaleX: 1,\n        scaleY: 1\n      },\n      options: {\n        aspectRatio: 16 / 9,\n        viewMode: 0,\n        responsive: true,\n        restore: true,\n        checkCrossOrigin: true,\n        checkOrientation: true,\n        modal: true,\n        guides: true,\n        center: true,\n        highlight: true,\n        background: true,\n        autoCrop: true,\n        movable: true,\n        rotatable: true,\n        scalable: true,\n        zoomable: true,\n        zoomOnTouch: true,\n        zoomOnWheel: true,\n        cropBoxMovable: true,\n        cropBoxResizable: true,\n        toggleDragModeOnDblclick: true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ImageCropping, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var thumbs = this.state.images.map(function (image, idx) {\n        var isActive = _this2.state.selectedImage === image;\n        return React.createElement(\"div\", {\n          className: \"col-xs-12 col-md-6\",\n          key: idx,\n          onClick: function onClick() {\n            return _this2.selectImage(image);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"thumbnail\",\n          style: {\n            backgroundColor: isActive ? \"transparent\" : \"#fff\",\n            borderColor: isActive ? \"transparent\" : \"#ddd\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: image,\n          alt: image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(BigBreadcrumbs, {\n        items: [\"Forms\", \"Image Cropping\"],\n        icon: \"fa fa-image\",\n        className: \"col-xs-12 col-sm-7 col-md-7 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Stats, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, thumbs)), React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Cropper, {\n        ref: \"cropper\",\n        src: this.state.selectedImage,\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        preview: \".cropper-preview\" // Cropper.js options\n        ,\n        viewMode: this.state.options.viewMode,\n        aspectRatio: this.state.options.aspectRatio,\n        guides: false,\n        crop: this.onCrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ToggleButtonGroup, {\n        type: \"radio\",\n        name: \"aspectRatios\",\n        defaultValue: \"16:9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.aspectRatios.map(function (ratio) {\n        return React.createElement(ToggleButton, {\n          key: ratio.name,\n          value: ratio.name,\n          onClick: function onClick() {\n            return _this2.setOption(\"aspectRatio\", ratio.val);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, ratio.name);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.refs.cropper.reset();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.refs.cropper.clear();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Clear\"))), React.createElement(\"div\", {\n        className: \"col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cropper-preview-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cropper-preview cropper-preview-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cropper-preview cropper-preview-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cropper-preview cropper-preview-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cropper-preview cropper-preview-xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(\"textarea\", {\n        className: \"col-sm-12\",\n        style: {\n          marginTop: \"1.75rem\"\n        },\n        rows: 9,\n        readOnly: true,\n        value: JSON.stringify(this.state.crop, null, 2),\n        onChange: function onChange(e) {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ImageCropping;\n}(React.Component);\n\nexport { ImageCropping as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/ImageCropping.js"],"names":["React","Cropper","ButtonToolbar","ToggleButtonGroup","ToggleButton","ButtonGroup","Button","BigBreadcrumbs","Stats","ImageCropping","props","selectImage","selectedImage","setState","setOption","name","value","options","state","onCrop","e","crop","refs","cropper","getData","aspectRatios","val","images","x","y","width","height","rotate","scaleX","scaleY","aspectRatio","viewMode","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","thumbs","map","image","idx","isActive","backgroundColor","borderColor","ratio","reset","clear","marginTop","JSON","stringify","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport {\n  ButtonToolbar,\n  ToggleButtonGroup,\n  ToggleButton,\n  ButtonGroup,\n  Button\n} from \"react-bootstrap\";\n\nimport { BigBreadcrumbs, Stats } from \"../../../common\";\n\nexport default class ImageCropping extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      aspectRatios: [\n        { name: \"16:9\", val: 16 / 9 },\n        { name: \"4:3\", val: 4 / 3 },\n        { name: \"1:1\", val: 1 / 1 },\n        { name: \"2:3\", val: 2 / 3 }\n      ],\n      images: [\n        \"/assets/img/superbox/superbox-full-7.jpg\",\n        \"/assets/img/superbox/superbox-full-9.jpg\",\n        \"/assets/img/superbox/superbox-full-10.jpg\",\n        \"/assets/img/superbox/superbox-full-11.jpg\",\n        \"/assets/img/superbox/superbox-full-13.jpg\",\n        \"/assets/img/superbox/superbox-full-16.jpg\",\n        \"/assets/img/superbox/superbox-full-18.jpg\",\n        \"/assets/img/superbox/superbox-full-19.jpg\",\n        \"/assets/img/superbox/superbox-full-23.jpg\",\n        \"/assets/img/superbox/superbox-full-1.jpg\",\n        \"/assets/img/superbox/superbox-full-2.jpg\",\n        \"/assets/img/superbox/superbox-full-3.jpg\",\n        \"/assets/img/superbox/superbox-full-4.jpg\",\n        \"/assets/img/superbox/superbox-full-12.jpg\",\n        \"/assets/img/superbox/superbox-full-14.jpg\",\n        \"/assets/img/superbox/superbox-full-15.jpg\",\n        \"/assets/img/superbox/superbox-full-17.jpg\",\n        \"/assets/img/superbox/superbox-full-20.jpg\",\n        \"/assets/img/superbox/superbox-full-6.jpg\",\n        \"/assets/img/superbox/superbox-full-8.jpg\",\n        \"/assets/img/superbox/superbox-full-22.jpg\",\n        \"/assets/img/superbox/superbox-full-24.jpg\"\n      ],\n      selectedImage: \"/assets/img/superbox/superbox-full-7.jpg\",\n\n      crop: {\n        x: null,\n        y: null,\n        width: null,\n        height: null,\n        rotate: null,\n        scaleX: 1,\n        scaleY: 1\n      },\n\n      options: {\n        aspectRatio: 16 / 9,\n        viewMode: 0,\n        responsive: true,\n        restore: true,\n        checkCrossOrigin: true,\n        checkOrientation: true,\n        modal: true,\n        guides: true,\n        center: true,\n        highlight: true,\n        background: true,\n        autoCrop: true,\n        movable: true,\n        rotatable: true,\n        scalable: true,\n        zoomable: true,\n        zoomOnTouch: true,\n        zoomOnWheel: true,\n        cropBoxMovable: true,\n        cropBoxResizable: true,\n        toggleDragModeOnDblclick: true\n      }\n    };\n  }\n\n  selectImage = selectedImage => {\n    this.setState({\n      selectedImage\n    });\n  };\n  setOption = (name, value) => {\n    const options = this.state.options;\n    options[name] = value;\n    this.setState({\n      options\n    });\n  };\n\n  onCrop = e => {\n    this.setState({\n      crop: this.refs.cropper.getData()\n    });\n  };\n  render() {\n    const thumbs = this.state.images.map((image, idx) => {\n      const isActive = this.state.selectedImage === image;\n      return (\n        <div\n          className=\"col-xs-12 col-md-6\"\n          key={idx}\n          onClick={() => this.selectImage(image)}\n        >\n          <div\n            className=\"thumbnail\"\n            style={{\n              backgroundColor: isActive ? \"transparent\" : \"#fff\",\n              borderColor: isActive ? \"transparent\" : \"#ddd\"\n            }}\n          >\n            <img src={image} alt={image} />\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"Forms\", \"Image Cropping\"]}\n            icon=\"fa fa-image\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <div className=\"row\">{thumbs}</div>\n          </div>\n\n          <div className=\"col-sm-9\">\n            <div className=\"row\">\n              <div className=\"col-xs-12\">\n                <Cropper\n                  ref=\"cropper\"\n                  src={this.state.selectedImage}\n                  style={{ height: 400, width: \"100%\" }}\n                  preview={\".cropper-preview\"}\n                  // Cropper.js options\n                  viewMode={this.state.options.viewMode}\n                  aspectRatio={this.state.options.aspectRatio}\n                  guides={false}\n                  crop={this.onCrop}\n                />\n              </div>\n            </div>\n\n            <br />\n\n            <div className=\"row\">\n              <div className=\"col-xs-6\">\n                <ButtonToolbar>\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"aspectRatios\"\n                    defaultValue={\"16:9\"}\n                  >\n                    {this.state.aspectRatios.map(ratio => {\n                      return (\n                        <ToggleButton\n                          key={ratio.name}\n                          value={ratio.name}\n                          onClick={() =>\n                            this.setOption(\"aspectRatio\", ratio.val)\n                          }\n                        >\n                          {ratio.name}\n                        </ToggleButton>\n                      );\n                    })}\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n\n                <br />\n\n                <ButtonGroup>\n                  <Button onClick={() => this.refs.cropper.reset()}>\n                    Reset\n                  </Button>\n                  <Button onClick={() => this.refs.cropper.clear()}>\n                    Clear\n                  </Button>\n                </ButtonGroup>\n              </div>\n\n              <div className=\"col-xs-6\">\n                <div className=\"cropper-preview-container\">\n                  <div className=\"cropper-preview cropper-preview-lg\" />\n                  <div className=\"cropper-preview cropper-preview-md\" />\n                  <div className=\"cropper-preview cropper-preview-sm\" />\n                  <div className=\"cropper-preview cropper-preview-xs\" />\n                </div>\n                <textarea\n                  className=\"col-sm-12\"\n                  style={{ marginTop: \"1.75rem\" }}\n                  rows={9}\n                  readOnly={true}\n                  value={JSON.stringify(this.state.crop, null, 2)}\n                  onChange={e => {}}\n                />\n              </div>\n            </div>\n            <br />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}