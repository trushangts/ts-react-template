{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/BootstrapEditors.js\";\nimport React from \"react\";\nimport { Stats, BigBreadcrumbs, WidgetGrid, JarvisWidget } from \"../../../common\";\nimport MarkdownEditor from \"../../../common/forms/editors/MarkdownEditor\";\nimport Summernote from \"../../../common/forms/editors/Summernote\";\nimport AttachSummernote from \"../../../common/forms/editors/AttachSummernote\";\nimport DetachSummernote from \"../../../common/forms/editors/DetachSummernote\";\nvar demoText = \"### Hello there\\nHow are you?\\n\\nI have bellow task for you :\\n\\nSelect from this text...\\nClick the bold on THIS WORD and make THESE ONE italic\\nLink GOOGLE to google.com\\nTest to insert image (and try to tab after write the image description)\\nTest Preview\\nAnd ending here... Click \\\"List\\\"\\n\\nEnjoy!\";\n\nvar BootstrapEditors =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BootstrapEditors, _React$Component);\n\n  function BootstrapEditors() {\n    _classCallCheck(this, BootstrapEditors);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BootstrapEditors).apply(this, arguments));\n  }\n\n  _createClass(BootstrapEditors, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(BigBreadcrumbs, {\n        items: [\"Forms\", \"Bootstrap Editors\"],\n        icon: \"fa fa-fw fa-pencil-square-o\",\n        className: \"col-xs-12 col-sm-7 col-md-7 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Stats, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(WidgetGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        className: \"col-sm-12 col-md-12 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(JarvisWidget, {\n        id: \"wid-id-0\",\n        colorbutton: false,\n        editbutton: false,\n        togglebutton: false,\n        fullscreenbutton: false,\n        sortable: false,\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"widget-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Markdown\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"widget-body no-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(MarkdownEditor, {\n        value: demoText,\n        className: \"custom-scroll\",\n        height: 270,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })))), React.createElement(JarvisWidget, {\n        id: \"wid-id-1\",\n        className: \"well\",\n        colorbutton: false,\n        editbutton: false,\n        togglebutton: false,\n        fullscreenbutton: false,\n        sortable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"widget-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Markdown API\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"widget-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Markdown API\"), React.createElement(\"table\", {\n        className: \"table table-bordered table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Method Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Description\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"showEditor()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Toggle on the editor visibility\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"showPreview()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Toggle on the preview visibility\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"hidePreview()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Toggle off the editor visibility\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"isDirty()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Check the editor content state, return true if the original content was changed\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"getContent()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Get the editor content\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"setContent(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"string\"), \" content)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Set the editor content\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"findSelection(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"string\"), \" words)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Find some words/sentence within the editor and returned selection object(containing word position and other useful information).\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"getSelection()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Get the current selected chunk of words within the editor.\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"setSelection(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"int\"), \" start, \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"int\"), \" end)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Tell the editor to select a span of words from\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"start\"), \" to \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"end\"), \".\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"replaceSelection(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"string\"), \" content)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Replace the current selected chunk of words within the editor with any content.\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"getNextTab()\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Get the next tab memory. Returned selection object(containing word position and other useful information).\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"setNextTab(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"int\"), \" start, \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"int\"), \" end)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Tell the editor to select a span of words from\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"start\"), \" to \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"end\"), \" at next\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"tab\"), \" keypress event.\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"enableButtons(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"string\"), \" name)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Enabled a button by \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"name\"), \" that described in \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"buttons\"), \" or\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"additionalButtons\"), \" arrays. Passing\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"all\"), \" will enabled all buttons.\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"disableButtons(\", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"string\"), \" name)\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Disabled a button by \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"name\"), \" that described in \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"buttons\"), \" or\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"additionalButtons\"), \" arrays. Passing\", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"all\"), \" will disabled all buttons.\")))))))), React.createElement(\"article\", {\n        className: \"col-sm-12 col-md-12 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(JarvisWidget, {\n        id: \"wid-id-2\",\n        colorbutton: false,\n        editbutton: false,\n        togglebutton: false,\n        fullscreenbutton: false,\n        sortable: false,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"widget-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Summernote (Lightweight)\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"widget-body no-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Summernote, {\n        className: \"summernote\",\n        height: 180,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"widget-footer smart-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-sm btn-primary\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), \" Cancel\")), React.createElement(\"div\", {\n        className: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-sm btn-success\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), \" Save\")), React.createElement(\"label\", {\n        className: \"checkbox pull-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: true,\n        name: \"autosave\",\n        id: \"autosave\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), \"Auto Save\"))))), React.createElement(JarvisWidget, {\n        id: \"wid-id-3\",\n        className: \"well\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"widget-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Example \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"widget-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Summernote Example\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(AttachSummernote, {\n        target: \".click2edit\",\n        className: \"btn btn-primary\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(DetachSummernote, {\n        target: \".click2edit\",\n        className: \"btn btn-primary\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Save\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"click2edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"To change this text with summernote, click `Edit` button\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"HTML:\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"xml\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"<button className=\\\"btn btn-primary\\\" data-smart-edit-summernote=\\\".click2edit\\\">Edit</button> <button className=\\\"btn btn-primary\\\" data-smart-destroy-summernote=\\\".click2edit\\\">Save< /button> <div className=\\\"click2edit\\\">To change this text with summernote, click `Edit` button< /div>\")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Script:\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"javascript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"//\", \"no scripts required\")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Documentation:\"), React.createElement(\"p\", {\n        className: \"alert alert-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Full API for Summernote.js, including keybored shortcuts, PHP Examples, Django installation, and Rails (gem) integration can be found\", React.createElement(\"a\", {\n        href: \"http://hackerwins.github.io/summernote/features.html#api\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"here\")))))))));\n    }\n  }]);\n\n  return BootstrapEditors;\n}(React.Component);\n\nexport { BootstrapEditors as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/BootstrapEditors.js"],"names":["React","Stats","BigBreadcrumbs","WidgetGrid","JarvisWidget","MarkdownEditor","Summernote","AttachSummernote","DetachSummernote","demoText","BootstrapEditors","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,KADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,YAJF,QAKO,iBALP;AAOA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AAEA,IAAIC,QAAQ,oTAAZ;;IAcqBC,gB;;;;;;;;;;;;;6BACV;AACP,aACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAE,CAAC,OAAD,EAAU,mBAAV,CADT;AAEE,QAAA,IAAI,EAAC,6BAFP;AAGE,QAAA,SAAS,EAAC,sCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAS,QAAA,SAAS,EAAC,8BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,YAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,UAAU,EAAE,KAHd;AAIE,QAAA,YAAY,EAAE,KAJhB;AAKE,QAAA,gBAAgB,EAAE,KALpB;AAME,QAAA,QAAQ,EAAE,KANZ;AAOE,QAAA,KAAK,EAAC,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CATF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAED,QADT;AAEE,QAAA,SAAS,EAAC,eAFZ;AAGE,QAAA,MAAM,EAAE,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAlBF,CAFF,EAoCE,oBAAC,YAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,WAAW,EAAE,KAHf;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,YAAY,EAAE,KALhB;AAME,QAAA,gBAAgB,EAAE,KANpB;AAOE,QAAA,QAAQ,EAAE,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CATF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE;AAAO,QAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAJF,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAJF,CAbF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAJF,CAnBF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJF,CA5BF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADb,cADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANF,CAlCF,EA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,YADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IANF,CA1CF,EAsDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAJF,CAtDF,EA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADf,cACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADnC,UADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,UAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFxB,MANF,CA/DF,EA0EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnB,cADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FANF,CA1EF,EAqFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAJF,CArFF,EA+FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADb,cACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADjC,UADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,UAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFxB,cAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,qBANF,CA/FF,EA2GE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,WADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtB,yBAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFL,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,sBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,+BANF,CA3GF,EAwHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADjB,WADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB,yBAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFf,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,sBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,gCANF,CAxHF,CAPF,CAHF,CAFF,CAlBF,CApCF,CAFF,EAqNE;AAAS,QAAA,SAAS,EAAC,8BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,YAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,UAAU,EAAE,KAHd;AAIE,QAAA,YAAY,EAAE,KAJhB;AAKE,QAAA,gBAAgB,EAAE,KALpB;AAME,QAAA,QAAQ,EAAE,KANZ;AAOE,QAAA,KAAK,EAAC,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CATF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAmC,QAAA,MAAM,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,YADF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,UADF,CATF,EAkBE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,cAAc,MAFhB;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,EAAE,EAAC,UAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,cAlBF,CAHF,CAFF,CAlBF,CAFF,EA8DE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CAHF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEArBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2SADF,CA1BF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBArCF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,IADH,wBADF,CAtCF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5CF,EA8CE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kJAIE;AAAG,QAAA,IAAI,EAAC,0DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CA9CF,CAFF,CAVF,CA9DF,CArNF,CADF,CAVF,CADF;AAkXD;;;;EApX2CT,KAAK,CAACW,S;;SAA/BD,gB","sourcesContent":["import React from \"react\";\n\nimport {\n  Stats,\n  BigBreadcrumbs,\n  WidgetGrid,\n  JarvisWidget\n} from \"../../../common\";\n\nimport MarkdownEditor from \"../../../common/forms/editors/MarkdownEditor\";\nimport Summernote from \"../../../common/forms/editors/Summernote\";\nimport AttachSummernote from \"../../../common/forms/editors/AttachSummernote\";\nimport DetachSummernote from \"../../../common/forms/editors/DetachSummernote\";\n\nlet demoText = `### Hello there\nHow are you?\n\nI have bellow task for you :\n\nSelect from this text...\nClick the bold on THIS WORD and make THESE ONE italic\nLink GOOGLE to google.com\nTest to insert image (and try to tab after write the image description)\nTest Preview\nAnd ending here... Click \"List\"\n\nEnjoy!`;\n\nexport default class BootstrapEditors extends React.Component {\n  render() {\n    return (\n      <div id=\"content\">\n        <div className=\"row\">\n          <BigBreadcrumbs\n            items={[\"Forms\", \"Bootstrap Editors\"]}\n            icon=\"fa fa-fw fa-pencil-square-o\"\n            className=\"col-xs-12 col-sm-7 col-md-7 col-lg-4\"\n          />\n          <Stats />\n        </div>\n\n        <WidgetGrid>\n          <div className=\"row\">\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-0\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n                color=\"purple\"\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Markdown</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body no-padding\">\n                    <MarkdownEditor\n                      value={demoText}\n                      className=\"custom-scroll\"\n                      height={270}\n                    />\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-1\"\n                className=\"well\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Markdown API</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <h3>Markdown API</h3>\n\n                    <table className=\"table table-bordered table-striped\">\n                      <thead>\n                        <tr>\n                          <th>Method Name</th>\n                          <th>Description</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <code>showEditor()</code>\n                          </td>\n                          <td>Toggle on the editor visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>showPreview()</code>\n                          </td>\n                          <td>Toggle on the preview visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>hidePreview()</code>\n                          </td>\n                          <td>Toggle off the editor visibility</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>isDirty()</code>\n                          </td>\n                          <td>\n                            Check the editor content state, return true if the\n                            original content was changed\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getContent()</code>\n                          </td>\n                          <td>Get the editor content</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setContent(<em>string</em> content)\n                            </code>\n                          </td>\n                          <td>Set the editor content</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              findSelection(<em>string</em> words)\n                            </code>\n                          </td>\n                          <td>\n                            Find some words/sentence within the editor and\n                            returned selection object(containing word position\n                            and other useful information).\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getSelection()</code>\n                          </td>\n                          <td>\n                            Get the current selected chunk of words within the\n                            editor.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setSelection(<em>int</em> start, <em>int</em> end)\n                            </code>\n                          </td>\n                          <td>\n                            Tell the editor to select a span of words from\n                            <code>start</code> to <code>end</code>.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              replaceSelection(<em>string</em> content)\n                            </code>\n                          </td>\n                          <td>\n                            Replace the current selected chunk of words within\n                            the editor with any content.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>getNextTab()</code>\n                          </td>\n                          <td>\n                            Get the next tab memory. Returned selection\n                            object(containing word position and other useful\n                            information).\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              setNextTab(<em>int</em> start, <em>int</em> end)\n                            </code>\n                          </td>\n                          <td>\n                            Tell the editor to select a span of words from\n                            <code>start</code> to <code>end</code> at next\n                            <code>tab</code> keypress event.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              enableButtons(<em>string</em> name)\n                            </code>\n                          </td>\n                          <td>\n                            Enabled a button by <code>name</code> that described\n                            in <code>buttons</code> or\n                            <code>additionalButtons</code> arrays. Passing\n                            <code>all</code> will enabled all buttons.\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>\n                            <code>\n                              disableButtons(<em>string</em> name)\n                            </code>\n                          </td>\n                          <td>\n                            Disabled a button by <code>name</code> that\n                            described in <code>buttons</code> or\n                            <code>additionalButtons</code> arrays. Passing\n                            <code>all</code> will disabled all buttons.\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n\n            {/* NEW WIDGET START */}\n            <article className=\"col-sm-12 col-md-12 col-lg-6\">\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget\n                id=\"wid-id-2\"\n                colorbutton={false}\n                editbutton={false}\n                togglebutton={false}\n                fullscreenbutton={false}\n                sortable={false}\n                color=\"blue\"\n              >\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Summernote (Lightweight)</h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body no-padding\">\n                    <Summernote className=\"summernote\" height={180} />\n\n                    <div className=\"widget-footer smart-form\">\n                      <div className=\"btn-group\">\n                        <button\n                          className=\"btn btn-sm btn-primary\"\n                          type=\"button\"\n                        >\n                          <i className=\"fa fa-times\" /> Cancel\n                        </button>\n                      </div>\n                      <div className=\"btn-group\">\n                        <button\n                          className=\"btn btn-sm btn-success\"\n                          type=\"button\"\n                        >\n                          <i className=\"fa fa-check\" /> Save\n                        </button>\n                      </div>\n\n                      <label className=\"checkbox pull-left\">\n                        <input\n                          type=\"checkbox\"\n                          defaultChecked\n                          name=\"autosave\"\n                          id=\"autosave\"\n                        />\n                        <i />\n                        Auto Save\n                      </label>\n                    </div>\n                  </div>\n                  {/* end widget content */}\n                </div>\n                {/* end widget div */}\n              </JarvisWidget>\n              {/* end widget */}\n\n              {/* Widget ID (each widget will need unique ID)*/}\n              <JarvisWidget id=\"wid-id-3\" className=\"well\">\n                <header>\n                  <span className=\"widget-icon\">\n                    <i className=\"fa fa-pencil\" />\n                  </span>\n\n                  <h2>Example </h2>\n                </header>\n\n                {/* widget div*/}\n                <div>\n                  {/* widget content */}\n                  <div className=\"widget-body\">\n                    <h3>Summernote Example</h3>\n\n                    <p>\n                      <AttachSummernote\n                        target=\".click2edit\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Edit\n                      </AttachSummernote>\n                      <DetachSummernote\n                        target=\".click2edit\"\n                        className=\"btn btn-primary\"\n                        type=\"button\"\n                      >\n                        Save\n                      </DetachSummernote>\n                    </p>\n                    <p />\n\n                    <div className=\"click2edit\">\n                      To change this text with summernote, click `Edit` button\n                    </div>\n\n                    <h5>HTML:</h5>\n                    <pre>\n                      <code className=\"xml\">\n                        &lt;button className=\"btn btn-primary\"\n                        data-smart-edit-summernote=\".click2edit\"&gt;Edit&lt;/button&gt;\n                        &lt;button className=\"btn btn-primary\"\n                        data-smart-destroy-summernote=\".click2edit\"&gt;Save&lt;\n                        /button&gt; &lt;div className=\"click2edit\"&gt;To change\n                        this text with summernote, click `Edit` button&lt;\n                        /div&gt;\n                      </code>\n                    </pre>\n                    <h5>Script:</h5>\n                    <pre>\n                      <code className=\"javascript\">\n                        {\"//\"}no scripts required\n                      </code>\n                    </pre>\n\n                    <h5>Documentation:</h5>\n\n                    <p className=\"alert alert-info\">\n                      Full API for Summernote.js, including keybored shortcuts,\n                      PHP Examples, Django installation, and Rails (gem)\n                      integration can be found\n                      <a href=\"http://hackerwins.github.io/summernote/features.html#api\">\n                        here\n                      </a>\n                    </p>\n                  </div>\n                  {/* end widget content */}\n\n                  {/* end widget div */}\n                </div>\n              </JarvisWidget>\n              {/* end widget */}\n            </article>\n            {/* WIDGET END */}\n          </div>\n\n          {/* end row */}\n        </WidgetGrid>\n\n        {/* end widget grid */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}