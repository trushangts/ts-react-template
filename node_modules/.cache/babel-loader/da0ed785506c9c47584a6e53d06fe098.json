{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/morris/components/MorrisGraph.js\";\nimport React from \"react\";\n\nvar Raphael = require(\"raphael\");\n\nwindow[\"Raphael\"] = Raphael;\n\nrequire(\"morris.js/morris.min\");\n\nvar Morris = window[\"Morris\"];\n\nvar MorrisGraph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MorrisGraph, _React$Component);\n\n  function MorrisGraph() {\n    _classCallCheck(this, MorrisGraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MorrisGraph).apply(this, arguments));\n  }\n\n  _createClass(MorrisGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderChart(this.props.data);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n        this.renderChart(this.props.data);\n      }\n    }\n  }, {\n    key: \"renderChart\",\n    value: function renderChart(data) {\n      var _this = this;\n\n      if (data) {\n        var options = {\n          element: this.refs.morris,\n          data: data\n        };\n        var keys = [\"xkey\", \"ykeys\", \"labels\", \"pointSize\", \"hideHover\", \"stacked\", \"grid\", \"barColors\", \"formater\", \"events\", \"units\", \"xLabels\", \"xLabelFormat\", \"parseTime\"];\n        keys.forEach(function (key) {\n          if (!!_this.props[key]) {\n            options[key] = _this.props[key];\n          }\n        });\n\n        switch (this.props.type) {\n          case \"area\":\n            Morris.Area(options);\n            break;\n\n          case \"bar\":\n            Morris.Bar(options);\n            break;\n\n          case \"line\":\n            Morris.Line(options);\n            break;\n\n          case \"donut\":\n            Morris.Donut(options);\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart no-padding\",\n        ref: \"morris\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MorrisGraph;\n}(React.Component);\n\nexport { MorrisGraph as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/morris/components/MorrisGraph.js"],"names":["React","Raphael","require","window","Morris","MorrisGraph","renderChart","props","data","prevProps","JSON","stringify","options","element","refs","morris","keys","forEach","key","type","Area","Bar","Line","Donut","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACAC,MAAM,CAAC,SAAD,CAAN,GAAoBF,OAApB;;AACAC,OAAO,CAAC,sBAAD,CAAP;;AACA,IAAME,MAAM,GAAGD,MAAM,CAAC,QAAD,CAArB;;IACqBE,W;;;;;;;;;;;;;wCACC;AAClB,WAAKC,WAAL,CAAiB,KAAKC,KAAL,CAAWC,IAA5B;AACD;;;uCAEkBC,S,EAAW;AAC5B,UAAIC,IAAI,CAACC,SAAL,CAAeF,SAAS,CAACD,IAAzB,MAAmCE,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAAL,CAAWC,IAA1B,CAAvC,EAAwE;AACtE,aAAKF,WAAL,CAAiB,KAAKC,KAAL,CAAWC,IAA5B;AACD;AACF;;;gCAEWA,I,EAAM;AAAA;;AAChB,UAAIA,IAAJ,EAAU;AACR,YAAII,OAAO,GAAG;AACZC,UAAAA,OAAO,EAAE,KAAKC,IAAL,CAAUC,MADP;AAEZP,UAAAA,IAAI,EAAEA;AAFM,SAAd;AAKA,YAAIQ,IAAI,GAAG,CACT,MADS,EAET,OAFS,EAGT,QAHS,EAIT,WAJS,EAKT,WALS,EAMT,SANS,EAOT,MAPS,EAQT,WARS,EAST,UATS,EAUT,QAVS,EAWT,OAXS,EAYT,SAZS,EAaT,cAbS,EAcT,WAdS,CAAX;AAiBAA,QAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,GAAG,EAAI;AAClB,cAAI,CAAC,CAAC,KAAI,CAACX,KAAL,CAAWW,GAAX,CAAN,EAAuB;AACrBN,YAAAA,OAAO,CAACM,GAAD,CAAP,GAAe,KAAI,CAACX,KAAL,CAAWW,GAAX,CAAf;AACD;AACF,SAJD;;AAMA,gBAAQ,KAAKX,KAAL,CAAWY,IAAnB;AACE,eAAK,MAAL;AACEf,YAAAA,MAAM,CAACgB,IAAP,CAAYR,OAAZ;AACA;;AACF,eAAK,KAAL;AACER,YAAAA,MAAM,CAACiB,GAAP,CAAWT,OAAX;AACA;;AACF,eAAK,MAAL;AACER,YAAAA,MAAM,CAACkB,IAAP,CAAYV,OAAZ;AACA;;AACF,eAAK,OAAL;AACER,YAAAA,MAAM,CAACmB,KAAP,CAAaX,OAAb;AACA;;AAEF;AACE;AAfJ;AAiBD;AACF;;;6BAEQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA/DsCZ,KAAK,CAACwB,S;;SAA1BnB,W","sourcesContent":["import React from \"react\";\n\nconst Raphael = require(\"raphael\");\nwindow[\"Raphael\"] = Raphael;\nrequire(\"morris.js/morris.min\");\nconst Morris = window[\"Morris\"];\nexport default class MorrisGraph extends React.Component {\n  componentDidMount() {\n    this.renderChart(this.props.data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      this.renderChart(this.props.data);\n    }\n  }\n\n  renderChart(data) {\n    if (data) {\n      let options = {\n        element: this.refs.morris,\n        data: data\n      };\n\n      let keys = [\n        \"xkey\",\n        \"ykeys\",\n        \"labels\",\n        \"pointSize\",\n        \"hideHover\",\n        \"stacked\",\n        \"grid\",\n        \"barColors\",\n        \"formater\",\n        \"events\",\n        \"units\",\n        \"xLabels\",\n        \"xLabelFormat\",\n        \"parseTime\"\n      ];\n\n      keys.forEach(key => {\n        if (!!this.props[key]) {\n          options[key] = this.props[key];\n        }\n      });\n\n      switch (this.props.type) {\n        case \"area\":\n          Morris.Area(options);\n          break;\n        case \"bar\":\n          Morris.Bar(options);\n          break;\n        case \"line\":\n          Morris.Line(options);\n          break;\n        case \"donut\":\n          Morris.Donut(options);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  render() {\n    return <div className=\"chart no-padding\" ref=\"morris\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}