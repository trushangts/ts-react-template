{"ast":null,"code":"/*\n *  Bootstrap Duallistbox - v3.0.6\n *  A responsive dual listbox widget optimized for Twitter Bootstrap. It works on all modern browsers and on touch devices.\n *  http://www.virtuosoft.eu/code/bootstrap-duallistbox/\n *\n *  Made by István Ujj-Mészáros\n *  Under Apache License v2.0 License\n */\n!function (a, b, c, d) {\n  function e(b, c) {\n    this.element = a(b), this.settings = a.extend({}, w, c), this._defaults = w, this._name = v, this.init();\n  }\n\n  function f(a) {\n    a.element.trigger(\"change\");\n  }\n\n  function g(b) {\n    b.element.find(\"option\").each(function (c, d) {\n      var e = a(d);\n      \"undefined\" == typeof e.data(\"original-index\") && e.data(\"original-index\", b.elementCount++), \"undefined\" == typeof e.data(\"_selected\") && e.data(\"_selected\", !1);\n    });\n  }\n\n  function h(b, c, d) {\n    b.element.find(\"option\").each(function (e, f) {\n      var g = a(f);\n      g.data(\"original-index\") === c && (g.prop(\"selected\", d), d ? (g.attr(\"data-sortindex\", b.sortIndex), b.sortIndex++) : g.removeAttr(\"data-sortindex\"));\n    });\n  }\n\n  function i(a, b) {\n    return a.replace(/\\{(\\d+)\\}/g, function (a, c) {\n      return \"undefined\" != typeof b[c] ? b[c] : a;\n    });\n  }\n\n  function j(a) {\n    if (a.settings.infoText) {\n      var b = a.elements.select1.find(\"option\").length,\n          c = a.elements.select2.find(\"option\").length,\n          d = a.element.find(\"option\").length - a.selectedElements,\n          e = a.selectedElements,\n          f = \"\";\n      f = 0 === d ? a.settings.infoTextEmpty : b === d ? i(a.settings.infoText, [b, d]) : i(a.settings.infoTextFiltered, [b, d]), a.elements.info1.html(f), a.elements.box1.toggleClass(\"filtered\", !(b === d || 0 === d)), f = 0 === e ? a.settings.infoTextEmpty : c === e ? i(a.settings.infoText, [c, e]) : i(a.settings.infoTextFiltered, [c, e]), a.elements.info2.html(f), a.elements.box2.toggleClass(\"filtered\", !(c === e || 0 === e));\n    }\n  }\n\n  function k(b) {\n    b.selectedElements = 0, b.elements.select1.empty(), b.elements.select2.empty(), b.element.find(\"option\").each(function (c, d) {\n      var e = a(d);\n      e.prop(\"selected\") ? (b.selectedElements++, b.elements.select2.append(e.clone(!0).prop(\"selected\", e.data(\"_selected\")))) : b.elements.select1.append(e.clone(!0).prop(\"selected\", e.data(\"_selected\")));\n    }), b.settings.showFilterInputs && (l(b, 1), l(b, 2)), j(b);\n  }\n\n  function l(b, c) {\n    if (b.settings.showFilterInputs) {\n      m(b, c), b.elements[\"select\" + c].empty().scrollTop(0);\n      var d = new RegExp(a.trim(b.elements[\"filterInput\" + c].val()), \"gi\"),\n          e = b.element.find(\"option\"),\n          f = b.element;\n      f = 1 === c ? e.not(\":selected\") : f.find(\"option:selected\"), f.each(function (f, g) {\n        var h = a(g),\n            i = !0;\n        (g.text.match(d) || b.settings.filterOnValues && h.attr(\"value\").match(d)) && (i = !1, b.elements[\"select\" + c].append(h.clone(!0).prop(\"selected\", h.data(\"_selected\")))), e.eq(h.data(\"original-index\")).data(\"filtered\" + c, i);\n      }), j(b);\n    }\n  }\n\n  function m(b, c) {\n    var d = b.element.find(\"option\");\n    b.elements[\"select\" + c].find(\"option\").each(function (b, c) {\n      var e = a(c);\n      d.eq(e.data(\"original-index\")).data(\"_selected\", e.prop(\"selected\"));\n    });\n  }\n\n  function n(a) {\n    var b = a.children(\"option\");\n    b.sort(function (a, b) {\n      var c = parseInt(a.getAttribute(\"data-sortindex\")),\n          d = parseInt(b.getAttribute(\"data-sortindex\"));\n      return c > d ? 1 : d > c ? -1 : 0;\n    }), b.detach().appendTo(a);\n  }\n\n  function o(b) {\n    b.find(\"option\").sort(function (b, c) {\n      return a(b).data(\"original-index\") > a(c).data(\"original-index\") ? 1 : -1;\n    }).appendTo(b);\n  }\n\n  function p(a) {\n    a.elements.select1.find(\"option\").each(function () {\n      a.element.find(\"option\").data(\"_selected\", !1);\n    });\n  }\n\n  function q(b) {\n    \"all\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? \"moved\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 1) : (m(b, 1), m(b, 2)), b.elements.select1.find(\"option:selected\").each(function (c, d) {\n      var e = a(d);\n      e.data(\"filtered1\") || h(b, e.data(\"original-index\"), !0);\n    }), k(b), f(b), b.settings.sortByInputOrder ? n(b.elements.select2) : o(b.elements.select2);\n  }\n\n  function r(b) {\n    \"all\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? \"moved\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 2) : (m(b, 1), m(b, 2)), b.elements.select2.find(\"option:selected\").each(function (c, d) {\n      var e = a(d);\n      e.data(\"filtered2\") || h(b, e.data(\"original-index\"), !1);\n    }), k(b), f(b), o(b.elements.select1), b.settings.sortByInputOrder && n(b.elements.select2);\n  }\n\n  function s(b) {\n    \"all\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? \"moved\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 1) : (m(b, 1), m(b, 2)), b.element.find(\"option\").each(function (c, d) {\n      var e = a(d);\n      e.data(\"filtered1\") || (e.prop(\"selected\", !0), e.attr(\"data-sortindex\", b.sortIndex), b.sortIndex++);\n    }), k(b), f(b);\n  }\n\n  function t(b) {\n    \"all\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect ? \"moved\" !== b.settings.preserveSelectionOnMove || b.settings.moveOnSelect || m(b, 2) : (m(b, 1), m(b, 2)), b.element.find(\"option\").each(function (b, c) {\n      var d = a(c);\n      d.data(\"filtered2\") || (d.prop(\"selected\", !1), d.removeAttr(\"data-sortindex\"));\n    }), k(b), f(b);\n  }\n\n  function u(a) {\n    a.elements.form.submit(function (b) {\n      a.elements.filterInput1.is(\":focus\") ? (b.preventDefault(), a.elements.filterInput1.focusout()) : a.elements.filterInput2.is(\":focus\") && (b.preventDefault(), a.elements.filterInput2.focusout());\n    }), a.element.on(\"bootstrapDualListbox.refresh\", function (b, c) {\n      a.refresh(c);\n    }), a.elements.filterClear1.on(\"click\", function () {\n      a.setNonSelectedFilter(\"\", !0);\n    }), a.elements.filterClear2.on(\"click\", function () {\n      a.setSelectedFilter(\"\", !0);\n    }), a.settings.eventMoveOverride === !1 && a.elements.moveButton.on(\"click\", function () {\n      q(a);\n    }), a.settings.eventMoveAllOverride === !1 && a.elements.moveAllButton.on(\"click\", function () {\n      s(a);\n    }), a.settings.eventRemoveOverride === !1 && a.elements.removeButton.on(\"click\", function () {\n      r(a);\n    }), a.settings.eventRemoveAllOverride === !1 && a.elements.removeAllButton.on(\"click\", function () {\n      t(a);\n    }), a.elements.filterInput1.on(\"change keyup\", function () {\n      l(a, 1);\n    }), a.elements.filterInput2.on(\"change keyup\", function () {\n      l(a, 2);\n    });\n  }\n\n  var v = \"bootstrapDualListbox\",\n      w = {\n    bootstrap2Compatible: !1,\n    filterTextClear: \"show all\",\n    filterPlaceHolder: \"Filter\",\n    moveSelectedLabel: \"Move selected\",\n    moveAllLabel: \"Move all\",\n    removeSelectedLabel: \"Remove selected\",\n    removeAllLabel: \"Remove all\",\n    moveOnSelect: !0,\n    preserveSelectionOnMove: !1,\n    selectedListLabel: !1,\n    nonSelectedListLabel: !1,\n    helperSelectNamePostfix: \"_helper\",\n    selectorMinimalHeight: 100,\n    showFilterInputs: !0,\n    nonSelectedFilter: \"\",\n    selectedFilter: \"\",\n    infoText: \"Showing all {0}\",\n    infoTextFiltered: '<span class=\"label label-warning\">Filtered</span> {0} from {1}',\n    infoTextEmpty: \"Empty list\",\n    filterOnValues: !1,\n    sortByInputOrder: !1,\n    eventMoveOverride: !1,\n    eventMoveAllOverride: !1,\n    eventRemoveOverride: !1,\n    eventRemoveAllOverride: !1\n  },\n      x = /android/i.test(navigator.userAgent.toLowerCase());\n  e.prototype = {\n    init: function init() {\n      this.container = a('<div class=\"bootstrap-duallistbox-container\"> <div class=\"box1\">   <label></label>   <span class=\"info-container\">     <span class=\"info\"></span>     <button type=\"button\" class=\"btn clear1 pull-right\"></button>   </span>   <input class=\"filter\" type=\"text\">   <div class=\"btn-group buttons\">     <button type=\"button\" class=\"btn moveall\">       <i></i>       <i></i>     </button>     <button type=\"button\" class=\"btn move\">       <i></i>     </button>   </div>   <select multiple=\"multiple\"></select> </div> <div class=\"box2\">   <label></label>   <span class=\"info-container\">     <span class=\"info\"></span>     <button type=\"button\" class=\"btn clear2 pull-right\"></button>   </span>   <input class=\"filter\" type=\"text\">   <div class=\"btn-group buttons\">     <button type=\"button\" class=\"btn remove\">       <i></i>     </button>     <button type=\"button\" class=\"btn removeall\">       <i></i>       <i></i>     </button>   </div>   <select multiple=\"multiple\"></select> </div></div>').insertBefore(this.element), this.elements = {\n        originalSelect: this.element,\n        box1: a(\".box1\", this.container),\n        box2: a(\".box2\", this.container),\n        filterInput1: a(\".box1 .filter\", this.container),\n        filterInput2: a(\".box2 .filter\", this.container),\n        filterClear1: a(\".box1 .clear1\", this.container),\n        filterClear2: a(\".box2 .clear2\", this.container),\n        label1: a(\".box1 > label\", this.container),\n        label2: a(\".box2 > label\", this.container),\n        info1: a(\".box1 .info\", this.container),\n        info2: a(\".box2 .info\", this.container),\n        select1: a(\".box1 select\", this.container),\n        select2: a(\".box2 select\", this.container),\n        moveButton: a(\".box1 .move\", this.container),\n        removeButton: a(\".box2 .remove\", this.container),\n        moveAllButton: a(\".box1 .moveall\", this.container),\n        removeAllButton: a(\".box2 .removeall\", this.container),\n        form: a(a(\".box1 .filter\", this.container)[0].form)\n      }, this.originalSelectName = this.element.attr(\"name\") || \"\";\n      var b = \"bootstrap-duallistbox-nonselected-list_\" + this.originalSelectName,\n          c = \"bootstrap-duallistbox-selected-list_\" + this.originalSelectName;\n      return this.elements.select1.attr(\"id\", b), this.elements.select2.attr(\"id\", c), this.elements.label1.attr(\"for\", b), this.elements.label2.attr(\"for\", c), this.selectedElements = 0, this.sortIndex = 0, this.elementCount = 0, this.setBootstrap2Compatible(this.settings.bootstrap2Compatible), this.setFilterTextClear(this.settings.filterTextClear), this.setFilterPlaceHolder(this.settings.filterPlaceHolder), this.setMoveSelectedLabel(this.settings.moveSelectedLabel), this.setMoveAllLabel(this.settings.moveAllLabel), this.setRemoveSelectedLabel(this.settings.removeSelectedLabel), this.setRemoveAllLabel(this.settings.removeAllLabel), this.setMoveOnSelect(this.settings.moveOnSelect), this.setPreserveSelectionOnMove(this.settings.preserveSelectionOnMove), this.setSelectedListLabel(this.settings.selectedListLabel), this.setNonSelectedListLabel(this.settings.nonSelectedListLabel), this.setHelperSelectNamePostfix(this.settings.helperSelectNamePostfix), this.setSelectOrMinimalHeight(this.settings.selectorMinimalHeight), g(this), this.setShowFilterInputs(this.settings.showFilterInputs), this.setNonSelectedFilter(this.settings.nonSelectedFilter), this.setSelectedFilter(this.settings.selectedFilter), this.setInfoText(this.settings.infoText), this.setInfoTextFiltered(this.settings.infoTextFiltered), this.setInfoTextEmpty(this.settings.infoTextEmpty), this.setFilterOnValues(this.settings.filterOnValues), this.setSortByInputOrder(this.settings.sortByInputOrder), this.setEventMoveOverride(this.settings.eventMoveOverride), this.setEventMoveAllOverride(this.settings.eventMoveAllOverride), this.setEventRemoveOverride(this.settings.eventRemoveOverride), this.setEventRemoveAllOverride(this.settings.eventRemoveAllOverride), this.element.hide(), u(this), k(this), this.element;\n    },\n    setBootstrap2Compatible: function setBootstrap2Compatible(a, b) {\n      return this.settings.bootstrap2Compatible = a, a ? (this.container.removeClass(\"row\").addClass(\"row-fluid bs2compatible\"), this.container.find(\".box1, .box2\").removeClass(\"col-md-6\").addClass(\"span6\"), this.container.find(\".clear1, .clear2\").removeClass(\"btn-default btn-xs\").addClass(\"btn-mini\"), this.container.find(\"input, select\").removeClass(\"form-control\"), this.container.find(\".btn\").removeClass(\"btn-default\"), this.container.find(\".moveall > i, .move > i\").removeClass(\"glyphicon glyphicon-arrow-right\").addClass(\"icon-arrow-right\"), this.container.find(\".removeall > i, .remove > i\").removeClass(\"glyphicon glyphicon-arrow-left\").addClass(\"icon-arrow-left\")) : (this.container.removeClass(\"row-fluid bs2compatible\").addClass(\"row\"), this.container.find(\".box1, .box2\").removeClass(\"span6\").addClass(\"col-md-6\"), this.container.find(\".clear1, .clear2\").removeClass(\"btn-mini\").addClass(\"btn-default btn-xs\"), this.container.find(\"input, select\").addClass(\"form-control\"), this.container.find(\".btn\").addClass(\"btn-default\"), this.container.find(\".moveall > i, .move > i\").removeClass(\"icon-arrow-right\").addClass(\"glyphicon glyphicon-arrow-right\"), this.container.find(\".removeall > i, .remove > i\").removeClass(\"icon-arrow-left\").addClass(\"glyphicon glyphicon-arrow-left\")), b && k(this), this.element;\n    },\n    setFilterTextClear: function setFilterTextClear(a, b) {\n      return this.settings.filterTextClear = a, this.elements.filterClear1.html(a), this.elements.filterClear2.html(a), b && k(this), this.element;\n    },\n    setFilterPlaceHolder: function setFilterPlaceHolder(a, b) {\n      return this.settings.filterPlaceHolder = a, this.elements.filterInput1.attr(\"placeholder\", a), this.elements.filterInput2.attr(\"placeholder\", a), b && k(this), this.element;\n    },\n    setMoveSelectedLabel: function setMoveSelectedLabel(a, b) {\n      return this.settings.moveSelectedLabel = a, this.elements.moveButton.attr(\"title\", a), b && k(this), this.element;\n    },\n    setMoveAllLabel: function setMoveAllLabel(a, b) {\n      return this.settings.moveAllLabel = a, this.elements.moveAllButton.attr(\"title\", a), b && k(this), this.element;\n    },\n    setRemoveSelectedLabel: function setRemoveSelectedLabel(a, b) {\n      return this.settings.removeSelectedLabel = a, this.elements.removeButton.attr(\"title\", a), b && k(this), this.element;\n    },\n    setRemoveAllLabel: function setRemoveAllLabel(a, b) {\n      return this.settings.removeAllLabel = a, this.elements.removeAllButton.attr(\"title\", a), b && k(this), this.element;\n    },\n    setMoveOnSelect: function setMoveOnSelect(a, b) {\n      if (x && (a = !0), this.settings.moveOnSelect = a, this.settings.moveOnSelect) {\n        this.container.addClass(\"moveonselect\");\n        var c = this;\n        this.elements.select1.on(\"change\", function () {\n          q(c);\n        }), this.elements.select2.on(\"change\", function () {\n          r(c);\n        });\n      } else this.container.removeClass(\"moveonselect\"), this.elements.select1.off(\"change\"), this.elements.select2.off(\"change\");\n\n      return b && k(this), this.element;\n    },\n    setPreserveSelectionOnMove: function setPreserveSelectionOnMove(a, b) {\n      return x && (a = !1), this.settings.preserveSelectionOnMove = a, b && k(this), this.element;\n    },\n    setSelectedListLabel: function setSelectedListLabel(a, b) {\n      return this.settings.selectedListLabel = a, a ? this.elements.label2.show().html(a) : this.elements.label2.hide().html(a), b && k(this), this.element;\n    },\n    setNonSelectedListLabel: function setNonSelectedListLabel(a, b) {\n      return this.settings.nonSelectedListLabel = a, a ? this.elements.label1.show().html(a) : this.elements.label1.hide().html(a), b && k(this), this.element;\n    },\n    setHelperSelectNamePostfix: function setHelperSelectNamePostfix(a, b) {\n      return this.settings.helperSelectNamePostfix = a, a ? (this.elements.select1.attr(\"name\", this.originalSelectName + a + \"1\"), this.elements.select2.attr(\"name\", this.originalSelectName + a + \"2\")) : (this.elements.select1.removeAttr(\"name\"), this.elements.select2.removeAttr(\"name\")), b && k(this), this.element;\n    },\n    setSelectOrMinimalHeight: function setSelectOrMinimalHeight(a, b) {\n      this.settings.selectorMinimalHeight = a;\n      var c = this.element.height();\n      return this.element.height() < a && (c = a), this.elements.select1.height(c), this.elements.select2.height(c), b && k(this), this.element;\n    },\n    setShowFilterInputs: function setShowFilterInputs(a, b) {\n      return a ? (this.elements.filterInput1.show(), this.elements.filterInput2.show()) : (this.setNonSelectedFilter(\"\"), this.setSelectedFilter(\"\"), k(this), this.elements.filterInput1.hide(), this.elements.filterInput2.hide()), this.settings.showFilterInputs = a, b && k(this), this.element;\n    },\n    setNonSelectedFilter: function setNonSelectedFilter(a, b) {\n      return this.settings.showFilterInputs ? (this.settings.nonSelectedFilter = a, this.elements.filterInput1.val(a), b && k(this), this.element) : void 0;\n    },\n    setSelectedFilter: function setSelectedFilter(a, b) {\n      return this.settings.showFilterInputs ? (this.settings.selectedFilter = a, this.elements.filterInput2.val(a), b && k(this), this.element) : void 0;\n    },\n    setInfoText: function setInfoText(a, b) {\n      return this.settings.infoText = a, b && k(this), this.element;\n    },\n    setInfoTextFiltered: function setInfoTextFiltered(a, b) {\n      return this.settings.infoTextFiltered = a, b && k(this), this.element;\n    },\n    setInfoTextEmpty: function setInfoTextEmpty(a, b) {\n      return this.settings.infoTextEmpty = a, b && k(this), this.element;\n    },\n    setFilterOnValues: function setFilterOnValues(a, b) {\n      return this.settings.filterOnValues = a, b && k(this), this.element;\n    },\n    setSortByInputOrder: function setSortByInputOrder(a, b) {\n      return this.settings.sortByInputOrder = a, b && k(this), this.element;\n    },\n    setEventMoveOverride: function setEventMoveOverride(a, b) {\n      return this.settings.eventMoveOverride = a, b && k(this), this.element;\n    },\n    setEventMoveAllOverride: function setEventMoveAllOverride(a, b) {\n      return this.settings.eventMoveAllOverride = a, b && k(this), this.element;\n    },\n    setEventRemoveOverride: function setEventRemoveOverride(a, b) {\n      return this.settings.eventRemoveOverride = a, b && k(this), this.element;\n    },\n    setEventRemoveAllOverride: function setEventRemoveAllOverride(a, b) {\n      return this.settings.eventRemoveAllOverride = a, b && k(this), this.element;\n    },\n    getContainer: function getContainer() {\n      return this.container;\n    },\n    refresh: function refresh(a) {\n      g(this), a ? p(this) : (m(this, 1), m(this, 2)), k(this);\n    },\n    destroy: function destroy() {\n      return this.container.remove(), this.element.show(), a.data(this, \"plugin_\" + v, null), this.element;\n    }\n  }, a.fn[v] = function (b) {\n    var c = arguments;\n    if (b === d || \"object\" == typeof b) return this.each(function () {\n      a(this).is(\"select\") ? a.data(this, \"plugin_\" + v) || a.data(this, \"plugin_\" + v, new e(this, b)) : a(this).find(\"select\").each(function (c, d) {\n        a(d).bootstrapDualListbox(b);\n      });\n    });\n\n    if (\"string\" == typeof b && \"_\" !== b[0] && \"init\" !== b) {\n      var f;\n      return this.each(function () {\n        var d = a.data(this, \"plugin_\" + v);\n        d instanceof e && \"function\" == typeof d[b] && (f = d[b].apply(d, Array.prototype.slice.call(c, 1)));\n      }), f !== d ? f : this;\n    }\n  };\n}(jQuery, window, document);","map":null,"metadata":{},"sourceType":"script"}