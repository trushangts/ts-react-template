{"ast":null,"code":"/*! bootstrap-progressbar v0.9.0 | Copyright (c) 2012-2015 Stephan Gro√ü | MIT license | http://www.minddust.com */\n!function (t) {\n  \"use strict\";\n\n  var e = function e(n, s) {\n    this.$element = t(n), this.options = t.extend({}, e.defaults, s);\n  };\n\n  e.defaults = {\n    transition_delay: 300,\n    refresh_speed: 50,\n    display_text: \"none\",\n    use_percentage: !0,\n    percent_format: function percent_format(t) {\n      return t + \"%\";\n    },\n    amount_format: function amount_format(t, e) {\n      return t + \" / \" + e;\n    },\n    update: t.noop,\n    done: t.noop,\n    fail: t.noop\n  }, e.prototype.transition = function () {\n    var n = this.$element,\n        s = n.parent(),\n        a = this.$back_text,\n        r = this.$front_text,\n        i = this.options,\n        o = parseInt(n.attr(\"data-transitiongoal\")),\n        h = parseInt(n.attr(\"aria-valuemin\")) || 0,\n        d = parseInt(n.attr(\"aria-valuemax\")) || 100,\n        f = s.hasClass(\"vertical\"),\n        p = i.update && \"function\" == typeof i.update ? i.update : e.defaults.update,\n        u = i.done && \"function\" == typeof i.done ? i.done : e.defaults.done,\n        c = i.fail && \"function\" == typeof i.fail ? i.fail : e.defaults.fail;\n    if (isNaN(o)) return void c(\"data-transitiongoal not set\");\n    var l = Math.round(100 * (o - h) / (d - h));\n\n    if (\"center\" === i.display_text && !a && !r) {\n      this.$back_text = a = t(\"<span>\").addClass(\"progressbar-back-text\").prependTo(s), this.$front_text = r = t(\"<span>\").addClass(\"progressbar-front-text\").prependTo(n);\n      var g;\n      f ? (g = s.css(\"height\"), a.css({\n        height: g,\n        \"line-height\": g\n      }), r.css({\n        height: g,\n        \"line-height\": g\n      }), t(window).resize(function () {\n        g = s.css(\"height\"), a.css({\n          height: g,\n          \"line-height\": g\n        }), r.css({\n          height: g,\n          \"line-height\": g\n        });\n      })) : (g = s.css(\"width\"), r.css({\n        width: g\n      }), t(window).resize(function () {\n        g = s.css(\"width\"), r.css({\n          width: g\n        });\n      }));\n    }\n\n    setTimeout(function () {\n      var t, e, c, g, _;\n\n      f ? n.css(\"height\", l + \"%\") : n.css(\"width\", l + \"%\");\n      var x = setInterval(function () {\n        f ? (c = n.height(), g = s.height()) : (c = n.width(), g = s.width()), t = Math.round(100 * c / g), e = Math.round(h + c / g * (d - h)), t >= l && (t = l, e = o, u(n), clearInterval(x)), \"none\" !== i.display_text && (_ = i.use_percentage ? i.percent_format(t) : i.amount_format(e, d, h), \"fill\" === i.display_text ? n.text(_) : \"center\" === i.display_text && (a.text(_), r.text(_))), n.attr(\"aria-valuenow\", e), p(t, n);\n      }, i.refresh_speed);\n    }, i.transition_delay);\n  };\n  var n = t.fn.progressbar;\n  t.fn.progressbar = function (n) {\n    return this.each(function () {\n      var s = t(this),\n          a = s.data(\"bs.progressbar\"),\n          r = \"object\" == typeof n && n;\n      a && r && t.extend(a.options, r), a || s.data(\"bs.progressbar\", a = new e(this, r)), a.transition();\n    });\n  }, t.fn.progressbar.Constructor = e, t.fn.progressbar.noConflict = function () {\n    return t.fn.progressbar = n, this;\n  };\n}(window.jQuery);","map":null,"metadata":{},"sourceType":"script"}