{"ast":null,"code":"import _objectSpread from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/ui/components/jquery/UiDatepicker.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport \"smartadmin-plugins/es6/jquery-ui.min\";\n\nvar UiDatepicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UiDatepicker, _React$Component);\n\n  function UiDatepicker() {\n    _classCallCheck(this, UiDatepicker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UiDatepicker).apply(this, arguments));\n  }\n\n  _createClass(UiDatepicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onSelectCallbacks = [];\n      var props = this.props;\n      var element = $(this.refs.input);\n\n      if (props.minRestrict) {\n        onSelectCallbacks.push(function (selectedDate) {\n          $(props.minRestrict).datepicker(\"option\", \"minDate\", selectedDate);\n        });\n      }\n\n      if (props.maxRestrict) {\n        onSelectCallbacks.push(function (selectedDate) {\n          $(props.maxRestrict).datepicker(\"option\", \"maxDate\", selectedDate);\n        });\n      } //Let others know about changes to the data field\n\n\n      onSelectCallbacks.push(function (selectedDate) {\n        element.triggerHandler(\"change\");\n        var form = element.closest(\"form\");\n\n        if (typeof form.bootstrapValidator === \"function\") {\n          try {\n            form.bootstrapValidator(\"revalidateField\", element);\n          } catch (e) {\n            console.log(e.message);\n          }\n        }\n      });\n      var options = {\n        prevText: '<i class=\"fa fa-chevron-left\"></i>',\n        nextText: '<i class=\"fa fa-chevron-right\"></i>',\n        onSelect: function onSelect(selectedDate) {\n          onSelectCallbacks.forEach(function (cb) {\n            cb.call(cb, selectedDate);\n          });\n        }\n      };\n      if (props.numberOfMonths) options.numberOfMonths = props.numberOfMonths;\n      if (props.dateFormat) options.dateFormat = props.dateFormat;\n      if (props.defaultDate) options.defaultDate = props.defaultDate;\n      if (props.changeMonth) options.changeMonth = props.changeMonth;\n      element.datepicker(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = _objectSpread({}, this.props),\n          minRestrict = _this$props.minRestrict,\n          maxRestrict = _this$props.maxRestrict,\n          changesMonth = _this$props.changesMonth,\n          numberOfMonths = _this$props.numberOfMonths,\n          dateFormat = _this$props.dateFormat,\n          defaultDate = _this$props.defaultDate,\n          changeMonth = _this$props.changeMonth,\n          props = _objectWithoutProperties(_this$props, [\"minRestrict\", \"maxRestrict\", \"changesMonth\", \"numberOfMonths\", \"dateFormat\", \"defaultDate\", \"changeMonth\"]);\n\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\"\n      }, props, {\n        ref: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UiDatepicker;\n}(React.Component);\n\nexport { UiDatepicker as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/ui/components/jquery/UiDatepicker.js"],"names":["React","$","UiDatepicker","onSelectCallbacks","props","element","refs","input","minRestrict","push","selectedDate","datepicker","maxRestrict","triggerHandler","form","closest","bootstrapValidator","e","console","log","message","options","prevText","nextText","onSelect","forEach","cb","call","numberOfMonths","dateFormat","defaultDate","changeMonth","changesMonth","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\nimport \"smartadmin-plugins/es6/jquery-ui.min\";\n\nexport default class UiDatepicker extends React.Component {\n  componentDidMount() {\n    const onSelectCallbacks = [];\n    const props = this.props;\n    const element = $(this.refs.input);\n\n    if (props.minRestrict) {\n      onSelectCallbacks.push(selectedDate => {\n        $(props.minRestrict).datepicker(\"option\", \"minDate\", selectedDate);\n      });\n    }\n    if (props.maxRestrict) {\n      onSelectCallbacks.push(selectedDate => {\n        $(props.maxRestrict).datepicker(\"option\", \"maxDate\", selectedDate);\n      });\n    }\n\n    //Let others know about changes to the data field\n    onSelectCallbacks.push(selectedDate => {\n      element.triggerHandler(\"change\");\n\n      const form = element.closest(\"form\");\n\n      if (typeof form.bootstrapValidator === \"function\") {\n        try {\n          form.bootstrapValidator(\"revalidateField\", element);\n        } catch (e) {\n          console.log(e.message);\n        }\n      }\n    });\n\n    const options = {\n      prevText: '<i class=\"fa fa-chevron-left\"></i>',\n      nextText: '<i class=\"fa fa-chevron-right\"></i>',\n      onSelect: selectedDate => {\n        onSelectCallbacks.forEach(cb => {\n          cb.call(cb, selectedDate);\n        });\n      }\n    };\n\n    if (props.numberOfMonths) options.numberOfMonths = props.numberOfMonths;\n\n    if (props.dateFormat) options.dateFormat = props.dateFormat;\n\n    if (props.defaultDate) options.defaultDate = props.defaultDate;\n\n    if (props.changeMonth) options.changeMonth = props.changeMonth;\n\n    element.datepicker(options);\n  }\n\n  render() {\n    const {\n      minRestrict,\n      maxRestrict,\n      changesMonth,\n      numberOfMonths,\n      dateFormat,\n      defaultDate,\n      changeMonth,\n      ...props\n    } = { ...this.props };\n    return <input type=\"text\" {...props} ref=\"input\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}