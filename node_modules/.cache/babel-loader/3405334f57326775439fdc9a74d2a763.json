{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { config } from \"../config/config\";\nimport { handleBodyClasses, dumpLayoutToStorage, layoutReducer } from \"../common/layout\";\nimport { userReducer, requestUserInfo } from \"../common/user\";\nimport { navigationReducer } from \"../common/navigation\";\nimport { chatReducer, chatInit } from \"../common/chat\";\nimport { eventsReducer } from \"../common/calendar\";\nimport { todoReducer } from \"../common/todo\";\nimport { i18nReducer, i18nInit } from \"../common/i18n\";\nimport { outlookReducer } from \"../views/outlook\";\nimport { voiceReducer, VoiceMiddleware, voiceControlOn } from \"../common/voice-control\";\nexport var rootReducer = combineReducers({\n  layout: layoutReducer,\n  navigation: navigationReducer,\n  outlook: outlookReducer,\n  user: userReducer,\n  chat: chatReducer,\n  events: eventsReducer,\n  voice: voiceReducer,\n  todo: todoReducer,\n  i18n: i18nReducer\n});\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, handleBodyClasses, dumpLayoutToStorage, VoiceMiddleware)));\nstore.dispatch(chatInit());\nstore.dispatch(requestUserInfo());\nstore.dispatch(i18nInit());\n\nif (config.voice_command_auto) {\n  store.dispatch(voiceControlOn());\n}\n\nexport default store;","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/store/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","config","handleBodyClasses","dumpLayoutToStorage","layoutReducer","userReducer","requestUserInfo","navigationReducer","chatReducer","chatInit","eventsReducer","todoReducer","i18nReducer","i18nInit","outlookReducer","voiceReducer","VoiceMiddleware","voiceControlOn","rootReducer","layout","navigation","outlook","user","chat","events","voice","todo","i18n","store","dispatch","voice_command_auto"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,aAHF,QAIO,kBAJP;AAMA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,gBAA7C;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SACEC,YADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,yBAJP;AAMA,OAAO,IAAMC,WAAW,GAAGrB,eAAe,CAAC;AACzCsB,EAAAA,MAAM,EAAEf,aADiC;AAEzCgB,EAAAA,UAAU,EAAEb,iBAF6B;AAGzCc,EAAAA,OAAO,EAAEP,cAHgC;AAIzCQ,EAAAA,IAAI,EAAEjB,WAJmC;AAKzCkB,EAAAA,IAAI,EAAEf,WALmC;AAMzCgB,EAAAA,MAAM,EAAEd,aANiC;AAOzCe,EAAAA,KAAK,EAAEV,YAPkC;AAQzCW,EAAAA,IAAI,EAAEf,WARmC;AASzCgB,EAAAA,IAAI,EAAEf;AATmC,CAAD,CAAnC;AAYP,IAAMgB,KAAK,GAAGhC,WAAW,CACvBsB,WADuB,EAEvBlB,mBAAmB,CACjBF,eAAe,CACbC,KADa,EAEbG,iBAFa,EAGbC,mBAHa,EAIba,eAJa,CADE,CAFI,CAAzB;AAYAY,KAAK,CAACC,QAAN,CAAepB,QAAQ,EAAvB;AACAmB,KAAK,CAACC,QAAN,CAAevB,eAAe,EAA9B;AAEAsB,KAAK,CAACC,QAAN,CAAehB,QAAQ,EAAvB;;AAIA,IAAIZ,MAAM,CAAC6B,kBAAX,EAA+B;AAC7BF,EAAAA,KAAK,CAACC,QAAN,CAAeZ,cAAc,EAA7B;AACD;;AAED,eAAeW,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { config } from \"../config/config\";\nimport {\n  handleBodyClasses,\n  dumpLayoutToStorage,\n  layoutReducer\n} from \"../common/layout\";\n\nimport { userReducer, requestUserInfo } from \"../common/user\";\nimport { navigationReducer } from \"../common/navigation\";\nimport { chatReducer, chatInit } from \"../common/chat\";\nimport { eventsReducer } from \"../common/calendar\";\nimport { todoReducer } from \"../common/todo\";\nimport { i18nReducer, i18nInit } from \"../common/i18n\";\nimport { outlookReducer } from \"../views/outlook\";\n\nimport {\n  voiceReducer,\n  VoiceMiddleware,\n  voiceControlOn\n} from \"../common/voice-control\";\n\nexport const rootReducer = combineReducers({\n  layout: layoutReducer,\n  navigation: navigationReducer,\n  outlook: outlookReducer,\n  user: userReducer,\n  chat: chatReducer,\n  events: eventsReducer,\n  voice: voiceReducer,\n  todo: todoReducer,\n  i18n: i18nReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunk,\n      handleBodyClasses,\n      dumpLayoutToStorage,\n      VoiceMiddleware\n    )\n  )\n);\n\nstore.dispatch(chatInit());\nstore.dispatch(requestUserInfo());\n\nstore.dispatch(i18nInit());\n\n\n\nif (config.voice_command_auto) {\n  store.dispatch(voiceControlOn());\n}\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}