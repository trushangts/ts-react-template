{"ast":null,"code":"import _toConsumableArray from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CHAT_INIT, CHAT_MESSAGE_TO, CHAT_MESSAGE_SEND } from \"./ChatActions\";\nimport { USER_INFO } from \"../user/UserActions\";\nvar initialState = {\n  user: null,\n  users: [],\n  replyTo: null,\n  messages: []\n};\nexport function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_INFO:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case CHAT_INIT:\n      return _objectSpread({}, state, {\n        messages: action.payload.messages,\n        users: action.payload.users\n      });\n\n    case CHAT_MESSAGE_TO:\n      return _objectSpread({}, state, {\n        replyTo: action.payload\n      });\n\n    case CHAT_MESSAGE_SEND:\n      return _objectSpread({}, state, {\n        messages: [].concat(_toConsumableArray(state.messages), [{\n          user: action.payload.user,\n          body: action.payload.message,\n          date: new Date()\n        }])\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/chat/chatReducer.js"],"names":["CHAT_INIT","CHAT_MESSAGE_TO","CHAT_MESSAGE_SEND","USER_INFO","initialState","user","users","replyTo","messages","chatReducer","state","action","type","payload","body","message","date","Date"],"mappings":";;AAAA,SACEA,SADF,EAEEC,eAFF,EAGEC,iBAHF,QAIO,eAJP;AAMA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,OAAO,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,+BACKO,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAFf;;AAIF,SAAKb,SAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeL,QAF3B;AAGEF,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHxB;;AAMF,SAAKL,eAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFlB;;AAKF,SAAKX,iBAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,QAAQ,+BACHE,KAAK,CAACF,QADH,IAEN;AACEH,UAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeR,IADvB;AAEES,UAAAA,IAAI,EAAEH,MAAM,CAACE,OAAP,CAAeE,OAFvB;AAGEC,UAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHR,SAFM;AAFV;;AAYF;AACE,aAAOP,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\n  CHAT_INIT,\n  CHAT_MESSAGE_TO,\n  CHAT_MESSAGE_SEND\n} from \"./ChatActions\";\n\nimport { USER_INFO } from \"../user/UserActions\";\n\nconst initialState = {\n  user: null,\n  users: [],\n  replyTo: null,\n  messages: []\n};\n\nexport function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER_INFO: \n      return {\n        ...state,\n        user: action.payload\n      }\n    case CHAT_INIT:\n      return {\n        ...state,\n        messages: action.payload.messages,\n        users: action.payload.users\n      };\n\n    case CHAT_MESSAGE_TO:\n      return {\n        ...state,\n        replyTo: action.payload\n      };\n\n    case CHAT_MESSAGE_SEND:\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          {\n            user: action.payload.user,\n            body: action.payload.message,\n            date: new Date()\n          }\n        ]\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}