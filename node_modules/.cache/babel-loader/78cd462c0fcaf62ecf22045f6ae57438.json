{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/inline/components/SparklineContainer.js\";\nimport $ from \"jquery\";\nimport \"smartadmin-plugins/bower_components/relayfoods-jquery.sparkline/dist/jquery.sparkline.js\";\nimport React from \"react\";\nimport { findDOMNode } from \"react-dom\";\n\nvar SparklineContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SparklineContainer, _React$Component);\n\n  function SparklineContainer() {\n    _classCallCheck(this, SparklineContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SparklineContainer).apply(this, arguments));\n  }\n\n  _createClass(SparklineContainer, [{\n    key: \"barChart\",\n    value: function barChart($el) {\n      var barColor = $el.data(\"sparkline-bar-color\") || $el.css(\"color\") || \"#0000f0\";\n      var sparklineHeight = $el.data(\"sparkline-height\") || \"26px\";\n      var sparklineBarWidth = $el.data(\"sparkline-barwidth\") || 5;\n      var sparklineBarSpacing = $el.data(\"sparkline-barspacing\") || 2;\n      var sparklineNegBarColor = $el.data(\"sparkline-negbar-color\") || \"#A90329\";\n      var sparklineStackedColor = $el.data(\"sparkline-barstacked-color\") || [\"#A90329\", \"#0099c6\", \"#98AA56\", \"#da532c\", \"#4490B1\", \"#6E9461\", \"#990099\", \"#B4CAD3\"];\n      $el.sparkline(this.props.values || \"html\", {\n        barColor: barColor,\n        type: \"bar\",\n        height: sparklineHeight,\n        barWidth: sparklineBarWidth,\n        barSpacing: sparklineBarSpacing,\n        stackedBarColor: sparklineStackedColor,\n        negBarColor: sparklineNegBarColor,\n        zeroAxis: \"false\",\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"lineChart\",\n    value: function lineChart($el) {\n      var sparklineHeight = $el.data(\"sparkline-height\") || \"20px\";\n      var sparklineWidth = $el.data(\"sparkline-width\") || \"90px\";\n      var thisLineColor = $el.data(\"sparkline-line-color\") || $el.css(\"color\") || \"#0000f0\";\n      var thisLineWidth = $el.data(\"sparkline-line-width\") || 1;\n      var thisFill = $el.data(\"fill-color\") || \"#c0d0f0\";\n      var thisSpotColor = $el.data(\"sparkline-spot-color\") || \"#f08000\";\n      var thisMinSpotColor = $el.data(\"sparkline-minspot-color\") || \"#ed1c24\";\n      var thisMaxSpotColor = $el.data(\"sparkline-maxspot-color\") || \"#f08000\";\n      var thishighlightSpotColor = $el.data(\"sparkline-highlightspot-color\") || \"#50f050\";\n      var thisHighlightLineColor = $el.data(\"sparkline-highlightline-color\") || \"f02020\";\n      var thisSpotRadius = $el.data(\"sparkline-spotradius\") || 1.5;\n      var thisChartMinYRange = $el.data(\"sparkline-min-y\");\n      var thisChartMaxYRange = $el.data(\"sparkline-max-y\");\n      var thisChartMinXRange = $el.data(\"sparkline-min-x\");\n      var thisChartMaxXRange = $el.data(\"sparkline-max-x\");\n      var thisMinNormValue = $el.data(\"min-val\");\n      var thisMaxNormValue = $el.data(\"max-val\");\n      var thisNormColor = $el.data(\"norm-color\") || \"#c0c0c0\";\n      var thisDrawNormalOnTop = $el.data(\"draw-normal\") || false;\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"line\",\n        width: sparklineWidth,\n        height: sparklineHeight,\n        lineWidth: thisLineWidth,\n        lineColor: thisLineColor,\n        fillColor: thisFill,\n        spotColor: thisSpotColor,\n        minSpotColor: thisMinSpotColor,\n        maxSpotColor: thisMaxSpotColor,\n        highlightSpotColor: thishighlightSpotColor,\n        highlightLineColor: thisHighlightLineColor,\n        spotRadius: thisSpotRadius,\n        chartRangeMin: thisChartMinYRange,\n        chartRangeMax: thisChartMaxYRange,\n        chartRangeMinX: thisChartMinXRange,\n        chartRangeMaxX: thisChartMaxXRange,\n        normalRangeMin: thisMinNormValue,\n        normalRangeMax: thisMaxNormValue,\n        normalRangeColor: thisNormColor,\n        drawNormalOnTop: thisDrawNormalOnTop,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"pieChart\",\n    value: function pieChart($el) {\n      var pieColors = $el.data(\"sparkline-piecolor\") || [\"#B4CAD3\", \"#4490B1\", \"#98AA56\", \"#da532c\", \"#6E9461\", \"#0099c6\", \"#990099\", \"#717D8A\"];\n      var pieWidthHeight = $el.data(\"sparkline-piesize\") || 90;\n      var pieBorderColor = $el.data(\"border-color\") || \"#45494C\";\n      var pieOffset = $el.data(\"sparkline-offset\") || 0;\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"pie\",\n        width: pieWidthHeight,\n        height: pieWidthHeight,\n        tooltipFormat: '<span style=\"color: {{color}}\">&#9679;</span> ({{percent.1}}%)',\n        sliceColors: pieColors,\n        borderWidth: 1,\n        offset: pieOffset,\n        borderColor: pieBorderColor,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"boxChart\",\n    value: function boxChart($el) {\n      var thisBoxWidth = $el.data(\"sparkline-width\") || \"auto\";\n      var thisBoxHeight = $el.data(\"sparkline-height\") || \"auto\";\n      var thisBoxRaw = $el.data(\"sparkline-boxraw\");\n      var thisBoxTarget = $el.data(\"sparkline-targetval\");\n      var thisBoxMin = $el.data(\"sparkline-min\");\n      var thisBoxMax = $el.data(\"sparkline-max\");\n      var thisShowOutlier = $el.data(\"sparkline-showoutlier\") || true;\n      var thisIQR = $el.data(\"sparkline-outlier-iqr\") || 1.5;\n      var thisBoxSpotRadius = $el.data(\"sparkline-spotradius\") || 1.5;\n      var thisBoxLineColor = $el.css(\"color\") || \"#000000\";\n      var thisBoxFillColor = $el.data(\"fill-color\") || \"#c0d0f0\";\n      var thisBoxWhisColor = $el.data(\"sparkline-whis-color\") || \"#000000\";\n      var thisBoxOutlineColor = $el.data(\"sparkline-outline-color\") || \"#303030\";\n      var thisBoxOutlineFill = $el.data(\"sparkline-outlinefill-color\") || \"#f0f0f0\";\n      var thisBoxMedianColor = $el.data(\"sparkline-outlinemedian-color\") || \"#f00000\";\n      var thisBoxTargetColor = $el.data(\"sparkline-outlinetarget-color\") || \"#40a020\";\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"box\",\n        width: thisBoxWidth,\n        height: thisBoxHeight,\n        raw: thisBoxRaw,\n        target: thisBoxTarget,\n        minValue: thisBoxMin,\n        maxValue: thisBoxMax,\n        showOutliers: thisShowOutlier,\n        outlierIQR: thisIQR,\n        spotRadius: thisBoxSpotRadius,\n        boxLineColor: thisBoxLineColor,\n        boxFillColor: thisBoxFillColor,\n        whiskerColor: thisBoxWhisColor,\n        outlierLineColor: thisBoxOutlineColor,\n        outlierFillColor: thisBoxOutlineFill,\n        medianColor: thisBoxMedianColor,\n        targetColor: thisBoxTargetColor,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"bulletChart\",\n    value: function bulletChart($el) {\n      var thisBulletHeight = $el.data(\"sparkline-height\") || \"auto\";\n      var thisBulletWidth = $el.data(\"sparkline-width\") || 2;\n      var thisBulletColor = $el.data(\"sparkline-bullet-color\") || \"#ed1c24\";\n      var thisBulletPerformanceColor = $el.data(\"sparkline-performance-color\") || \"#3030f0\";\n      var thisBulletRangeColors = $el.data(\"sparkline-bulletrange-color\") || [\"#d3dafe\", \"#a8b6ff\", \"#7f94ff\"];\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"bullet\",\n        height: thisBulletHeight,\n        targetWidth: thisBulletWidth,\n        targetColor: thisBulletColor,\n        performanceColor: thisBulletPerformanceColor,\n        rangeColors: thisBulletRangeColors,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"discreteChart\",\n    value: function discreteChart($el) {\n      var thisDiscreteHeight = $el.data(\"sparkline-height\") || 26;\n      var thisDiscreteWidth = $el.data(\"sparkline-width\") || 50;\n      var thisDiscreteLineColor = $el.css(\"color\");\n      var thisDiscreteLineHeight = $el.data(\"sparkline-line-height\") || 5;\n      var thisDiscreteThrushold = $el.data(\"sparkline-threshold\");\n      var thisDiscreteThrusholdColor = $el.data(\"sparkline-threshold-color\") || \"#ed1c24\";\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"discrete\",\n        width: thisDiscreteWidth,\n        height: thisDiscreteHeight,\n        lineColor: thisDiscreteLineColor,\n        lineHeight: thisDiscreteLineHeight,\n        thresholdValue: thisDiscreteThrushold,\n        thresholdColor: thisDiscreteThrusholdColor,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"tristaneChart\",\n    value: function tristaneChart($el) {\n      var thisTristateHeight = $el.data(\"sparkline-height\") || 26;\n      var thisTristatePosBarColor = $el.data(\"sparkline-posbar-color\") || \"#60f060\";\n      var thisTristateNegBarColor = $el.data(\"sparkline-negbar-color\") || \"#f04040\";\n      var thisTristateZeroBarColor = $el.data(\"sparkline-zerobar-color\") || \"#909090\";\n      var thisTristateBarWidth = $el.data(\"sparkline-barwidth\") || 5;\n      var thisTristateBarSpacing = $el.data(\"sparkline-barspacing\") || 2;\n      var thisZeroAxis = $el.data(\"sparkline-zeroaxis\");\n      $el.sparkline(this.props.values || \"html\", {\n        type: \"tristate\",\n        height: thisTristateHeight,\n        posBarColor: thisTristatePosBarColor,\n        negBarColor: thisTristateNegBarColor,\n        zeroBarColor: thisTristateZeroBarColor,\n        barWidth: thisTristateBarWidth,\n        barSpacing: thisTristateBarSpacing,\n        zeroAxis: thisZeroAxis,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"compositeBarChart\",\n    value: function compositeBarChart($el) {\n      var sparklineHeight = $el.data(\"sparkline-height\") || \"20px\";\n      var sparklineWidth = $el.data(\"sparkline-width\") || \"100%\";\n      var sparklineBarWidth = $el.data(\"sparkline-barwidth\") || 3;\n      var thisLineWidth = $el.data(\"sparkline-line-width\") || 1;\n      var thisLineColor = $el.data(\"sparkline-color-top\") || \"#ed1c24\";\n      var thisBarColor = $el.data(\"sparkline-color-bottom\") || \"#333333\";\n      $el.sparkline($el.data(\"sparkline-bar-val\"), {\n        type: \"bar\",\n        width: sparklineWidth,\n        height: sparklineHeight,\n        barColor: thisBarColor,\n        barWidth: sparklineBarWidth,\n        tooltipContainer: this.container //barSpacing: 5\n\n      });\n      $el.sparkline($el.data(\"sparkline-line-val\"), {\n        width: sparklineWidth,\n        height: sparklineHeight,\n        lineColor: thisLineColor,\n        lineWidth: thisLineWidth,\n        composite: true,\n        fillColor: false,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"compositeLineChart\",\n    value: function compositeLineChart($el) {\n      // @todo webpack gets stuck on chunk optimization if uncomment defaults\n      var sparklineHeight = $el.data(\"sparkline-height\"); // || '20px';\n\n      var sparklineWidth = $el.data(\"sparkline-width\"); // || '90px';\n\n      var sparklineValue = $el.data(\"sparkline-bar-val\");\n      var sparklineValueSpots1 = $el.data(\"sparkline-bar-val-spots-top\");\n      var sparklineValueSpots2 = $el.data(\"sparkline-bar-val-spots-bottom\");\n      var thisLineWidth1 = $el.data(\"sparkline-line-width-top\"); //  || 1;\n\n      var thisLineWidth2 = $el.data(\"sparkline-line-width-bottom\"); // || 1;\n\n      var thisLineColor1 = $el.data(\"sparkline-color-top\"); //  || '#333333';\n\n      var thisLineColor2 = $el.data(\"sparkline-color-bottom\"); //  || '#ed1c24';\n\n      var thisSpotRadius1 = $el.data(\"sparkline-spotradius-top\"); // || 1.5;\n\n      var thisSpotRadius2 = $el.data(\"sparkline-spotradius-bottom\"); // || thisSpotRadius1;\n\n      var thisSpotColor = $el.data(\"sparkline-spot-color\"); // || '#f08000';\n\n      var thisMinSpotColor1 = $el.data(\"sparkline-minspot-color-top\"); // || '#ed1c24';\n\n      var thisMaxSpotColor1 = $el.data(\"sparkline-maxspot-color-top\"); //  || '#f08000';\n\n      var thisMinSpotColor2 = $el.data(\"sparkline-minspot-color-bottom\"); // || thisMinSpotColor1;\n\n      var thisMaxSpotColor2 = $el.data(\"sparkline-maxspot-color-bottom\"); //  || thisMaxSpotColor1;\n\n      var thishighlightSpotColor1 = $el.data(\"sparkline-highlightspot-color-top\"); //  || '#50f050';\n\n      var thisHighlightLineColor1 = $el.data(\"sparkline-highlightline-color-top\"); // || '#f02020';\n\n      var thishighlightSpotColor2 = $el.data(\"sparkline-highlightspot-color-bottom\"); // || thishighlightSpotColor1;\n\n      var thisHighlightLineColor2 = $el.data(\"sparkline-highlightline-color-bottom\"); // || thisHighlightLineColor1;\n\n      var thisFillColor1 = $el.data(\"sparkline-fillcolor-top\"); // || 'transparent';\n\n      var thisFillColor2 = $el.data(\"sparkline-fillcolor-bottom\"); // || 'transparent';\n\n      $el.sparkline(sparklineValue, {\n        type: \"line\",\n        spotRadius: thisSpotRadius1,\n        spotColor: thisSpotColor,\n        minSpotColor: thisMinSpotColor1,\n        maxSpotColor: thisMaxSpotColor1,\n        highlightSpotColor: thishighlightSpotColor1,\n        highlightLineColor: thisHighlightLineColor1,\n        valueSpots: sparklineValueSpots1,\n        lineWidth: thisLineWidth1,\n        width: sparklineWidth,\n        height: sparklineHeight,\n        lineColor: thisLineColor1,\n        fillColor: thisFillColor1,\n        tooltipContainer: this.container\n      });\n      $el.sparkline($el.data(\"sparkline-line-val\"), {\n        type: \"line\",\n        spotRadius: thisSpotRadius2,\n        spotColor: thisSpotColor,\n        minSpotColor: thisMinSpotColor2,\n        maxSpotColor: thisMaxSpotColor2,\n        highlightSpotColor: thishighlightSpotColor2,\n        highlightLineColor: thisHighlightLineColor2,\n        valueSpots: sparklineValueSpots2,\n        lineWidth: thisLineWidth2,\n        width: sparklineWidth,\n        height: sparklineHeight,\n        lineColor: thisLineColor2,\n        composite: true,\n        fillColor: thisFillColor2,\n        tooltipContainer: this.container\n      });\n    }\n  }, {\n    key: \"drawElement\",\n    value: function drawElement(el) {\n      var $el = $(el);\n      var sparklineType = $el.data(\"sparkline-type\") || \"bar\";\n\n      if (sparklineType === \"bar\") {\n        this.barChart($el);\n      }\n\n      if (sparklineType === \"line\") {\n        this.lineChart($el);\n      }\n\n      if (sparklineType === \"pie\") {\n        this.pieChart($el);\n      }\n\n      if (sparklineType === \"box\") {\n        this.boxChart($el);\n      }\n\n      if (sparklineType === \"bullet\") {\n        this.bulletChart($el);\n      }\n\n      if (sparklineType === \"discrete\") {\n        this.discreteChart($el);\n      }\n\n      if (sparklineType === \"tristate\") {\n        this.tristaneChart($el);\n      }\n\n      if (sparklineType === \"compositebar\") {\n        this.compositeBarChart($el);\n      }\n\n      if (sparklineType === \"compositeline\") {\n        this.compositeLineChart($el);\n      }\n    }\n  }, {\n    key: \"drawSparklines\",\n    value: function drawSparklines() {\n      var _this = this;\n\n      var container = findDOMNode(this);\n\n      if (this.props.values) {\n        this.drawElement(container);\n      } else {\n        var containers = $(container).find(\".sparkline:not(:has(>canvas))\");\n        [].forEach.call(containers, function (it) {\n          _this.drawElement(it);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.drawSparklines();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawSparklines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classNames = this.props.className + (this.props.values ? \" sparkline\" : \"\");\n      return React.createElement(\"div\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return SparklineContainer;\n}(React.Component);\n\nexport { SparklineContainer as default };\nexport var Sparkline =\n/*#__PURE__*/\nfunction (_SparklineContainer) {\n  _inherits(Sparkline, _SparklineContainer);\n\n  function Sparkline() {\n    _classCallCheck(this, Sparkline);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Sparkline).apply(this, arguments));\n  }\n\n  return Sparkline;\n}(SparklineContainer);","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/inline/components/SparklineContainer.js"],"names":["$","React","findDOMNode","SparklineContainer","$el","barColor","data","css","sparklineHeight","sparklineBarWidth","sparklineBarSpacing","sparklineNegBarColor","sparklineStackedColor","sparkline","props","values","type","height","barWidth","barSpacing","stackedBarColor","negBarColor","zeroAxis","tooltipContainer","container","sparklineWidth","thisLineColor","thisLineWidth","thisFill","thisSpotColor","thisMinSpotColor","thisMaxSpotColor","thishighlightSpotColor","thisHighlightLineColor","thisSpotRadius","thisChartMinYRange","thisChartMaxYRange","thisChartMinXRange","thisChartMaxXRange","thisMinNormValue","thisMaxNormValue","thisNormColor","thisDrawNormalOnTop","width","lineWidth","lineColor","fillColor","spotColor","minSpotColor","maxSpotColor","highlightSpotColor","highlightLineColor","spotRadius","chartRangeMin","chartRangeMax","chartRangeMinX","chartRangeMaxX","normalRangeMin","normalRangeMax","normalRangeColor","drawNormalOnTop","pieColors","pieWidthHeight","pieBorderColor","pieOffset","tooltipFormat","sliceColors","borderWidth","offset","borderColor","thisBoxWidth","thisBoxHeight","thisBoxRaw","thisBoxTarget","thisBoxMin","thisBoxMax","thisShowOutlier","thisIQR","thisBoxSpotRadius","thisBoxLineColor","thisBoxFillColor","thisBoxWhisColor","thisBoxOutlineColor","thisBoxOutlineFill","thisBoxMedianColor","thisBoxTargetColor","raw","target","minValue","maxValue","showOutliers","outlierIQR","boxLineColor","boxFillColor","whiskerColor","outlierLineColor","outlierFillColor","medianColor","targetColor","thisBulletHeight","thisBulletWidth","thisBulletColor","thisBulletPerformanceColor","thisBulletRangeColors","targetWidth","performanceColor","rangeColors","thisDiscreteHeight","thisDiscreteWidth","thisDiscreteLineColor","thisDiscreteLineHeight","thisDiscreteThrushold","thisDiscreteThrusholdColor","lineHeight","thresholdValue","thresholdColor","thisTristateHeight","thisTristatePosBarColor","thisTristateNegBarColor","thisTristateZeroBarColor","thisTristateBarWidth","thisTristateBarSpacing","thisZeroAxis","posBarColor","zeroBarColor","thisBarColor","composite","sparklineValue","sparklineValueSpots1","sparklineValueSpots2","thisLineWidth1","thisLineWidth2","thisLineColor1","thisLineColor2","thisSpotRadius1","thisSpotRadius2","thisMinSpotColor1","thisMaxSpotColor1","thisMinSpotColor2","thisMaxSpotColor2","thishighlightSpotColor1","thisHighlightLineColor1","thishighlightSpotColor2","thisHighlightLineColor2","thisFillColor1","thisFillColor2","valueSpots","el","sparklineType","barChart","lineChart","pieChart","boxChart","bulletChart","discreteChart","tristaneChart","compositeBarChart","compositeLineChart","drawElement","containers","find","forEach","call","it","drawSparklines","classNames","className","children","Component","Sparkline"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nimport \"smartadmin-plugins/bower_components/relayfoods-jquery.sparkline/dist/jquery.sparkline.js\";\n\nimport React from \"react\";\nimport { findDOMNode } from \"react-dom\";\n\nexport default class SparklineContainer extends React.Component {\n  barChart($el) {\n    let barColor =\n      $el.data(\"sparkline-bar-color\") || $el.css(\"color\") || \"#0000f0\";\n    let sparklineHeight = $el.data(\"sparkline-height\") || \"26px\";\n    let sparklineBarWidth = $el.data(\"sparkline-barwidth\") || 5;\n    let sparklineBarSpacing = $el.data(\"sparkline-barspacing\") || 2;\n    let sparklineNegBarColor = $el.data(\"sparkline-negbar-color\") || \"#A90329\";\n    let sparklineStackedColor = $el.data(\"sparkline-barstacked-color\") || [\n      \"#A90329\",\n      \"#0099c6\",\n      \"#98AA56\",\n      \"#da532c\",\n      \"#4490B1\",\n      \"#6E9461\",\n      \"#990099\",\n      \"#B4CAD3\"\n    ];\n\n    $el.sparkline(this.props.values || \"html\", {\n      barColor: barColor,\n      type: \"bar\",\n      height: sparklineHeight,\n      barWidth: sparklineBarWidth,\n      barSpacing: sparklineBarSpacing,\n      stackedBarColor: sparklineStackedColor,\n      negBarColor: sparklineNegBarColor,\n      zeroAxis: \"false\",\n      tooltipContainer: this.container\n    });\n  }\n\n  lineChart($el) {\n    let sparklineHeight = $el.data(\"sparkline-height\") || \"20px\";\n    let sparklineWidth = $el.data(\"sparkline-width\") || \"90px\";\n    let thisLineColor =\n      $el.data(\"sparkline-line-color\") || $el.css(\"color\") || \"#0000f0\";\n    let thisLineWidth = $el.data(\"sparkline-line-width\") || 1;\n    let thisFill = $el.data(\"fill-color\") || \"#c0d0f0\";\n    let thisSpotColor = $el.data(\"sparkline-spot-color\") || \"#f08000\";\n    let thisMinSpotColor = $el.data(\"sparkline-minspot-color\") || \"#ed1c24\";\n    let thisMaxSpotColor = $el.data(\"sparkline-maxspot-color\") || \"#f08000\";\n    let thishighlightSpotColor =\n      $el.data(\"sparkline-highlightspot-color\") || \"#50f050\";\n    let thisHighlightLineColor =\n      $el.data(\"sparkline-highlightline-color\") || \"f02020\";\n    let thisSpotRadius = $el.data(\"sparkline-spotradius\") || 1.5;\n    let thisChartMinYRange = $el.data(\"sparkline-min-y\");\n    let thisChartMaxYRange = $el.data(\"sparkline-max-y\");\n    let thisChartMinXRange = $el.data(\"sparkline-min-x\");\n    let thisChartMaxXRange = $el.data(\"sparkline-max-x\");\n    let thisMinNormValue = $el.data(\"min-val\");\n    let thisMaxNormValue = $el.data(\"max-val\");\n    let thisNormColor = $el.data(\"norm-color\") || \"#c0c0c0\";\n    let thisDrawNormalOnTop = $el.data(\"draw-normal\") || false;\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"line\",\n      width: sparklineWidth,\n      height: sparklineHeight,\n      lineWidth: thisLineWidth,\n      lineColor: thisLineColor,\n      fillColor: thisFill,\n      spotColor: thisSpotColor,\n      minSpotColor: thisMinSpotColor,\n      maxSpotColor: thisMaxSpotColor,\n      highlightSpotColor: thishighlightSpotColor,\n      highlightLineColor: thisHighlightLineColor,\n      spotRadius: thisSpotRadius,\n      chartRangeMin: thisChartMinYRange,\n      chartRangeMax: thisChartMaxYRange,\n      chartRangeMinX: thisChartMinXRange,\n      chartRangeMaxX: thisChartMaxXRange,\n      normalRangeMin: thisMinNormValue,\n      normalRangeMax: thisMaxNormValue,\n      normalRangeColor: thisNormColor,\n      drawNormalOnTop: thisDrawNormalOnTop,\n      tooltipContainer: this.container\n    });\n  }\n\n  pieChart($el) {\n    let pieColors = $el.data(\"sparkline-piecolor\") || [\n      \"#B4CAD3\",\n      \"#4490B1\",\n      \"#98AA56\",\n      \"#da532c\",\n      \"#6E9461\",\n      \"#0099c6\",\n      \"#990099\",\n      \"#717D8A\"\n    ];\n    let pieWidthHeight = $el.data(\"sparkline-piesize\") || 90;\n    let pieBorderColor = $el.data(\"border-color\") || \"#45494C\";\n    let pieOffset = $el.data(\"sparkline-offset\") || 0;\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"pie\",\n      width: pieWidthHeight,\n      height: pieWidthHeight,\n      tooltipFormat:\n        '<span style=\"color: {{color}}\">&#9679;</span> ({{percent.1}}%)',\n      sliceColors: pieColors,\n      borderWidth: 1,\n      offset: pieOffset,\n      borderColor: pieBorderColor,\n      tooltipContainer: this.container\n    });\n  }\n\n  boxChart($el) {\n    let thisBoxWidth = $el.data(\"sparkline-width\") || \"auto\";\n    let thisBoxHeight = $el.data(\"sparkline-height\") || \"auto\";\n    let thisBoxRaw = $el.data(\"sparkline-boxraw\");\n    let thisBoxTarget = $el.data(\"sparkline-targetval\");\n    let thisBoxMin = $el.data(\"sparkline-min\");\n    let thisBoxMax = $el.data(\"sparkline-max\");\n    let thisShowOutlier = $el.data(\"sparkline-showoutlier\") || true;\n    let thisIQR = $el.data(\"sparkline-outlier-iqr\") || 1.5;\n    let thisBoxSpotRadius = $el.data(\"sparkline-spotradius\") || 1.5;\n    let thisBoxLineColor = $el.css(\"color\") || \"#000000\";\n    let thisBoxFillColor = $el.data(\"fill-color\") || \"#c0d0f0\";\n    let thisBoxWhisColor = $el.data(\"sparkline-whis-color\") || \"#000000\";\n    let thisBoxOutlineColor = $el.data(\"sparkline-outline-color\") || \"#303030\";\n    let thisBoxOutlineFill =\n      $el.data(\"sparkline-outlinefill-color\") || \"#f0f0f0\";\n    let thisBoxMedianColor =\n      $el.data(\"sparkline-outlinemedian-color\") || \"#f00000\";\n    let thisBoxTargetColor =\n      $el.data(\"sparkline-outlinetarget-color\") || \"#40a020\";\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"box\",\n      width: thisBoxWidth,\n      height: thisBoxHeight,\n      raw: thisBoxRaw,\n      target: thisBoxTarget,\n      minValue: thisBoxMin,\n      maxValue: thisBoxMax,\n      showOutliers: thisShowOutlier,\n      outlierIQR: thisIQR,\n      spotRadius: thisBoxSpotRadius,\n      boxLineColor: thisBoxLineColor,\n      boxFillColor: thisBoxFillColor,\n      whiskerColor: thisBoxWhisColor,\n      outlierLineColor: thisBoxOutlineColor,\n      outlierFillColor: thisBoxOutlineFill,\n      medianColor: thisBoxMedianColor,\n      targetColor: thisBoxTargetColor,\n      tooltipContainer: this.container\n    });\n  }\n\n  bulletChart($el) {\n    let thisBulletHeight = $el.data(\"sparkline-height\") || \"auto\";\n    let thisBulletWidth = $el.data(\"sparkline-width\") || 2;\n    let thisBulletColor = $el.data(\"sparkline-bullet-color\") || \"#ed1c24\";\n    let thisBulletPerformanceColor =\n      $el.data(\"sparkline-performance-color\") || \"#3030f0\";\n    let thisBulletRangeColors = $el.data(\"sparkline-bulletrange-color\") || [\n      \"#d3dafe\",\n      \"#a8b6ff\",\n      \"#7f94ff\"\n    ];\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"bullet\",\n      height: thisBulletHeight,\n      targetWidth: thisBulletWidth,\n      targetColor: thisBulletColor,\n      performanceColor: thisBulletPerformanceColor,\n      rangeColors: thisBulletRangeColors,\n      tooltipContainer: this.container\n    });\n  }\n\n  discreteChart($el) {\n    let thisDiscreteHeight = $el.data(\"sparkline-height\") || 26;\n    let thisDiscreteWidth = $el.data(\"sparkline-width\") || 50;\n    let thisDiscreteLineColor = $el.css(\"color\");\n    let thisDiscreteLineHeight = $el.data(\"sparkline-line-height\") || 5;\n    let thisDiscreteThrushold = $el.data(\"sparkline-threshold\");\n    let thisDiscreteThrusholdColor =\n      $el.data(\"sparkline-threshold-color\") || \"#ed1c24\";\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"discrete\",\n      width: thisDiscreteWidth,\n      height: thisDiscreteHeight,\n      lineColor: thisDiscreteLineColor,\n      lineHeight: thisDiscreteLineHeight,\n      thresholdValue: thisDiscreteThrushold,\n      thresholdColor: thisDiscreteThrusholdColor,\n      tooltipContainer: this.container\n    });\n  }\n\n  tristaneChart($el) {\n    let thisTristateHeight = $el.data(\"sparkline-height\") || 26;\n    let thisTristatePosBarColor =\n      $el.data(\"sparkline-posbar-color\") || \"#60f060\";\n    let thisTristateNegBarColor =\n      $el.data(\"sparkline-negbar-color\") || \"#f04040\";\n    let thisTristateZeroBarColor =\n      $el.data(\"sparkline-zerobar-color\") || \"#909090\";\n    let thisTristateBarWidth = $el.data(\"sparkline-barwidth\") || 5;\n    let thisTristateBarSpacing = $el.data(\"sparkline-barspacing\") || 2;\n    let thisZeroAxis = $el.data(\"sparkline-zeroaxis\");\n\n    $el.sparkline(this.props.values || \"html\", {\n      type: \"tristate\",\n      height: thisTristateHeight,\n      posBarColor: thisTristatePosBarColor,\n      negBarColor: thisTristateNegBarColor,\n      zeroBarColor: thisTristateZeroBarColor,\n      barWidth: thisTristateBarWidth,\n      barSpacing: thisTristateBarSpacing,\n      zeroAxis: thisZeroAxis,\n      tooltipContainer: this.container\n    });\n  }\n\n  compositeBarChart($el) {\n    let sparklineHeight = $el.data(\"sparkline-height\") || \"20px\";\n    let sparklineWidth = $el.data(\"sparkline-width\") || \"100%\";\n    let sparklineBarWidth = $el.data(\"sparkline-barwidth\") || 3;\n    let thisLineWidth = $el.data(\"sparkline-line-width\") || 1;\n    let thisLineColor = $el.data(\"sparkline-color-top\") || \"#ed1c24\";\n    let thisBarColor = $el.data(\"sparkline-color-bottom\") || \"#333333\";\n\n    $el.sparkline($el.data(\"sparkline-bar-val\"), {\n      type: \"bar\",\n      width: sparklineWidth,\n      height: sparklineHeight,\n      barColor: thisBarColor,\n      barWidth: sparklineBarWidth,\n      tooltipContainer: this.container\n      //barSpacing: 5\n    });\n\n    $el.sparkline($el.data(\"sparkline-line-val\"), {\n      width: sparklineWidth,\n      height: sparklineHeight,\n      lineColor: thisLineColor,\n      lineWidth: thisLineWidth,\n      composite: true,\n      fillColor: false,\n      tooltipContainer: this.container\n    });\n  }\n\n  compositeLineChart($el) {\n    // @todo webpack gets stuck on chunk optimization if uncomment defaults\n\n    let sparklineHeight = $el.data(\"sparkline-height\"); // || '20px';\n    let sparklineWidth = $el.data(\"sparkline-width\"); // || '90px';\n    let sparklineValue = $el.data(\"sparkline-bar-val\");\n    let sparklineValueSpots1 = $el.data(\"sparkline-bar-val-spots-top\");\n    let sparklineValueSpots2 = $el.data(\"sparkline-bar-val-spots-bottom\");\n    let thisLineWidth1 = $el.data(\"sparkline-line-width-top\"); //  || 1;\n    let thisLineWidth2 = $el.data(\"sparkline-line-width-bottom\"); // || 1;\n    let thisLineColor1 = $el.data(\"sparkline-color-top\"); //  || '#333333';\n    let thisLineColor2 = $el.data(\"sparkline-color-bottom\"); //  || '#ed1c24';\n    let thisSpotRadius1 = $el.data(\"sparkline-spotradius-top\"); // || 1.5;\n    let thisSpotRadius2 = $el.data(\"sparkline-spotradius-bottom\"); // || thisSpotRadius1;\n    let thisSpotColor = $el.data(\"sparkline-spot-color\"); // || '#f08000';\n    let thisMinSpotColor1 = $el.data(\"sparkline-minspot-color-top\"); // || '#ed1c24';\n    let thisMaxSpotColor1 = $el.data(\"sparkline-maxspot-color-top\"); //  || '#f08000';\n    let thisMinSpotColor2 = $el.data(\"sparkline-minspot-color-bottom\"); // || thisMinSpotColor1;\n    let thisMaxSpotColor2 = $el.data(\"sparkline-maxspot-color-bottom\"); //  || thisMaxSpotColor1;\n    let thishighlightSpotColor1 = $el.data(\"sparkline-highlightspot-color-top\"); //  || '#50f050';\n    let thisHighlightLineColor1 = $el.data(\"sparkline-highlightline-color-top\"); // || '#f02020';\n    let thishighlightSpotColor2 = $el.data(\n      \"sparkline-highlightspot-color-bottom\"\n    ); // || thishighlightSpotColor1;\n    let thisHighlightLineColor2 = $el.data(\n      \"sparkline-highlightline-color-bottom\"\n    ); // || thisHighlightLineColor1;\n    let thisFillColor1 = $el.data(\"sparkline-fillcolor-top\"); // || 'transparent';\n    let thisFillColor2 = $el.data(\"sparkline-fillcolor-bottom\"); // || 'transparent';\n\n    $el.sparkline(sparklineValue, {\n      type: \"line\",\n      spotRadius: thisSpotRadius1,\n\n      spotColor: thisSpotColor,\n      minSpotColor: thisMinSpotColor1,\n      maxSpotColor: thisMaxSpotColor1,\n      highlightSpotColor: thishighlightSpotColor1,\n      highlightLineColor: thisHighlightLineColor1,\n\n      valueSpots: sparklineValueSpots1,\n\n      lineWidth: thisLineWidth1,\n      width: sparklineWidth,\n      height: sparklineHeight,\n      lineColor: thisLineColor1,\n      fillColor: thisFillColor1,\n      tooltipContainer: this.container\n    });\n\n    $el.sparkline($el.data(\"sparkline-line-val\"), {\n      type: \"line\",\n      spotRadius: thisSpotRadius2,\n\n      spotColor: thisSpotColor,\n      minSpotColor: thisMinSpotColor2,\n      maxSpotColor: thisMaxSpotColor2,\n      highlightSpotColor: thishighlightSpotColor2,\n      highlightLineColor: thisHighlightLineColor2,\n\n      valueSpots: sparklineValueSpots2,\n\n      lineWidth: thisLineWidth2,\n      width: sparklineWidth,\n      height: sparklineHeight,\n      lineColor: thisLineColor2,\n      composite: true,\n      fillColor: thisFillColor2,\n      tooltipContainer: this.container\n    });\n  }\n\n  drawElement(el) {\n    const $el = $(el);\n    const sparklineType = $el.data(\"sparkline-type\") || \"bar\";\n\n    if (sparklineType === \"bar\") {\n      this.barChart($el);\n    }\n\n    if (sparklineType === \"line\") {\n      this.lineChart($el);\n    }\n\n    if (sparklineType === \"pie\") {\n      this.pieChart($el);\n    }\n\n    if (sparklineType === \"box\") {\n      this.boxChart($el);\n    }\n\n    if (sparklineType === \"bullet\") {\n      this.bulletChart($el);\n    }\n\n    if (sparklineType === \"discrete\") {\n      this.discreteChart($el);\n    }\n\n    if (sparklineType === \"tristate\") {\n      this.tristaneChart($el);\n    }\n\n    if (sparklineType === \"compositebar\") {\n      this.compositeBarChart($el);\n    }\n\n    if (sparklineType === \"compositeline\") {\n      this.compositeLineChart($el);\n    }\n  }\n\n  drawSparklines() {\n    const container = findDOMNode(this);\n\n    if (this.props.values) {\n      this.drawElement(container);\n    } else {\n      const containers = $(container).find(\".sparkline:not(:has(>canvas))\");\n      [].forEach.call(containers, it => {\n        this.drawElement(it);\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.drawSparklines();\n  }\n\n  componentDidMount() {\n    this.drawSparklines();\n  }\n\n  render() {\n    const classNames =\n      this.props.className + (this.props.values ? \" sparkline\" : \"\");\n    return <div className={classNames}>{this.props.children}</div>;\n  }\n}\n\nexport class Sparkline extends SparklineContainer {}\n"]},"metadata":{},"sourceType":"module"}