{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/ContactForm.js\";\nimport React from \"react\";\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\nvar validatorOptions = {\n  container: \"#messages\",\n  feedbackIcons: {\n    valid: \"glyphicon glyphicon-ok\",\n    invalid: \"glyphicon glyphicon-remove\",\n    validating: \"glyphicon glyphicon-refresh\"\n  },\n  fields: {\n    fullName: {\n      validators: {\n        notEmpty: {\n          message: \"The full name is required and cannot be empty\"\n        }\n      }\n    },\n    email: {\n      validators: {\n        notEmpty: {\n          message: \"The email address is required and cannot be empty\"\n        },\n        emailAddress: {\n          message: \"The email address is not valid\"\n        }\n      }\n    },\n    title: {\n      validators: {\n        notEmpty: {\n          message: \"The title is required and cannot be empty\"\n        },\n        stringLength: {\n          max: 100,\n          message: \"The title must be less than 100 characters long\"\n        }\n      }\n    },\n    content: {\n      validators: {\n        notEmpty: {\n          message: \"The content is required and cannot be empty\"\n        },\n        stringLength: {\n          max: 500,\n          message: \"The content must be less than 500 characters long\"\n        }\n      }\n    }\n  }\n};\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactForm, _React$Component);\n\n  function ContactForm() {\n    _classCallCheck(this, ContactForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).apply(this, arguments));\n  }\n\n  _createClass(ContactForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit stuff\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BootstrapValidator, {\n        options: validatorOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"contactForm\",\n        onSubmit: this.onSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Showing messages in custom area\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Full name\"), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"fullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-md-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"content\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-9 col-md-offset-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \"Validate\"))))));\n    }\n  }]);\n\n  return ContactForm;\n}(React.Component);\n\nexport { ContactForm as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/ContactForm.js"],"names":["React","BootstrapValidator","validatorOptions","container","feedbackIcons","valid","invalid","validating","fields","fullName","validators","notEmpty","message","email","emailAddress","title","stringLength","max","content","ContactForm","e","preventDefault","console","log","onSubmit","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\n\nconst validatorOptions = {\n  container: \"#messages\",\n  feedbackIcons: {\n    valid: \"glyphicon glyphicon-ok\",\n    invalid: \"glyphicon glyphicon-remove\",\n    validating: \"glyphicon glyphicon-refresh\"\n  },\n  fields: {\n    fullName: {\n      validators: {\n        notEmpty: {\n          message: \"The full name is required and cannot be empty\"\n        }\n      }\n    },\n    email: {\n      validators: {\n        notEmpty: {\n          message: \"The email address is required and cannot be empty\"\n        },\n        emailAddress: {\n          message: \"The email address is not valid\"\n        }\n      }\n    },\n    title: {\n      validators: {\n        notEmpty: {\n          message: \"The title is required and cannot be empty\"\n        },\n        stringLength: {\n          max: 100,\n          message: \"The title must be less than 100 characters long\"\n        }\n      }\n    },\n    content: {\n      validators: {\n        notEmpty: {\n          message: \"The content is required and cannot be empty\"\n        },\n        stringLength: {\n          max: 500,\n          message: \"The content must be less than 500 characters long\"\n        }\n      }\n    }\n  }\n};\n\nexport default class ContactForm extends React.Component {\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit stuff\");\n  }\n\n  render() {\n    return (\n      <BootstrapValidator options={validatorOptions}>\n        <form\n          id=\"contactForm\"\n          onSubmit={this.onSubmit}\n          className=\"form-horizontal\"\n        >\n          <fieldset>\n            <legend>Showing messages in custom area</legend>\n            <div className=\"form-group\">\n              <label className=\"col-md-3 control-label\">Full name</label>\n              <div className=\"col-md-6\">\n                <input type=\"text\" className=\"form-control\" name=\"fullName\" />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-md-3 control-label\">Email</label>\n              <div className=\"col-md-6\">\n                <input type=\"text\" className=\"form-control\" name=\"email\" />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-md-3 control-label\">Title</label>\n              <div className=\"col-md-6\">\n                <input type=\"text\" className=\"form-control\" name=\"title\" />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-md-3 control-label\">Content</label>\n              <div className=\"col-md-6\">\n                <textarea className=\"form-control\" name=\"content\" rows=\"5\" />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            {/* #messages is where the messages are placed inside */}\n            <div className=\"form-group\">\n              <div className=\"col-md-9 col-md-offset-3\">\n                <div id=\"messages\" />\n              </div>\n            </div>\n          </fieldset>\n\n          <div className=\"form-actions\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <button className=\"btn btn-default\" type=\"submit\">\n                  <i className=\"fa fa-eye\" />\n                  Validate\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </BootstrapValidator>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}