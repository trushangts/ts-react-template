{"ast":null,"code":"(function (e) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"jquery\"], e);\n  } else {\n    e(jQuery);\n  }\n})(function (e) {\n  \"use strict\";\n\n  var t = {},\n      n = Math.max,\n      r = Math.min;\n  t.c = {};\n  t.c.d = e(document);\n\n  t.c.t = function (e) {\n    return e.originalEvent.touches.length - 1;\n  };\n\n  t.o = function () {\n    var n = this;\n    this.o = null;\n    this.$ = null;\n    this.i = null;\n    this.g = null;\n    this.v = null;\n    this.cv = null;\n    this.x = 0;\n    this.y = 0;\n    this.w = 0;\n    this.h = 0;\n    this.$c = null;\n    this.c = null;\n    this.t = 0;\n    this.isInit = false;\n    this.fgColor = null;\n    this.pColor = null;\n    this.dH = null;\n    this.cH = null;\n    this.eH = null;\n    this.rH = null;\n    this.scale = 1;\n    this.relative = false;\n    this.relativeWidth = false;\n    this.relativeHeight = false;\n    this.$div = null;\n\n    this.run = function () {\n      var t = function t(e, _t) {\n        var r;\n\n        for (r in _t) {\n          n.o[r] = _t[r];\n        }\n\n        n._carve().init();\n\n        n._configure()._draw();\n      };\n\n      if (this.$.data(\"kontroled\")) return;\n      this.$.data(\"kontroled\", true);\n      this.extend();\n      this.o = e.extend({\n        min: this.$.data(\"min\") !== undefined ? this.$.data(\"min\") : 0,\n        max: this.$.data(\"max\") !== undefined ? this.$.data(\"max\") : 100,\n        stopper: true,\n        readOnly: this.$.data(\"readonly\") || this.$.attr(\"readonly\") === \"readonly\",\n        cursor: this.$.data(\"cursor\") === true && 30 || this.$.data(\"cursor\") || 0,\n        thickness: this.$.data(\"thickness\") && Math.max(Math.min(this.$.data(\"thickness\"), 1), .01) || .35,\n        lineCap: this.$.data(\"linecap\") || \"butt\",\n        width: this.$.data(\"width\") || 200,\n        height: this.$.data(\"height\") || 200,\n        displayInput: this.$.data(\"displayinput\") == null || this.$.data(\"displayinput\"),\n        displayPrevious: this.$.data(\"displayprevious\"),\n        fgColor: this.$.data(\"fgcolor\") || \"#87CEEB\",\n        inputColor: this.$.data(\"inputcolor\"),\n        font: this.$.data(\"font\") || \"Arial\",\n        fontWeight: this.$.data(\"font-weight\") || \"bold\",\n        inline: false,\n        step: this.$.data(\"step\") || 1,\n        rotation: this.$.data(\"rotation\"),\n        draw: null,\n        change: null,\n        cancel: null,\n        release: null,\n        format: function format(e) {\n          return e;\n        },\n        parse: function parse(e) {\n          return parseFloat(e);\n        }\n      }, this.o);\n      this.o.flip = this.o.rotation === \"anticlockwise\" || this.o.rotation === \"acw\";\n\n      if (!this.o.inputColor) {\n        this.o.inputColor = this.o.fgColor;\n      }\n\n      if (this.$.is(\"fieldset\")) {\n        this.v = {};\n        this.i = this.$.find(\"input\");\n        this.i.each(function (t) {\n          var r = e(this);\n          n.i[t] = r;\n          n.v[t] = n.o.parse(r.val());\n          r.bind(\"change blur\", function () {\n            var e = {};\n            e[t] = r.val();\n            n.val(n._validate(e));\n          });\n        });\n        this.$.find(\"legend\").remove();\n      } else {\n        this.i = this.$;\n        this.v = this.o.parse(this.$.val());\n        this.v === \"\" && (this.v = this.o.min);\n        this.$.bind(\"change blur\", function () {\n          n.val(n._validate(n.o.parse(n.$.val())));\n        });\n      }\n\n      !this.o.displayInput && this.$.hide();\n      this.$c = e(document.createElement(\"canvas\")).attr({\n        width: this.o.width,\n        height: this.o.height\n      });\n      this.$div = e('<div style=\"' + (this.o.inline ? \"display:inline;\" : \"\") + \"width:\" + this.o.width + \"px;height:\" + this.o.height + \"px;\" + '\"></div>');\n      this.$.wrap(this.$div).before(this.$c);\n      this.$div = this.$.parent();\n\n      if (typeof G_vmlCanvasManager !== \"undefined\") {\n        G_vmlCanvasManager.initElement(this.$c[0]);\n      }\n\n      this.c = this.$c[0].getContext ? this.$c[0].getContext(\"2d\") : null;\n\n      if (!this.c) {\n        throw {\n          name: \"CanvasNotSupportedException\",\n          message: \"Canvas not supported. Please use excanvas on IE8.0.\",\n          toString: function toString() {\n            return this.name + \": \" + this.message;\n          }\n        };\n      }\n\n      this.scale = (window.devicePixelRatio || 1) / (this.c.webkitBackingStorePixelRatio || this.c.mozBackingStorePixelRatio || this.c.msBackingStorePixelRatio || this.c.oBackingStorePixelRatio || this.c.backingStorePixelRatio || 1);\n      this.relativeWidth = this.o.width % 1 !== 0 && this.o.width.indexOf(\"%\");\n      this.relativeHeight = this.o.height % 1 !== 0 && this.o.height.indexOf(\"%\");\n      this.relative = this.relativeWidth || this.relativeHeight;\n\n      this._carve();\n\n      if (this.v instanceof Object) {\n        this.cv = {};\n        this.copy(this.v, this.cv);\n      } else {\n        this.cv = this.v;\n      }\n\n      this.$.bind(\"configure\", t).parent().bind(\"configure\", t);\n\n      this._listen()._configure()._xy().init();\n\n      this.isInit = true;\n      this.$.val(this.o.format(this.v));\n\n      this._draw();\n\n      return this;\n    };\n\n    this._carve = function () {\n      if (this.relative) {\n        var e = this.relativeWidth ? this.$div.parent().width() * parseInt(this.o.width) / 100 : this.$div.parent().width(),\n            t = this.relativeHeight ? this.$div.parent().height() * parseInt(this.o.height) / 100 : this.$div.parent().height();\n        this.w = this.h = Math.min(e, t);\n      } else {\n        this.w = this.o.width;\n        this.h = this.o.height;\n      }\n\n      this.$div.css({\n        width: this.w + \"px\",\n        height: this.h + \"px\"\n      });\n      this.$c.attr({\n        width: this.w,\n        height: this.h\n      });\n\n      if (this.scale !== 1) {\n        this.$c[0].width = this.$c[0].width * this.scale;\n        this.$c[0].height = this.$c[0].height * this.scale;\n        this.$c.width(this.w);\n        this.$c.height(this.h);\n      }\n\n      return this;\n    };\n\n    this._draw = function () {\n      var e = true;\n      n.g = n.c;\n      n.clear();\n      n.dH && (e = n.dH());\n      e !== false && n.draw();\n    };\n\n    this._touch = function (e) {\n      var r = function r(e) {\n        var t = n.xy2val(e.originalEvent.touches[n.t].pageX, e.originalEvent.touches[n.t].pageY);\n        if (t == n.cv) return;\n        if (n.cH && n.cH(t) === false) return;\n        n.change(n._validate(t));\n\n        n._draw();\n      };\n\n      this.t = t.c.t(e);\n      r(e);\n      t.c.d.bind(\"touchmove.k\", r).bind(\"touchend.k\", function () {\n        t.c.d.unbind(\"touchmove.k touchend.k\");\n        n.val(n.cv);\n      });\n      return this;\n    };\n\n    this._mouse = function (e) {\n      var r = function r(e) {\n        var t = n.xy2val(e.pageX, e.pageY);\n        if (t == n.cv) return;\n        if (n.cH && n.cH(t) === false) return;\n        n.change(n._validate(t));\n\n        n._draw();\n      };\n\n      r(e);\n      t.c.d.bind(\"mousemove.k\", r).bind(\"keyup.k\", function (e) {\n        if (e.keyCode === 27) {\n          t.c.d.unbind(\"mouseup.k mousemove.k keyup.k\");\n          if (n.eH && n.eH() === false) return;\n          n.cancel();\n        }\n      }).bind(\"mouseup.k\", function (e) {\n        t.c.d.unbind(\"mousemove.k mouseup.k keyup.k\");\n        n.val(n.cv);\n      });\n      return this;\n    };\n\n    this._xy = function () {\n      var e = this.$c.offset();\n      this.x = e.left;\n      this.y = e.top;\n      return this;\n    };\n\n    this._listen = function () {\n      if (!this.o.readOnly) {\n        this.$c.bind(\"mousedown\", function (e) {\n          e.preventDefault();\n\n          n._xy()._mouse(e);\n        }).bind(\"touchstart\", function (e) {\n          e.preventDefault();\n\n          n._xy()._touch(e);\n        });\n        this.listen();\n      } else {\n        this.$.attr(\"readonly\", \"readonly\");\n      }\n\n      if (this.relative) {\n        e(window).resize(function () {\n          n._carve().init();\n\n          n._draw();\n        });\n      }\n\n      return this;\n    };\n\n    this._configure = function () {\n      if (this.o.draw) this.dH = this.o.draw;\n      if (this.o.change) this.cH = this.o.change;\n      if (this.o.cancel) this.eH = this.o.cancel;\n      if (this.o.release) this.rH = this.o.release;\n\n      if (this.o.displayPrevious) {\n        this.pColor = this.h2rgba(this.o.fgColor, \"0.4\");\n        this.fgColor = this.h2rgba(this.o.fgColor, \"0.6\");\n      } else {\n        this.fgColor = this.o.fgColor;\n      }\n\n      return this;\n    };\n\n    this._clear = function () {\n      this.$c[0].width = this.$c[0].width;\n    };\n\n    this._validate = function (e) {\n      var t = ~~((e < 0 ? -.5 : .5) + e / this.o.step) * this.o.step;\n      return Math.round(t * 100) / 100;\n    };\n\n    this.listen = function () {};\n\n    this.extend = function () {};\n\n    this.init = function () {};\n\n    this.change = function (e) {};\n\n    this.val = function (e) {};\n\n    this.xy2val = function (e, t) {};\n\n    this.draw = function () {};\n\n    this.clear = function () {\n      this._clear();\n    };\n\n    this.h2rgba = function (e, t) {\n      var n;\n      e = e.substring(1, 7);\n      n = [parseInt(e.substring(0, 2), 16), parseInt(e.substring(2, 4), 16), parseInt(e.substring(4, 6), 16)];\n      return \"rgba(\" + n[0] + \",\" + n[1] + \",\" + n[2] + \",\" + t + \")\";\n    };\n\n    this.copy = function (e, t) {\n      for (var n in e) {\n        t[n] = e[n];\n      }\n    };\n  };\n\n  t.Dial = function () {\n    t.o.call(this);\n    this.startAngle = null;\n    this.xy = null;\n    this.radius = null;\n    this.lineWidth = null;\n    this.cursorExt = null;\n    this.w2 = null;\n    this.PI2 = 2 * Math.PI;\n\n    this.extend = function () {\n      this.o = e.extend({\n        bgColor: this.$.data(\"bgcolor\") || \"#EEEEEE\",\n        angleOffset: this.$.data(\"angleoffset\") || 0,\n        angleArc: this.$.data(\"anglearc\") || 360,\n        inline: true\n      }, this.o);\n    };\n\n    this.val = function (e, t) {\n      if (null != e) {\n        e = this.o.parse(e);\n\n        if (t !== false && e != this.v && this.rH && this.rH(e) === false) {\n          return;\n        }\n\n        this.cv = this.o.stopper ? n(r(e, this.o.max), this.o.min) : e;\n        this.v = this.cv;\n        this.$.val(this.o.format(this.v));\n\n        this._draw();\n      } else {\n        return this.v;\n      }\n    };\n\n    this.xy2val = function (e, t) {\n      var i, s;\n      i = Math.atan2(e - (this.x + this.w2), -(t - this.y - this.w2)) - this.angleOffset;\n\n      if (this.o.flip) {\n        i = this.angleArc - i - this.PI2;\n      }\n\n      if (this.angleArc != this.PI2 && i < 0 && i > -.5) {\n        i = 0;\n      } else if (i < 0) {\n        i += this.PI2;\n      }\n\n      s = i * (this.o.max - this.o.min) / this.angleArc + this.o.min;\n      this.o.stopper && (s = n(r(s, this.o.max), this.o.min));\n      return s;\n    };\n\n    this.listen = function () {\n      var t = this,\n          i,\n          s,\n          o = function o(e) {\n        e.preventDefault();\n        var o = e.originalEvent,\n            u = o.detail || o.wheelDeltaX,\n            a = o.detail || o.wheelDeltaY,\n            f = t._validate(t.o.parse(t.$.val())) + (u > 0 || a > 0 ? t.o.step : u < 0 || a < 0 ? -t.o.step : 0);\n        f = n(r(f, t.o.max), t.o.min);\n        t.val(f, false);\n\n        if (t.rH) {\n          clearTimeout(i);\n          i = setTimeout(function () {\n            t.rH(f);\n            i = null;\n          }, 100);\n\n          if (!s) {\n            s = setTimeout(function () {\n              if (i) t.rH(f);\n              s = null;\n            }, 200);\n          }\n        }\n      },\n          u,\n          a,\n          f = 1,\n          l = {\n        37: -t.o.step,\n        38: t.o.step,\n        39: t.o.step,\n        40: -t.o.step\n      };\n\n      this.$.bind(\"keydown\", function (i) {\n        var s = i.keyCode;\n\n        if (s >= 96 && s <= 105) {\n          s = i.keyCode = s - 48;\n        }\n\n        u = parseInt(String.fromCharCode(s));\n\n        if (isNaN(u)) {\n          s !== 13 && s !== 8 && s !== 9 && s !== 189 && (s !== 190 || t.$.val().match(/\\./)) && i.preventDefault();\n\n          if (e.inArray(s, [37, 38, 39, 40]) > -1) {\n            i.preventDefault();\n            var o = t.o.parse(t.$.val()) + l[s] * f;\n            t.o.stopper && (o = n(r(o, t.o.max), t.o.min));\n            t.change(t._validate(o));\n\n            t._draw();\n\n            a = window.setTimeout(function () {\n              f *= 2;\n            }, 30);\n          }\n        }\n      }).bind(\"keyup\", function (e) {\n        if (isNaN(u)) {\n          if (a) {\n            window.clearTimeout(a);\n            a = null;\n            f = 1;\n            t.val(t.$.val());\n          }\n        } else {\n          t.$.val() > t.o.max && t.$.val(t.o.max) || t.$.val() < t.o.min && t.$.val(t.o.min);\n        }\n      });\n      this.$c.bind(\"mousewheel DOMMouseScroll\", o);\n      this.$.bind(\"mousewheel DOMMouseScroll\", o);\n    };\n\n    this.init = function () {\n      if (this.v < this.o.min || this.v > this.o.max) {\n        this.v = this.o.min;\n      }\n\n      this.$.val(this.v);\n      this.w2 = this.w / 2;\n      this.cursorExt = this.o.cursor / 100;\n      this.xy = this.w2 * this.scale;\n      this.lineWidth = this.xy * this.o.thickness;\n      this.lineCap = this.o.lineCap;\n      this.radius = this.xy - this.lineWidth / 2;\n      this.o.angleOffset && (this.o.angleOffset = isNaN(this.o.angleOffset) ? 0 : this.o.angleOffset);\n      this.o.angleArc && (this.o.angleArc = isNaN(this.o.angleArc) ? this.PI2 : this.o.angleArc);\n      this.angleOffset = this.o.angleOffset * Math.PI / 180;\n      this.angleArc = this.o.angleArc * Math.PI / 180;\n      this.startAngle = 1.5 * Math.PI + this.angleOffset;\n      this.endAngle = 1.5 * Math.PI + this.angleOffset + this.angleArc;\n      var e = n(String(Math.abs(this.o.max)).length, String(Math.abs(this.o.min)).length, 2) + 2;\n      this.o.displayInput && this.i.css({\n        width: (this.w / 2 + 4 >> 0) + \"px\",\n        height: (this.w / 3 >> 0) + \"px\",\n        position: \"absolute\",\n        \"vertical-align\": \"middle\",\n        \"margin-top\": (this.w / 3 >> 0) + \"px\",\n        \"margin-left\": \"-\" + (this.w * 3 / 4 + 2 >> 0) + \"px\",\n        border: 0,\n        background: \"none\",\n        font: this.o.fontWeight + \" \" + (this.w / e >> 0) + \"px \" + this.o.font,\n        \"text-align\": \"center\",\n        color: this.o.inputColor || this.o.fgColor,\n        padding: \"0px\",\n        \"-webkit-appearance\": \"none\"\n      }) || this.i.css({\n        width: \"0px\",\n        visibility: \"hidden\"\n      });\n    };\n\n    this.change = function (e) {\n      this.cv = e;\n      this.$.val(this.o.format(e));\n    };\n\n    this.angle = function (e) {\n      return (e - this.o.min) * this.angleArc / (this.o.max - this.o.min);\n    };\n\n    this.arc = function (e) {\n      var t, n;\n      e = this.angle(e);\n\n      if (this.o.flip) {\n        t = this.endAngle + 1e-5;\n        n = t - e - 1e-5;\n      } else {\n        t = this.startAngle - 1e-5;\n        n = t + e + 1e-5;\n      }\n\n      this.o.cursor && (t = n - this.cursorExt) && (n = n + this.cursorExt);\n      return {\n        s: t,\n        e: n,\n        d: this.o.flip && !this.o.cursor\n      };\n    };\n\n    this.draw = function () {\n      var e = this.g,\n          t = this.arc(this.cv),\n          n,\n          r = 1;\n      e.lineWidth = this.lineWidth;\n      e.lineCap = this.lineCap;\n\n      if (this.o.bgColor !== \"none\") {\n        e.beginPath();\n        e.strokeStyle = this.o.bgColor;\n        e.arc(this.xy, this.xy, this.radius, this.endAngle - 1e-5, this.startAngle + 1e-5, true);\n        e.stroke();\n      }\n\n      if (this.o.displayPrevious) {\n        n = this.arc(this.v);\n        e.beginPath();\n        e.strokeStyle = this.pColor;\n        e.arc(this.xy, this.xy, this.radius, n.s, n.e, n.d);\n        e.stroke();\n        r = this.cv == this.v;\n      }\n\n      e.beginPath();\n      e.strokeStyle = r ? this.o.fgColor : this.fgColor;\n      e.arc(this.xy, this.xy, this.radius, t.s, t.e, t.d);\n      e.stroke();\n    };\n\n    this.cancel = function () {\n      this.val(this.v);\n    };\n  };\n\n  e.fn.dial = e.fn.knob = function (n) {\n    return this.each(function () {\n      var r = new t.Dial();\n      r.o = n;\n      r.$ = e(this);\n      r.run();\n    }).parent();\n  };\n});","map":null,"metadata":{},"sourceType":"script"}