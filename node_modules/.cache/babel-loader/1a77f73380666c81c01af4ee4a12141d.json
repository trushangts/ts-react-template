{"ast":null,"code":"import _objectSpread from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/chat/components/AsideChatUser.js\";\nimport React from \"react\";\nimport { Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { ChatBoxes } from \"../lib/ChatBoxes\";\nimport * as ChatActions from \"../ChatActions\";\nimport { HtmlRender } from \"../../../common/utils/components\";\n\nvar AsideChatUser =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AsideChatUser, _React$Component);\n\n  function AsideChatUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AsideChatUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AsideChatUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chatId: \"chatbox-user-\" + Date.now()\n    };\n\n    _this.openChatBox = function (e) {\n      e.preventDefault();\n      var user = _this.props.user;\n\n      var _user$username$split = user.username.split(/ /),\n          _user$username$split2 = _slicedToArray(_user$username$split, 2),\n          firstname = _user$username$split2[0],\n          lastname = _user$username$split2[1];\n\n      var id = _this.state.chatId;\n\n      if (!user.status !== \"ofline\") {\n        ChatBoxes.addBox(id, {\n          title: user.username,\n          first_name: firstname,\n          last_name: lastname,\n          status: user.status || \"online\",\n          alertmsg: user.status === \"busy\" ? user.username + \" is in a meeting. Please do not disturb!\" : \"\",\n          alertshow: user.status === \"busy\" //you can add your own options too\n\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AsideChatUser, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      return React.createElement(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        placement: \"right\",\n        overlay: React.createElement(Popover, {\n          id: \"popover-1-popover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"usr-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: user.picture,\n          alt: user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"usr-card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, user.username), React.createElement(HtmlRender, {\n          html: user.role,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        className: \"usr\",\n        onClick: this.openChatBox,\n        \"data-chat-id\": this.state.chatId,\n        \"data-chat-status\": user.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), user.username)));\n    }\n  }]);\n\n  return AsideChatUser;\n}(React.Component);\n\nexport default connect(function (state) {\n  var _state = _objectSpread({}, state),\n      chat = _state.chat;\n\n  return {\n    chat: chat\n  };\n}, function (dispatch) {\n  return bindActionCreators(ChatActions, dispatch);\n})(AsideChatUser);","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/chat/components/AsideChatUser.js"],"names":["React","Popover","OverlayTrigger","bindActionCreators","connect","ChatBoxes","ChatActions","HtmlRender","AsideChatUser","state","chatId","Date","now","openChatBox","e","preventDefault","user","props","username","split","firstname","lastname","id","status","addBox","title","first_name","last_name","alertmsg","alertshow","picture","role","Component","chat","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { ChatBoxes } from \"../lib/ChatBoxes\";\nimport * as ChatActions from \"../ChatActions\";\nimport { HtmlRender } from \"../../../common/utils/components\";\n\nclass AsideChatUser extends React.Component {\n  state = {\n    chatId: \"chatbox-user-\" + Date.now()\n  };\n\n  openChatBox = e => {\n    e.preventDefault();\n    let user = this.props.user;\n    let [firstname, lastname] = user.username.split(/ /);\n    let id = this.state.chatId;\n    if (!user.status !== \"ofline\") {\n      ChatBoxes.addBox(id, {\n        title: user.username,\n        first_name: firstname,\n        last_name: lastname,\n        status: user.status || \"online\",\n        alertmsg:\n          user.status === \"busy\"\n            ? user.username + \" is in a meeting. Please do not disturb!\"\n            : \"\",\n        alertshow: user.status === \"busy\"\n        //you can add your own options too\n      });\n    }\n  };\n\n  render() {\n    const user = this.props.user;\n    return (\n      <dt>\n        <OverlayTrigger\n          placement=\"right\"\n          overlay={\n            <Popover id=\"popover-1-popover\">\n              <div className=\"usr-card\">\n                <img src={user.picture} alt={user.username} />\n                <div className=\"usr-card-content\">\n                  <h3>{user.username}</h3>\n\n                  <HtmlRender html={user.role} />\n                </div>\n              </div>\n            </Popover>\n          }\n        >\n          <a\n            href=\"/#\"\n            className=\"usr\"\n            onClick={this.openChatBox}\n            data-chat-id={this.state.chatId}\n            data-chat-status={user.status}\n          >\n            <i />\n            {user.username}\n          </a>\n        </OverlayTrigger>\n      </dt>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const { chat } = { ...state };\n    return {\n      chat\n    };\n  },\n  dispatch => {\n    return bindActionCreators(ChatActions, dispatch);\n  }\n)(AsideChatUser);\n"]},"metadata":{},"sourceType":"module"}