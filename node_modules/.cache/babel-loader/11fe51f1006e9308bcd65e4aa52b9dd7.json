{"ast":null,"code":"import _objectSpread from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/widgets/components/JarvisWidget.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport classnames from \"classnames\";\n\nvar JarvisWidget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JarvisWidget, _React$Component);\n\n  function JarvisWidget() {\n    _classCallCheck(this, JarvisWidget);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(JarvisWidget).apply(this, arguments));\n  }\n\n  _createClass(JarvisWidget, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"genId\",\n    value: function genId() {\n      if (this.props.name) {\n        return this.props.name;\n      } else {\n        var id = \"jarviswidget-\" + JarvisWidget.counter++;\n        id = id.toLowerCase().replace(/\\W+/gm, \"-\");\n        var url = window.location.pathname.substr(1).replace(/\\//g, \"-\");\n        id = url + \"--\" + id;\n        return id;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var colorClass = this.props.color ? \"jarviswidget-color-\" + this.props.color : \"\";\n      var classes = classnames(\"jarviswidget\", colorClass, this.props.className, {\n        \"jarviswidget-sortable\": this.props.sortable === true\n      });\n      var widgetProps = {};\n      this.widgetId = this.props.id || this.genId();\n      [\"colorbutton\", \"editbutton\", \"togglebutton\", \"deletebutton\", \"fullscreenbutton\", \"custombutton\", \"sortable\"].forEach(function (option) {\n        if (!_this.props[option]) widgetProps[\"data-widget-\" + option] = false;\n      });\n      [\"hidden\", \"collapsed\"].forEach(function (option) {\n        if (_this.props[option]) widgetProps[\"data-widget-\" + option] = true;\n      });\n      [\"refresh\", \"load\"].forEach(function (option) {\n        if (_this.props[option]) widgetProps[\"data-widget-\" + option] = _this.props[option];\n      });\n      return React.createElement(\"div\", Object.assign({\n        className: classes,\n        id: this.widgetId,\n        ref: \"widget\"\n      }, widgetProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.props.children);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $(this.refs[this.widgetId]).find(\".widget-body\").prepend(\"\");\n    }\n  }]);\n\n  return JarvisWidget;\n}(React.Component);\n\nJarvisWidget.counter = 0;\nJarvisWidget.defaultProps = {\n  colorbutton: true,\n  editbutton: true,\n  togglebutton: true,\n  deletebutton: true,\n  fullscreenbutton: true,\n  custombutton: false,\n  collapsed: false,\n  sortable: true,\n  hidden: false,\n  color: false,\n  load: false,\n  refresh: false\n};\nexport { JarvisWidget as default };\n\nvar Body =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Body, _React$Component2);\n\n  function Body() {\n    _classCallCheck(this, Body);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Body).apply(this, arguments));\n  }\n\n  _createClass(Body, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = _objectSpread({}, this.props),\n          children = _this$props.children,\n          props = _this$props.props;\n\n      return React.createElement(\"div\", Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), this.props.editbutton ? React.createElement(\"div\", {\n        className: \"jarviswidget-editbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        className: \"widget-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, children));\n    }\n  }]);\n\n  return Body;\n}(React.Component);\n\nJarvisWidget.Body = Body;","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/widgets/components/JarvisWidget.js"],"names":["React","$","classnames","JarvisWidget","props","name","id","counter","toLowerCase","replace","url","window","location","pathname","substr","colorClass","color","classes","className","sortable","widgetProps","widgetId","genId","forEach","option","children","refs","find","prepend","Component","defaultProps","colorbutton","editbutton","togglebutton","deletebutton","fullscreenbutton","custombutton","collapsed","hidden","load","refresh","Body"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\nimport classnames from \"classnames\";\n\n\nexport default class JarvisWidget extends React.Component {\n  static counter = 0;\n\n  static defaultProps = {\n    colorbutton: true,\n    editbutton: true,\n    togglebutton: true,\n    deletebutton: true,\n    fullscreenbutton: true,\n    custombutton: false,\n    collapsed: false,\n    sortable: true,\n    hidden: false,\n    color: false,\n    load: false,\n    refresh: false\n  };\n\n  componentWillMount() {}\n\n  genId() {\n    if (this.props.name) {\n      return this.props.name;\n    } else {\n      let id = \"jarviswidget-\" + JarvisWidget.counter++;\n      id = id.toLowerCase().replace(/\\W+/gm, \"-\");\n\n      let url = window.location.pathname.substr(1).replace(/\\//g, \"-\");\n      id = url + \"--\" + id;\n\n      return id;\n    }\n  }\n\n  render() {\n    const colorClass = this.props.color\n      ? \"jarviswidget-color-\" + this.props.color\n      : \"\";\n\n    const classes = classnames(\n      \"jarviswidget\",\n      colorClass,\n      this.props.className,\n      {\n        \"jarviswidget-sortable\": this.props.sortable === true\n      }\n    );\n    const widgetProps = {};\n\n    this.widgetId = this.props.id || this.genId();\n\n    [\n      \"colorbutton\",\n      \"editbutton\",\n      \"togglebutton\",\n      \"deletebutton\",\n      \"fullscreenbutton\",\n      \"custombutton\",\n      \"sortable\"\n    ].forEach(option => {\n      if (!this.props[option]) widgetProps[\"data-widget-\" + option] = false;\n    });\n\n    [\"hidden\", \"collapsed\"].forEach(option => {\n      if (this.props[option]) widgetProps[\"data-widget-\" + option] = true;\n    });\n\n    [\"refresh\", \"load\"].forEach(option => {\n      if (this.props[option])\n        widgetProps[\"data-widget-\" + option] = this.props[option];\n    });\n\n    return (\n      <div className={classes} id={this.widgetId} ref=\"widget\" {...widgetProps}>\n        {this.props.children}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    $(this.refs[this.widgetId])\n      .find(\".widget-body\")\n      .prepend(\"\");\n  }\n}\n\nclass Body extends React.Component {\n  render() {\n    const { children, props } = { ...this.props };\n    return (\n      <div {...props}>\n        {this.props.editbutton ? (\n          <div className=\"jarviswidget-editbox\">\n            <input className=\"form-control\" type=\"text\" />\n          </div>\n        ) : null}\n        <div className=\"widget-body\">{children}</div>\n      </div>\n    );\n  }\n}\n\nJarvisWidget.Body = Body;\n"]},"metadata":{},"sourceType":"module"}