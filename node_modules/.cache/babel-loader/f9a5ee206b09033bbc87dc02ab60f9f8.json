{"ast":null,"code":"/*\n * bootstrap-tagsinput v0.7.1 by Tim Schlechter\n * \n */\n!function (a) {\n  \"use strict\";\n\n  function b(b, c) {\n    this.isInit = !0, this.itemsArray = [], this.$element = a(b), this.$element.hide(), this.isSelect = \"SELECT\" === b.tagName, this.multiple = this.isSelect && b.hasAttribute(\"multiple\"), this.objectItems = c && c.itemValue, this.placeholderText = b.hasAttribute(\"placeholder\") ? this.$element.attr(\"placeholder\") : \"\", this.inputSize = Math.max(1, this.placeholderText.length), this.$container = a('<div class=\"bootstrap-tagsinput\"></div>'), this.$input = a('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container), this.$element.before(this.$container), this.build(c), this.isInit = !1;\n  }\n\n  function c(a, b) {\n    if (\"function\" != typeof a[b]) {\n      var c = a[b];\n\n      a[b] = function (a) {\n        return a[c];\n      };\n    }\n  }\n\n  function d(a, b) {\n    if (\"function\" != typeof a[b]) {\n      var c = a[b];\n\n      a[b] = function () {\n        return c;\n      };\n    }\n  }\n\n  function e(a) {\n    return a ? i.text(a).html() : \"\";\n  }\n\n  function f(a) {\n    var b = 0;\n\n    if (document.selection) {\n      a.focus();\n      var c = document.selection.createRange();\n      c.moveStart(\"character\", -a.value.length), b = c.text.length;\n    } else (a.selectionStart || \"0\" == a.selectionStart) && (b = a.selectionStart);\n\n    return b;\n  }\n\n  function g(b, c) {\n    var d = !1;\n    return a.each(c, function (a, c) {\n      if (\"number\" == typeof c && b.which === c) return d = !0, !1;\n\n      if (b.which === c.which) {\n        var e = !c.hasOwnProperty(\"altKey\") || b.altKey === c.altKey,\n            f = !c.hasOwnProperty(\"shiftKey\") || b.shiftKey === c.shiftKey,\n            g = !c.hasOwnProperty(\"ctrlKey\") || b.ctrlKey === c.ctrlKey;\n        if (e && f && g) return d = !0, !1;\n      }\n    }), d;\n  }\n\n  var h = {\n    tagClass: function tagClass(a) {\n      return \"label label-info\";\n    },\n    itemValue: function itemValue(a) {\n      return a ? a.toString() : a;\n    },\n    itemText: function itemText(a) {\n      return this.itemValue(a);\n    },\n    itemTitle: function itemTitle(a) {\n      return null;\n    },\n    freeInput: !0,\n    addOnBlur: !0,\n    maxTags: void 0,\n    maxChars: void 0,\n    confirmKeys: [13, 44],\n    delimiter: \",\",\n    delimiterRegex: null,\n    cancelConfirmKeysOnEmpty: !1,\n    onTagExists: function onTagExists(a, b) {\n      b.hide().fadeIn();\n    },\n    trimValue: !1,\n    allowDuplicates: !1\n  };\n  b.prototype = {\n    constructor: b,\n    add: function add(b, c, d) {\n      var f = this;\n\n      if (!(f.options.maxTags && f.itemsArray.length >= f.options.maxTags) && (b === !1 || b)) {\n        if (\"string\" == typeof b && f.options.trimValue && (b = a.trim(b)), \"object\" == typeof b && !f.objectItems) throw \"Can't add objects when itemValue option is not set\";\n\n        if (!b.toString().match(/^\\s*$/)) {\n          if (f.isSelect && !f.multiple && f.itemsArray.length > 0 && f.remove(f.itemsArray[0]), \"string\" == typeof b && \"INPUT\" === this.$element[0].tagName) {\n            var g = f.options.delimiterRegex ? f.options.delimiterRegex : f.options.delimiter,\n                h = b.split(g);\n\n            if (h.length > 1) {\n              for (var i = 0; i < h.length; i++) {\n                this.add(h[i], !0);\n              }\n\n              return void (c || f.pushVal());\n            }\n          }\n\n          var j = f.options.itemValue(b),\n              k = f.options.itemText(b),\n              l = f.options.tagClass(b),\n              m = f.options.itemTitle(b),\n              n = a.grep(f.itemsArray, function (a) {\n            return f.options.itemValue(a) === j;\n          })[0];\n\n          if (!n || f.options.allowDuplicates) {\n            if (!(f.items().toString().length + b.length + 1 > f.options.maxInputLength)) {\n              var o = a.Event(\"beforeItemAdd\", {\n                item: b,\n                cancel: !1,\n                options: d\n              });\n\n              if (f.$element.trigger(o), !o.cancel) {\n                f.itemsArray.push(b);\n                var p = a('<span class=\"tag ' + e(l) + (null !== m ? '\" title=\"' + m : \"\") + '\">' + e(k) + '<span data-role=\"remove\"></span></span>');\n                p.data(\"item\", b), f.findInputWrapper().before(p), p.after(\" \");\n                var q = a('option[value=\"' + encodeURIComponent(j) + '\"]', f.$element).length || a('option[value=\"' + e(j) + '\"]', f.$element).length;\n\n                if (f.isSelect && !q) {\n                  var r = a(\"<option selected>\" + e(k) + \"</option>\");\n                  r.data(\"item\", b), r.attr(\"value\", j), f.$element.append(r);\n                }\n\n                c || f.pushVal(), (f.options.maxTags === f.itemsArray.length || f.items().toString().length === f.options.maxInputLength) && f.$container.addClass(\"bootstrap-tagsinput-max\"), a(\".typeahead, .twitter-typeahead\", f.$container).length && f.$input.typeahead(\"val\", \"\"), this.isInit ? f.$element.trigger(a.Event(\"itemAddedOnInit\", {\n                  item: b,\n                  options: d\n                })) : f.$element.trigger(a.Event(\"itemAdded\", {\n                  item: b,\n                  options: d\n                }));\n              }\n            }\n          } else if (f.options.onTagExists) {\n            var s = a(\".tag\", f.$container).filter(function () {\n              return a(this).data(\"item\") === n;\n            });\n            f.options.onTagExists(b, s);\n          }\n        }\n      }\n    },\n    remove: function remove(b, c, d) {\n      var e = this;\n\n      if (e.objectItems && (b = \"object\" == typeof b ? a.grep(e.itemsArray, function (a) {\n        return e.options.itemValue(a) == e.options.itemValue(b);\n      }) : a.grep(e.itemsArray, function (a) {\n        return e.options.itemValue(a) == b;\n      }), b = b[b.length - 1]), b) {\n        var f = a.Event(\"beforeItemRemove\", {\n          item: b,\n          cancel: !1,\n          options: d\n        });\n        if (e.$element.trigger(f), f.cancel) return;\n        a(\".tag\", e.$container).filter(function () {\n          return a(this).data(\"item\") === b;\n        }).remove(), a(\"option\", e.$element).filter(function () {\n          return a(this).data(\"item\") === b;\n        }).remove(), -1 !== a.inArray(b, e.itemsArray) && e.itemsArray.splice(a.inArray(b, e.itemsArray), 1);\n      }\n\n      c || e.pushVal(), e.options.maxTags > e.itemsArray.length && e.$container.removeClass(\"bootstrap-tagsinput-max\"), e.$element.trigger(a.Event(\"itemRemoved\", {\n        item: b,\n        options: d\n      }));\n    },\n    removeAll: function removeAll() {\n      var b = this;\n\n      for (a(\".tag\", b.$container).remove(), a(\"option\", b.$element).remove(); b.itemsArray.length > 0;) {\n        b.itemsArray.pop();\n      }\n\n      b.pushVal();\n    },\n    refresh: function refresh() {\n      var b = this;\n      a(\".tag\", b.$container).each(function () {\n        var c = a(this),\n            d = c.data(\"item\"),\n            f = b.options.itemValue(d),\n            g = b.options.itemText(d),\n            h = b.options.tagClass(d);\n\n        if (c.attr(\"class\", null), c.addClass(\"tag \" + e(h)), c.contents().filter(function () {\n          return 3 == this.nodeType;\n        })[0].nodeValue = e(g), b.isSelect) {\n          var i = a(\"option\", b.$element).filter(function () {\n            return a(this).data(\"item\") === d;\n          });\n          i.attr(\"value\", f);\n        }\n      });\n    },\n    items: function items() {\n      return this.itemsArray;\n    },\n    pushVal: function pushVal() {\n      var b = this,\n          c = a.map(b.items(), function (a) {\n        return b.options.itemValue(a).toString();\n      });\n      b.$element.val(c, !0).trigger(\"change\");\n    },\n    build: function build(b) {\n      var e = this;\n\n      if (e.options = a.extend({}, h, b), e.objectItems && (e.options.freeInput = !1), c(e.options, \"itemValue\"), c(e.options, \"itemText\"), d(e.options, \"tagClass\"), e.options.typeahead) {\n        var i = e.options.typeahead || {};\n        d(i, \"source\"), e.$input.typeahead(a.extend({}, i, {\n          source: function source(b, c) {\n            function d(a) {\n              for (var b = [], d = 0; d < a.length; d++) {\n                var g = e.options.itemText(a[d]);\n                f[g] = a[d], b.push(g);\n              }\n\n              c(b);\n            }\n\n            this.map = {};\n            var f = this.map,\n                g = i.source(b);\n            a.isFunction(g.success) ? g.success(d) : a.isFunction(g.then) ? g.then(d) : a.when(g).then(d);\n          },\n          updater: function updater(a) {\n            return e.add(this.map[a]), this.map[a];\n          },\n          matcher: function matcher(a) {\n            return -1 !== a.toLowerCase().indexOf(this.query.trim().toLowerCase());\n          },\n          sorter: function sorter(a) {\n            return a.sort();\n          },\n          highlighter: function highlighter(a) {\n            var b = new RegExp(\"(\" + this.query + \")\", \"gi\");\n            return a.replace(b, \"<strong>$1</strong>\");\n          }\n        }));\n      }\n\n      if (e.options.typeaheadjs) {\n        var j = null,\n            k = {},\n            l = e.options.typeaheadjs;\n        a.isArray(l) ? (j = l[0], k = l[1]) : k = l, e.$input.typeahead(j, k).on(\"typeahead:selected\", a.proxy(function (a, b) {\n          k.valueKey ? e.add(b[k.valueKey]) : e.add(b), e.$input.typeahead(\"val\", \"\");\n        }, e));\n      }\n\n      e.$container.on(\"click\", a.proxy(function (a) {\n        e.$element.attr(\"disabled\") || e.$input.removeAttr(\"disabled\"), e.$input.focus();\n      }, e)), e.options.addOnBlur && e.options.freeInput && e.$input.on(\"focusout\", a.proxy(function (b) {\n        0 === a(\".typeahead, .twitter-typeahead\", e.$container).length && (e.add(e.$input.val()), e.$input.val(\"\"));\n      }, e)), e.$container.on(\"keydown\", \"input\", a.proxy(function (b) {\n        var c = a(b.target),\n            d = e.findInputWrapper();\n        if (e.$element.attr(\"disabled\")) return void e.$input.attr(\"disabled\", \"disabled\");\n\n        switch (b.which) {\n          case 8:\n            if (0 === f(c[0])) {\n              var g = d.prev();\n              g.length && e.remove(g.data(\"item\"));\n            }\n\n            break;\n\n          case 46:\n            if (0 === f(c[0])) {\n              var h = d.next();\n              h.length && e.remove(h.data(\"item\"));\n            }\n\n            break;\n\n          case 37:\n            var i = d.prev();\n            0 === c.val().length && i[0] && (i.before(d), c.focus());\n            break;\n\n          case 39:\n            var j = d.next();\n            0 === c.val().length && j[0] && (j.after(d), c.focus());\n        }\n\n        var k = c.val().length;\n        Math.ceil(k / 5);\n        c.attr(\"size\", Math.max(this.inputSize, c.val().length));\n      }, e)), e.$container.on(\"keypress\", \"input\", a.proxy(function (b) {\n        var c = a(b.target);\n        if (e.$element.attr(\"disabled\")) return void e.$input.attr(\"disabled\", \"disabled\");\n        var d = c.val(),\n            f = e.options.maxChars && d.length >= e.options.maxChars;\n        e.options.freeInput && (g(b, e.options.confirmKeys) || f) && (0 !== d.length && (e.add(f ? d.substr(0, e.options.maxChars) : d), c.val(\"\")), e.options.cancelConfirmKeysOnEmpty === !1 && b.preventDefault());\n        var h = c.val().length;\n        Math.ceil(h / 5);\n        c.attr(\"size\", Math.max(this.inputSize, c.val().length));\n      }, e)), e.$container.on(\"click\", \"[data-role=remove]\", a.proxy(function (b) {\n        e.$element.attr(\"disabled\") || e.remove(a(b.target).closest(\".tag\").data(\"item\"));\n      }, e)), e.options.itemValue === h.itemValue && (\"INPUT\" === e.$element[0].tagName ? e.add(e.$element.val()) : a(\"option\", e.$element).each(function () {\n        e.add(a(this).attr(\"value\"), !0);\n      }));\n    },\n    destroy: function destroy() {\n      var a = this;\n      a.$container.off(\"keypress\", \"input\"), a.$container.off(\"click\", \"[role=remove]\"), a.$container.remove(), a.$element.removeData(\"tagsinput\"), a.$element.show();\n    },\n    focus: function focus() {\n      this.$input.focus();\n    },\n    input: function input() {\n      return this.$input;\n    },\n    findInputWrapper: function findInputWrapper() {\n      for (var b = this.$input[0], c = this.$container[0]; b && b.parentNode !== c;) {\n        b = b.parentNode;\n      }\n\n      return a(b);\n    }\n  }, a.fn.tagsinput = function (c, d, e) {\n    var f = [];\n    return this.each(function () {\n      var g = a(this).data(\"tagsinput\");\n      if (g) {\n        if (c || d) {\n          if (void 0 !== g[c]) {\n            if (3 === g[c].length && void 0 !== e) var h = g[c](d, null, e);else var h = g[c](d);\n            void 0 !== h && f.push(h);\n          }\n        } else f.push(g);\n      } else g = new b(this, c), a(this).data(\"tagsinput\", g), f.push(g), \"SELECT\" === this.tagName && a(\"option\", a(this)).attr(\"selected\", \"selected\"), a(this).val(a(this).val());\n    }), \"string\" == typeof c ? f.length > 1 ? f : f[0] : f;\n  }, a.fn.tagsinput.Constructor = b;\n  var i = a(\"<div />\");\n  a(function () {\n    a(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n}(window.jQuery);","map":null,"metadata":{},"sourceType":"script"}