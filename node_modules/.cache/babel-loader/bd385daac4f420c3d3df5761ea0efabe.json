{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/chartjs/components/ChartJsGraph.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\nimport pressets from \"./ChartJsPressets\";\n\nvar ChartJsGraph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChartJsGraph, _React$Component);\n\n  function ChartJsGraph() {\n    _classCallCheck(this, ChartJsGraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChartJsGraph).apply(this, arguments));\n  }\n\n  _createClass(ChartJsGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderChart(this.props.data);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n        this.renderChart(this.props.data);\n      }\n    }\n  }, {\n    key: \"renderChart\",\n    value: function renderChart(data) {\n      var ctx = this.refs.canvas.getContext(\"2d\");\n\n      if (data) {\n        var chart = new Chart(ctx, {\n          type: this.props.type,\n          data: data,\n          options: pressets[this.props.type] || {}\n        });\n        chart.update();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        className: this.props.className,\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ChartJsGraph;\n}(React.Component);\n\nexport { ChartJsGraph as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/chartjs/components/ChartJsGraph.js"],"names":["React","Chart","pressets","ChartJsGraph","renderChart","props","data","prevProps","JSON","stringify","ctx","refs","canvas","getContext","chart","type","options","update","className","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;IAEqBC,Y;;;;;;;;;;;;;wCACC;AAClB,WAAKC,WAAL,CAAiB,KAAKC,KAAL,CAAWC,IAA5B;AACD;;;uCAEkBC,S,EAAW;AAC5B,UAAIC,IAAI,CAACC,SAAL,CAAeF,SAAS,CAACD,IAAzB,MAAmCE,IAAI,CAACC,SAAL,CAAe,KAAKJ,KAAL,CAAWC,IAA1B,CAAvC,EAAwE;AACtE,aAAKF,WAAL,CAAiB,KAAKC,KAAL,CAAWC,IAA5B;AACD;AACF;;;gCAEWA,I,EAAM;AAChB,UAAII,GAAG,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAV;;AACA,UAAIP,IAAJ,EAAU;AACR,YAAIQ,KAAK,GAAG,IAAIb,KAAJ,CAAUS,GAAV,EAAe;AACzBK,UAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,IADQ;AAEzBT,UAAAA,IAAI,EAAEA,IAFmB;AAGzBU,UAAAA,OAAO,EAAEd,QAAQ,CAAC,KAAKG,KAAL,CAAWU,IAAZ,CAAR,IAA6B;AAHb,SAAf,CAAZ;AAKAD,QAAAA,KAAK,CAACG,MAAN;AACD;AACF;;;6BAEQ;AACP,aAAO;AAAQ,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWa,SAA9B;AAAyC,QAAA,GAAG,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAzBuClB,KAAK,CAACmB,S;;SAA3BhB,Y","sourcesContent":["import React from \"react\";\n\nimport Chart from \"chart.js\";\n\nimport pressets from \"./ChartJsPressets\";\n\nexport default class ChartJsGraph extends React.Component {\n  componentDidMount() {\n    this.renderChart(this.props.data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      this.renderChart(this.props.data);\n    }\n  }\n\n  renderChart(data) {\n    var ctx = this.refs.canvas.getContext(\"2d\");\n    if (data) {\n      let chart = new Chart(ctx, {\n        type: this.props.type,\n        data: data,\n        options: pressets[this.props.type] || {}\n      });\n      chart.update();\n    }\n  }\n\n  render() {\n    return <canvas className={this.props.className} ref=\"canvas\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}