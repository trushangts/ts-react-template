{"ast":null,"code":"import { getJSON } from \"../utils/functions\";\nexport var I18N_INIT = \"I18N_INIT\";\nexport var I18N_SELECT = \"I18N_SELECT\";\nexport function i18nInit() {\n  return function (dispatch) {\n    return getJSON(\"assets/api/langs/languages.json\").then(function (data) {\n      dispatch({\n        type: I18N_INIT,\n        payload: data\n      });\n    });\n  };\n}\nexport function i18nSelect(language) {\n  return function (dispatch) {\n    return getJSON(\"assets/api/langs/\" + language.key + \".json\").then(function (data) {\n      dispatch({\n        type: I18N_SELECT,\n        payload: {\n          language: language,\n          phrases: data\n        }\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/i18n/I18nActions.js"],"names":["getJSON","I18N_INIT","I18N_SELECT","i18nInit","dispatch","then","data","type","payload","i18nSelect","language","key","phrases"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOJ,OAAO,CAAC,iCAAD,CAAP,CAA2CK,IAA3C,CAAgD,UAAAC,IAAI,EAAI;AAC7DF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,SADC;AAEPO,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KALM,CAAP;AAMD,GAPD;AAQD;AAED,OAAO,SAASG,UAAT,CAAoBC,QAApB,EAA8B;AACnC,SAAO,UAAAN,QAAQ,EAAI;AACjB,WAAOJ,OAAO,CAAC,sBAAsBU,QAAQ,CAACC,GAA/B,GAAqC,OAAtC,CAAP,CAAsDN,IAAtD,CAA2D,UAAAC,IAAI,EAAI;AACxEF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEL,WADC;AAEPM,QAAAA,OAAO,EAAE;AACPE,UAAAA,QAAQ,EAARA,QADO;AAEPE,UAAAA,OAAO,EAAEN;AAFF;AAFF,OAAD,CAAR;AAOD,KARM,CAAP;AASD,GAVD;AAWD","sourcesContent":["import { getJSON } from \"../utils/functions\";\n\nexport const I18N_INIT = \"I18N_INIT\";\nexport const I18N_SELECT = \"I18N_SELECT\";\n\nexport function i18nInit() {\n  return dispatch => {\n    return getJSON(\"assets/api/langs/languages.json\").then(data => {\n      dispatch({\n        type: I18N_INIT,\n        payload: data\n      });\n    });\n  };\n}\n\nexport function i18nSelect(language) {\n  return dispatch => {\n    return getJSON(\"assets/api/langs/\" + language.key + \".json\").then(data => {\n      dispatch({\n        type: I18N_SELECT,\n        payload: {\n          language,\n          phrases: data\n        }\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}