{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/todo/components/TodoForm.js\";\nimport React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as TodoActions from \"../TodoActions\";\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoForm, _React$Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n\n    _this.addTodo = function () {\n      if (!_this.state.title) return;\n\n      _this.props.addTodo(_this.state);\n\n      _this.setState({\n        title: \"\",\n        type: \"Important\"\n      });\n\n      _this.props.toggleNewTodo();\n    };\n\n    _this.onTitleChange = function (value) {\n      _this.setState({\n        title: value\n      });\n    };\n\n    _this.onTypeChange = function (value) {\n      _this.setState({\n        type: value\n      });\n    };\n\n    _this.state = {\n      title: \"\",\n      type: \"Important\"\n    };\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        name: \"newTodoForm\",\n        className: \"smart-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"input-lg\",\n        value: this.state.title,\n        onChange: function onChange(event) {\n          return _this2.onTitleChange(event.target.value);\n        },\n        placeholder: \"What needs to be done?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"input-sm\",\n        value: this.state.type,\n        onChange: function onChange(event) {\n          return _this2.onTypeChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Critical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Critical\"), React.createElement(\"option\", {\n        value: \"Important\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Important\"), React.createElement(\"option\", {\n        value: \"Completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Completed\")), \" \")))), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.props.toggleNewTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return TodoForm;\n}(React.Component);\n\nexport default connect(function (store) {\n  return store.todo;\n}, function (dispatch) {\n  return bindActionCreators(TodoActions, dispatch);\n})(TodoForm);","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/todo/components/TodoForm.js"],"names":["React","bindActionCreators","connect","TodoActions","TodoForm","props","addTodo","state","title","setState","type","toggleNewTodo","onTitleChange","value","onTypeChange","event","target","Component","store","todo","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,gBAA7B;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAOnBC,OAPmB,GAOT,YAAM;AACd,UAAI,CAAC,MAAKC,KAAL,CAAWC,KAAhB,EAAuB;;AACvB,YAAKH,KAAL,CAAWC,OAAX,CAAmB,MAAKC,KAAxB;;AACA,YAAKE,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAE,EADK;AAEZE,QAAAA,IAAI,EAAE;AAFM,OAAd;;AAKA,YAAKL,KAAL,CAAWM,aAAX;AACD,KAhBkB;;AAAA,UAkBnBC,aAlBmB,GAkBH,UAAAC,KAAK,EAAI;AACvB,YAAKJ,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEK;AADK,OAAd;AAGD,KAtBkB;;AAAA,UAuBnBC,YAvBmB,GAuBJ,UAAAD,KAAK,EAAI;AACtB,YAAKJ,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEG;AADM,OAAd;AAGD,KA3BkB;;AAEjB,UAAKN,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,IAAI,EAAE;AAFK,KAAb;AAFiB;AAMlB;;;;6BAsBQ;AAAA;;AACP,aACE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAJpB;AAKE,QAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,iBAAI,MAAI,CAACH,aAAL,CAAmBG,KAAK,CAACC,MAAN,CAAaH,KAAhC,CAAJ;AAAA,SALjB;AAME,QAAA,WAAW,EAAC,wBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,IAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAK,CAACC,MAAN,CAAaH,KAA/B,CAAJ;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAME;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,EAOE;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,CADF,EASY,GATZ,CADF,CADF,CAbF,CADF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKP,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWM,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CA9BF,CADF;AAiDD;;;;EA/EoBX,KAAK,CAACiB,S;;AAkF7B,eAAef,OAAO,CACpB,UAAAgB,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CADe,EAEpB,UAAAC,QAAQ;AAAA,SAAInB,kBAAkB,CAACE,WAAD,EAAciB,QAAd,CAAtB;AAAA,CAFY,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport * as TodoActions from \"../TodoActions\";\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      type: \"Important\"\n    };\n  }\n  addTodo = () => {\n    if (!this.state.title) return;\n    this.props.addTodo(this.state);\n    this.setState({\n      title: \"\",\n      type: \"Important\"\n    });\n\n    this.props.toggleNewTodo();\n  };\n\n  onTitleChange = value => {\n    this.setState({\n      title: value\n    });\n  };\n  onTypeChange = value => {\n    this.setState({\n      type: value\n    });\n  };\n  render() {\n    return (\n      <form name=\"newTodoForm\" className=\"smart-form\">\n        <fieldset>\n          <section>\n            <label className=\"input\">\n              <input\n                type=\"text\"\n                required\n                className=\"input-lg\"\n                value={this.state.title}\n                onChange={event => this.onTitleChange(event.target.value)}\n                placeholder=\"What needs to be done?\"\n              />\n            </label>\n          </section>\n          <section>\n            <div className=\"col-xs-6\">\n              <label className=\"select\">\n                <select\n                  className=\"input-sm\"\n                  value={this.state.type}\n                  onChange={event => this.onTypeChange(event.target.value)}\n                >\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Important\">Important</option>\n                  <option value=\"Completed\">Completed</option>\n                </select>{\" \"}\n              </label>\n            </div>\n          </section>\n        </fieldset>\n        <footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.addTodo}\n          >\n            Add\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-default\"\n            onClick={this.props.toggleNewTodo}\n          >\n            Cancel\n          </button>\n        </footer>\n      </form>\n    );\n  }\n}\n\nexport default connect(\n  store => store.todo,\n  dispatch => bindActionCreators(TodoActions, dispatch)\n)(TodoForm);\n"]},"metadata":{},"sourceType":"module"}