{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/maps/components/MapView.js\";\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport { getJSON } from \"../../../common/utils\"; // replace this with your GoogleMaps API key\n\nvar API_KEY = \"AIzaSyDd8YW8k_J-Jkti-W4QNk5dL8O_5_2QUWY\";\nvar SmartMap = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&key=\".concat(API_KEY, \"&libraries=geometry,drawing,places\"),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultOptions: {\n      styles: props.styles\n    },\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n});\n\nvar MapView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapView, _React$Component);\n\n  function MapView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.currentStyleId = null;\n    _this.currentStyles = null;\n\n    _this.fetchStyle = function (style) {\n      getJSON(\"assets/api/maps/\" + style + \".json\").then(function (styles) {\n        _this.currentStyleId = style;\n        _this.currentStyles = styles;\n\n        _this.forceUpdate();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStyle(this.props.match.params.style);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.currentStyleId !== nextProps.match.params.style) {\n        this.fetchStyle(nextProps.match.params.style);\n      }\n\n      return this.currentStyleId !== nextProps.match.params.style;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.currentStyles ? React.createElement(SmartMap, {\n        key: this.currentStyleId,\n        styles: this.currentStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : null;\n    }\n  }]);\n\n  return MapView;\n}(React.Component);\n\nexport { MapView as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/maps/components/MapView.js"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","getJSON","API_KEY","SmartMap","googleMapURL","loadingElement","height","containerElement","mapElement","props","styles","lat","lng","MapView","currentStyleId","currentStyles","fetchStyle","style","then","forceUpdate","match","params","nextProps","nextState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,QAAuD,mBAAvD;AAEA,SAASC,OAAT,QAAwB,uBAAxB,C,CAEA;;AACA,IAAMC,OAAO,4CAAb;AAEA,IAAMC,QAAQ,GAAGP,OAAO,CACtBC,SAAS,CAAC;AACRO,EAAAA,YAAY,gEAAyDF,OAAzD,uCADJ;AAERG,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIRE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CAAD,CADa,EAOtBR,YAPsB,EAQtBC,aARsB,CAAP,CASf,UAAAU,KAAK,EAAI;AACT,SACE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAED,KAAK,CAACC;AAAhB,KADlB;AAEE,IAAA,WAAW,EAAE,CAFf;AAGE,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAjBgB,CAAjB;;IAmBqBC,O;;;;;;;;;;;;;;;;;UACnBC,c,GAAiB,I;UACjBC,a,GAAgB,I;;UAMhBC,U,GAAa,UAAAC,KAAK,EAAI;AACpBhB,MAAAA,OAAO,CAAC,qBAAqBgB,KAArB,GAA6B,OAA9B,CAAP,CAA8CC,IAA9C,CAAmD,UAAAR,MAAM,EAAI;AAC3D,cAAKI,cAAL,GAAsBG,KAAtB;AACA,cAAKF,aAAL,GAAqBL,MAArB;;AACA,cAAKS,WAAL;AACD,OAJD;AAKD,K;;;;;;;wCAVmB;AAClB,WAAKH,UAAL,CAAgB,KAAKP,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBJ,KAAxC;AACD;;;0CAUqBK,S,EAAWC,S,EAAW;AAC1C,UAAI,KAAKT,cAAL,KAAwBQ,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBJ,KAAnD,EAA0D;AACxD,aAAKD,UAAL,CAAgBM,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBJ,KAAvC;AACD;;AAED,aAAO,KAAKH,cAAL,KAAwBQ,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBJ,KAAtD;AACD;;;6BAEQ;AACP,aAAO,KAAKF,aAAL,GACL,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKD,cAApB;AAAoC,QAAA,MAAM,EAAE,KAAKC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEH,IAFJ;AAGD;;;;EA5BkCpB,KAAK,CAAC6B,S;;SAAtBX,O","sourcesContent":["import React from \"react\";\n\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\n\nimport { getJSON } from \"../../../common/utils\";\n\n// replace this with your GoogleMaps API key\nconst API_KEY = `AIzaSyDd8YW8k_J-Jkti-W4QNk5dL8O_5_2QUWY`;\n\nconst SmartMap = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&key=${API_KEY}&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => {\n  return (\n    <GoogleMap\n      defaultOptions={{ styles: props.styles }}\n      defaultZoom={8}\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\n    />\n  );\n});\n\nexport default class MapView extends React.Component {\n  currentStyleId = null;\n  currentStyles = null;\n\n  componentDidMount() {\n    this.fetchStyle(this.props.match.params.style);\n  }\n\n  fetchStyle = style => {\n    getJSON(\"assets/api/maps/\" + style + \".json\").then(styles => {\n      this.currentStyleId = style;\n      this.currentStyles = styles;\n      this.forceUpdate();\n    });\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.currentStyleId !== nextProps.match.params.style) {\n      this.fetchStyle(nextProps.match.params.style);\n    }\n\n    return this.currentStyleId !== nextProps.match.params.style;\n  }\n\n  render() {\n    return this.currentStyles ? (\n      <SmartMap key={this.currentStyleId} styles={this.currentStyles} />\n    ) : null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}