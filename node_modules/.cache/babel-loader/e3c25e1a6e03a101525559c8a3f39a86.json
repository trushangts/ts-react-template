{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/TogglingForm.js\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\nvar validatorOptions = {\n  feedbackIcons: {\n    valid: \"glyphicon glyphicon-ok\",\n    invalid: \"glyphicon glyphicon-remove\",\n    validating: \"glyphicon glyphicon-refresh\"\n  },\n  fields: {\n    firstName: {\n      validators: {\n        notEmpty: {\n          message: \"The first name is required\"\n        }\n      }\n    },\n    lastName: {\n      validators: {\n        notEmpty: {\n          message: \"The last name is required\"\n        }\n      }\n    },\n    company: {\n      validators: {\n        notEmpty: {\n          message: \"The company name is required\"\n        }\n      }\n    },\n    // These fields will be validated when being visible\n    job: {\n      validators: {\n        notEmpty: {\n          message: \"The job title is required\"\n        }\n      }\n    },\n    department: {\n      validators: {\n        notEmpty: {\n          message: \"The department name is required\"\n        }\n      }\n    },\n    mobilePhone: {\n      validators: {\n        notEmpty: {\n          message: \"The mobile phone number is required\"\n        },\n        digits: {\n          message: \"The mobile phone number is not valid\"\n        }\n      }\n    },\n    // These fields will be validated when being visible\n    homePhone: {\n      validators: {\n        digits: {\n          message: \"The home phone number is not valid\"\n        }\n      }\n    },\n    officePhone: {\n      validators: {\n        digits: {\n          message: \"The office phone number is not valid\"\n        }\n      }\n    }\n  }\n};\n\nvar TogglingForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TogglingForm, _React$Component);\n\n  function TogglingForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TogglingForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TogglingForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobInfo: false,\n      phoneInfo: false\n    };\n    return _this;\n  }\n\n  _createClass(TogglingForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      console.log(\"submit stuff\");\n    }\n  }, {\n    key: \"toggleInfo\",\n    value: function toggleInfo(type) {\n      var state = {};\n      state[type] = !this.state[type];\n      this.setState(state);\n      $(this.refs.form).data(\"bootstrapValidator\").disableSubmitButtons(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BootstrapValidator, {\n        options: validatorOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"togglingForm\",\n        ref: \"form\",\n        onSubmit: this.onSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Default Form Elements\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Full name \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"firstName\",\n        placeholder: \"First name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"lastName\",\n        placeholder: \"Last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Company \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"company\",\n        required: true,\n        \"data-bv-notempty-message\": \"The company name is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info btn-sm\",\n        onClick: this.toggleInfo.bind(this, \"jobInfo\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Add more info\")))), React.createElement(\"div\", {\n        id: \"jobInfo\",\n        style: {\n          display: this.state.jobInfo ? \"block\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Job title \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"job\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Department \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"department\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Mobile phone \", React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"mobilePhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info btn-sm\",\n        onClick: this.toggleInfo.bind(this, \"phoneInfo\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Add more phone numbers\")))), React.createElement(\"div\", {\n        id: \"phoneInfo\",\n        style: {\n          display: this.state.phoneInfo ? \"block\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Home phone\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"homePhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })))), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-lg-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Office phone\"), React.createElement(\"div\", {\n        className: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"officePhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), \"Validate\"))))));\n    }\n  }]);\n\n  return TogglingForm;\n}(React.Component);\n\nexport { TogglingForm as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/views/forms/components/bootstrap-validation/TogglingForm.js"],"names":["React","$","BootstrapValidator","validatorOptions","feedbackIcons","valid","invalid","validating","fields","firstName","validators","notEmpty","message","lastName","company","job","department","mobilePhone","digits","homePhone","officePhone","TogglingForm","state","jobInfo","phoneInfo","e","preventDefault","console","log","type","setState","refs","form","data","disableSubmitButtons","onSubmit","toggleInfo","bind","display","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport $ from \"jquery\";\nimport BootstrapValidator from \"../../../../common/forms/validation/BootstrapValidator\";\n\nconst validatorOptions = {\n  feedbackIcons: {\n    valid: \"glyphicon glyphicon-ok\",\n    invalid: \"glyphicon glyphicon-remove\",\n    validating: \"glyphicon glyphicon-refresh\"\n  },\n  fields: {\n    firstName: {\n      validators: {\n        notEmpty: {\n          message: \"The first name is required\"\n        }\n      }\n    },\n    lastName: {\n      validators: {\n        notEmpty: {\n          message: \"The last name is required\"\n        }\n      }\n    },\n    company: {\n      validators: {\n        notEmpty: {\n          message: \"The company name is required\"\n        }\n      }\n    },\n    // These fields will be validated when being visible\n    job: {\n      validators: {\n        notEmpty: {\n          message: \"The job title is required\"\n        }\n      }\n    },\n    department: {\n      validators: {\n        notEmpty: {\n          message: \"The department name is required\"\n        }\n      }\n    },\n    mobilePhone: {\n      validators: {\n        notEmpty: {\n          message: \"The mobile phone number is required\"\n        },\n        digits: {\n          message: \"The mobile phone number is not valid\"\n        }\n      }\n    },\n    // These fields will be validated when being visible\n    homePhone: {\n      validators: {\n        digits: {\n          message: \"The home phone number is not valid\"\n        }\n      }\n    },\n    officePhone: {\n      validators: {\n        digits: {\n          message: \"The office phone number is not valid\"\n        }\n      }\n    }\n  }\n};\n\nexport default class TogglingForm extends React.Component {\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"submit stuff\");\n  }\n\n  state = {\n    jobInfo: false,\n    phoneInfo: false\n  };\n\n  toggleInfo(type) {\n    let state = {};\n    state[type] = !this.state[type];\n    this.setState(state);\n    $(this.refs.form)\n      .data(\"bootstrapValidator\")\n      .disableSubmitButtons(false);\n  }\n\n  render() {\n    return (\n      <BootstrapValidator options={validatorOptions}>\n        <form\n          id=\"togglingForm\"\n          ref=\"form\"\n          onSubmit={this.onSubmit}\n          className=\"form-horizontal\"\n        >\n          <fieldset>\n            <legend>Default Form Elements</legend>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">\n                Full name <sup>*</sup>\n              </label>\n              <div className=\"col-lg-4\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                />\n              </div>\n              <div className=\"col-lg-4\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                />\n              </div>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">\n                Company <sup>*</sup>\n              </label>\n              <div className=\"col-lg-5\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"company\"\n                  required={true}\n                  data-bv-notempty-message=\"The company name is required\"\n                />\n              </div>\n              <div className=\"col-lg-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info btn-sm\"\n                  onClick={this.toggleInfo.bind(this, \"jobInfo\")}\n                >\n                  Add more info\n                </button>\n              </div>\n            </div>\n          </fieldset>\n\n          {/* These fields will not be validated as long as they are not visible */}\n          <div\n            id=\"jobInfo\"\n            style={{ display: this.state.jobInfo ? \"block\" : \"none\" }}\n          >\n            <fieldset>\n              <div className=\"form-group\">\n                <label className=\"col-lg-3 control-label\">\n                  Job title <sup>*</sup>\n                </label>\n                <div className=\"col-lg-5\">\n                  <input type=\"text\" className=\"form-control\" name=\"job\" />\n                </div>\n              </div>\n            </fieldset>\n\n            <fieldset>\n              <div className=\"form-group\">\n                <label className=\"col-lg-3 control-label\">\n                  Department <sup>*</sup>\n                </label>\n                <div className=\"col-lg-5\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"department\"\n                  />\n                </div>\n              </div>\n            </fieldset>\n          </div>\n\n          <fieldset>\n            <div className=\"form-group\">\n              <label className=\"col-lg-3 control-label\">\n                Mobile phone <sup>*</sup>\n              </label>\n              <div className=\"col-lg-5\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"mobilePhone\"\n                />\n              </div>\n              <div className=\"col-lg-2\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info btn-sm\"\n                  onClick={this.toggleInfo.bind(this, \"phoneInfo\")}\n                >\n                  Add more phone numbers\n                </button>\n              </div>\n            </div>\n          </fieldset>\n          {/* These fields will not be validated as long as they are not visible */}\n          <div\n            id=\"phoneInfo\"\n            style={{ display: this.state.phoneInfo ? \"block\" : \"none\" }}\n          >\n            <fieldset>\n              <div className=\"form-group\">\n                <label className=\"col-lg-3 control-label\">Home phone</label>\n                <div className=\"col-lg-5\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"homePhone\"\n                  />\n                </div>\n              </div>\n            </fieldset>\n            <fieldset>\n              <div className=\"form-group\">\n                <label className=\"col-lg-3 control-label\">Office phone</label>\n                <div className=\"col-lg-5\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"officePhone\"\n                  />\n                </div>\n              </div>\n            </fieldset>\n          </div>\n\n          <div className=\"form-actions\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <button className=\"btn btn-default\" type=\"submit\">\n                  <i className=\"fa fa-eye\" />\n                  Validate\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </BootstrapValidator>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}