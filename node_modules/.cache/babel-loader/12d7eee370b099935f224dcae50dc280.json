{"ast":null,"code":"/*! bootstrap-timepicker v0.5.2 \n* http://jdewit.github.com/bootstrap-timepicker \n* Copyright (c) 2016 Joris de Wit and bootstrap-timepicker contributors \n* MIT License \n*/\n!function (a, b, c) {\n  \"use strict\";\n\n  var d = function d(b, c) {\n    this.widget = \"\", this.$element = a(b), this.defaultTime = c.defaultTime, this.disableFocus = c.disableFocus, this.disableMousewheel = c.disableMousewheel, this.isOpen = c.isOpen, this.minuteStep = c.minuteStep, this.modalBackdrop = c.modalBackdrop, this.orientation = c.orientation, this.secondStep = c.secondStep, this.snapToStep = c.snapToStep, this.showInputs = c.showInputs, this.showMeridian = c.showMeridian, this.showSeconds = c.showSeconds, this.template = c.template, this.appendWidgetTo = c.appendWidgetTo, this.showWidgetOnAddonClick = c.showWidgetOnAddonClick, this.icons = c.icons, this.maxHours = c.maxHours, this.explicitMode = c.explicitMode, this.handleDocumentClick = function (a) {\n      var b = a.data.scope;\n      b.$element.parent().find(a.target).length || b.$widget.is(a.target) || b.$widget.find(a.target).length || b.hideWidget();\n    }, this._init();\n  };\n\n  d.prototype = {\n    constructor: d,\n    _init: function _init() {\n      var b = this;\n      this.showWidgetOnAddonClick && this.$element.parent().hasClass(\"input-group\") && this.$element.parent().hasClass(\"bootstrap-timepicker\") ? (this.$element.parent(\".input-group.bootstrap-timepicker\").find(\".input-group-addon\").on({\n        \"click.timepicker\": a.proxy(this.showWidget, this)\n      }), this.$element.on({\n        \"focus.timepicker\": a.proxy(this.highlightUnit, this),\n        \"click.timepicker\": a.proxy(this.highlightUnit, this),\n        \"keydown.timepicker\": a.proxy(this.elementKeydown, this),\n        \"blur.timepicker\": a.proxy(this.blurElement, this),\n        \"mousewheel.timepicker DOMMouseScroll.timepicker\": a.proxy(this.mousewheel, this)\n      })) : this.template ? this.$element.on({\n        \"focus.timepicker\": a.proxy(this.showWidget, this),\n        \"click.timepicker\": a.proxy(this.showWidget, this),\n        \"blur.timepicker\": a.proxy(this.blurElement, this),\n        \"mousewheel.timepicker DOMMouseScroll.timepicker\": a.proxy(this.mousewheel, this)\n      }) : this.$element.on({\n        \"focus.timepicker\": a.proxy(this.highlightUnit, this),\n        \"click.timepicker\": a.proxy(this.highlightUnit, this),\n        \"keydown.timepicker\": a.proxy(this.elementKeydown, this),\n        \"blur.timepicker\": a.proxy(this.blurElement, this),\n        \"mousewheel.timepicker DOMMouseScroll.timepicker\": a.proxy(this.mousewheel, this)\n      }), this.template !== !1 ? this.$widget = a(this.getTemplate()).on(\"click\", a.proxy(this.widgetClick, this)) : this.$widget = !1, this.showInputs && this.$widget !== !1 && this.$widget.find(\"input\").each(function () {\n        a(this).on({\n          \"click.timepicker\": function clickTimepicker() {\n            a(this).select();\n          },\n          \"keydown.timepicker\": a.proxy(b.widgetKeydown, b),\n          \"keyup.timepicker\": a.proxy(b.widgetKeyup, b)\n        });\n      }), this.setDefaultTime(this.defaultTime);\n    },\n    blurElement: function blurElement() {\n      this.highlightedUnit = null, this.updateFromElementVal();\n    },\n    clear: function clear() {\n      this.hour = \"\", this.minute = \"\", this.second = \"\", this.meridian = \"\", this.$element.val(\"\");\n    },\n    decrementHour: function decrementHour() {\n      if (this.showMeridian) {\n        if (1 === this.hour) this.hour = 12;else {\n          if (12 === this.hour) return this.hour--, this.toggleMeridian();\n          if (0 === this.hour) return this.hour = 11, this.toggleMeridian();\n          this.hour--;\n        }\n      } else this.hour <= 0 ? this.hour = this.maxHours - 1 : this.hour--;\n    },\n    decrementMinute: function decrementMinute(a) {\n      var b;\n      b = a ? this.minute - a : this.minute - this.minuteStep, 0 > b ? (this.decrementHour(), this.minute = b + 60) : this.minute = b;\n    },\n    decrementSecond: function decrementSecond() {\n      var a = this.second - this.secondStep;\n      0 > a ? (this.decrementMinute(!0), this.second = a + 60) : this.second = a;\n    },\n    elementKeydown: function elementKeydown(a) {\n      switch (a.which) {\n        case 9:\n          if (a.shiftKey) {\n            if (\"hour\" === this.highlightedUnit) {\n              this.hideWidget();\n              break;\n            }\n\n            this.highlightPrevUnit();\n          } else {\n            if (this.showMeridian && \"meridian\" === this.highlightedUnit || this.showSeconds && \"second\" === this.highlightedUnit || !this.showMeridian && !this.showSeconds && \"minute\" === this.highlightedUnit) {\n              this.hideWidget();\n              break;\n            }\n\n            this.highlightNextUnit();\n          }\n\n          a.preventDefault(), this.updateFromElementVal();\n          break;\n\n        case 27:\n          this.updateFromElementVal();\n          break;\n\n        case 37:\n          a.preventDefault(), this.highlightPrevUnit(), this.updateFromElementVal();\n          break;\n\n        case 38:\n          switch (a.preventDefault(), this.highlightedUnit) {\n            case \"hour\":\n              this.incrementHour(), this.highlightHour();\n              break;\n\n            case \"minute\":\n              this.incrementMinute(), this.highlightMinute();\n              break;\n\n            case \"second\":\n              this.incrementSecond(), this.highlightSecond();\n              break;\n\n            case \"meridian\":\n              this.toggleMeridian(), this.highlightMeridian();\n          }\n\n          this.update();\n          break;\n\n        case 39:\n          a.preventDefault(), this.highlightNextUnit(), this.updateFromElementVal();\n          break;\n\n        case 40:\n          switch (a.preventDefault(), this.highlightedUnit) {\n            case \"hour\":\n              this.decrementHour(), this.highlightHour();\n              break;\n\n            case \"minute\":\n              this.decrementMinute(), this.highlightMinute();\n              break;\n\n            case \"second\":\n              this.decrementSecond(), this.highlightSecond();\n              break;\n\n            case \"meridian\":\n              this.toggleMeridian(), this.highlightMeridian();\n          }\n\n          this.update();\n      }\n    },\n    getCursorPosition: function getCursorPosition() {\n      var a = this.$element.get(0);\n      if (\"selectionStart\" in a) return a.selectionStart;\n\n      if (c.selection) {\n        a.focus();\n        var b = c.selection.createRange(),\n            d = c.selection.createRange().text.length;\n        return b.moveStart(\"character\", -a.value.length), b.text.length - d;\n      }\n    },\n    getTemplate: function getTemplate() {\n      var a, b, c, d, e, f;\n\n      switch (this.showInputs ? (b = '<input type=\"text\" class=\"bootstrap-timepicker-hour\" maxlength=\"2\"/>', c = '<input type=\"text\" class=\"bootstrap-timepicker-minute\" maxlength=\"2\"/>', d = '<input type=\"text\" class=\"bootstrap-timepicker-second\" maxlength=\"2\"/>', e = '<input type=\"text\" class=\"bootstrap-timepicker-meridian\" maxlength=\"2\"/>') : (b = '<span class=\"bootstrap-timepicker-hour\"></span>', c = '<span class=\"bootstrap-timepicker-minute\"></span>', d = '<span class=\"bootstrap-timepicker-second\"></span>', e = '<span class=\"bootstrap-timepicker-meridian\"></span>'), f = '<table><tr><td><a href=\"#\" data-action=\"incrementHour\"><span class=\"' + this.icons.up + '\"></span></a></td><td class=\"separator\">&nbsp;</td><td><a href=\"#\" data-action=\"incrementMinute\"><span class=\"' + this.icons.up + '\"></span></a></td>' + (this.showSeconds ? '<td class=\"separator\">&nbsp;</td><td><a href=\"#\" data-action=\"incrementSecond\"><span class=\"' + this.icons.up + '\"></span></a></td>' : \"\") + (this.showMeridian ? '<td class=\"separator\">&nbsp;</td><td class=\"meridian-column\"><a href=\"#\" data-action=\"toggleMeridian\"><span class=\"' + this.icons.up + '\"></span></a></td>' : \"\") + \"</tr><tr><td>\" + b + '</td> <td class=\"separator\">:</td><td>' + c + \"</td> \" + (this.showSeconds ? '<td class=\"separator\">:</td><td>' + d + \"</td>\" : \"\") + (this.showMeridian ? '<td class=\"separator\">&nbsp;</td><td>' + e + \"</td>\" : \"\") + '</tr><tr><td><a href=\"#\" data-action=\"decrementHour\"><span class=\"' + this.icons.down + '\"></span></a></td><td class=\"separator\"></td><td><a href=\"#\" data-action=\"decrementMinute\"><span class=\"' + this.icons.down + '\"></span></a></td>' + (this.showSeconds ? '<td class=\"separator\">&nbsp;</td><td><a href=\"#\" data-action=\"decrementSecond\"><span class=\"' + this.icons.down + '\"></span></a></td>' : \"\") + (this.showMeridian ? '<td class=\"separator\">&nbsp;</td><td><a href=\"#\" data-action=\"toggleMeridian\"><span class=\"' + this.icons.down + '\"></span></a></td>' : \"\") + \"</tr></table>\", this.template) {\n        case \"modal\":\n          a = '<div class=\"bootstrap-timepicker-widget modal hide fade in\" data-backdrop=\"' + (this.modalBackdrop ? \"true\" : \"false\") + '\"><div class=\"modal-header\"><a href=\"#\" class=\"close\" data-dismiss=\"modal\">&times;</a><h3>Pick a Time</h3></div><div class=\"modal-content\">' + f + '</div><div class=\"modal-footer\"><a href=\"#\" class=\"btn btn-primary\" data-dismiss=\"modal\">OK</a></div></div>';\n          break;\n\n        case \"dropdown\":\n          a = '<div class=\"bootstrap-timepicker-widget dropdown-menu\">' + f + \"</div>\";\n      }\n\n      return a;\n    },\n    getTime: function getTime() {\n      return \"\" === this.hour ? \"\" : this.hour + \":\" + (1 === this.minute.toString().length ? \"0\" + this.minute : this.minute) + (this.showSeconds ? \":\" + (1 === this.second.toString().length ? \"0\" + this.second : this.second) : \"\") + (this.showMeridian ? \" \" + this.meridian : \"\");\n    },\n    hideWidget: function hideWidget() {\n      this.isOpen !== !1 && (this.$element.trigger({\n        type: \"hide.timepicker\",\n        time: {\n          value: this.getTime(),\n          hours: this.hour,\n          minutes: this.minute,\n          seconds: this.second,\n          meridian: this.meridian\n        }\n      }), \"modal\" === this.template && this.$widget.modal ? this.$widget.modal(\"hide\") : this.$widget.removeClass(\"open\"), a(c).off(\"mousedown.timepicker, touchend.timepicker\", this.handleDocumentClick), this.isOpen = !1, this.$widget.detach());\n    },\n    highlightUnit: function highlightUnit() {\n      this.position = this.getCursorPosition(), this.position >= 0 && this.position <= 2 ? this.highlightHour() : this.position >= 3 && this.position <= 5 ? this.highlightMinute() : this.position >= 6 && this.position <= 8 ? this.showSeconds ? this.highlightSecond() : this.highlightMeridian() : this.position >= 9 && this.position <= 11 && this.highlightMeridian();\n    },\n    highlightNextUnit: function highlightNextUnit() {\n      switch (this.highlightedUnit) {\n        case \"hour\":\n          this.highlightMinute();\n          break;\n\n        case \"minute\":\n          this.showSeconds ? this.highlightSecond() : this.showMeridian ? this.highlightMeridian() : this.highlightHour();\n          break;\n\n        case \"second\":\n          this.showMeridian ? this.highlightMeridian() : this.highlightHour();\n          break;\n\n        case \"meridian\":\n          this.highlightHour();\n      }\n    },\n    highlightPrevUnit: function highlightPrevUnit() {\n      switch (this.highlightedUnit) {\n        case \"hour\":\n          this.showMeridian ? this.highlightMeridian() : this.showSeconds ? this.highlightSecond() : this.highlightMinute();\n          break;\n\n        case \"minute\":\n          this.highlightHour();\n          break;\n\n        case \"second\":\n          this.highlightMinute();\n          break;\n\n        case \"meridian\":\n          this.showSeconds ? this.highlightSecond() : this.highlightMinute();\n      }\n    },\n    highlightHour: function highlightHour() {\n      var a = this.$element.get(0),\n          b = this;\n      this.highlightedUnit = \"hour\", a.setSelectionRange && setTimeout(function () {\n        b.hour < 10 ? a.setSelectionRange(0, 1) : a.setSelectionRange(0, 2);\n      }, 0);\n    },\n    highlightMinute: function highlightMinute() {\n      var a = this.$element.get(0),\n          b = this;\n      this.highlightedUnit = \"minute\", a.setSelectionRange && setTimeout(function () {\n        b.hour < 10 ? a.setSelectionRange(2, 4) : a.setSelectionRange(3, 5);\n      }, 0);\n    },\n    highlightSecond: function highlightSecond() {\n      var a = this.$element.get(0),\n          b = this;\n      this.highlightedUnit = \"second\", a.setSelectionRange && setTimeout(function () {\n        b.hour < 10 ? a.setSelectionRange(5, 7) : a.setSelectionRange(6, 8);\n      }, 0);\n    },\n    highlightMeridian: function highlightMeridian() {\n      var a = this.$element.get(0),\n          b = this;\n      this.highlightedUnit = \"meridian\", a.setSelectionRange && (this.showSeconds ? setTimeout(function () {\n        b.hour < 10 ? a.setSelectionRange(8, 10) : a.setSelectionRange(9, 11);\n      }, 0) : setTimeout(function () {\n        b.hour < 10 ? a.setSelectionRange(5, 7) : a.setSelectionRange(6, 8);\n      }, 0));\n    },\n    incrementHour: function incrementHour() {\n      if (this.showMeridian) {\n        if (11 === this.hour) return this.hour++, this.toggleMeridian();\n        12 === this.hour && (this.hour = 0);\n      }\n\n      return this.hour === this.maxHours - 1 ? void (this.hour = 0) : void this.hour++;\n    },\n    incrementMinute: function incrementMinute(a) {\n      var b;\n      b = a ? this.minute + a : this.minute + this.minuteStep - this.minute % this.minuteStep, b > 59 ? (this.incrementHour(), this.minute = b - 60) : this.minute = b;\n    },\n    incrementSecond: function incrementSecond() {\n      var a = this.second + this.secondStep - this.second % this.secondStep;\n      a > 59 ? (this.incrementMinute(!0), this.second = a - 60) : this.second = a;\n    },\n    mousewheel: function mousewheel(b) {\n      if (!this.disableMousewheel) {\n        b.preventDefault(), b.stopPropagation();\n        var c = b.originalEvent.wheelDelta || -b.originalEvent.detail,\n            d = null;\n\n        switch (\"mousewheel\" === b.type ? d = -1 * b.originalEvent.wheelDelta : \"DOMMouseScroll\" === b.type && (d = 40 * b.originalEvent.detail), d && (b.preventDefault(), a(this).scrollTop(d + a(this).scrollTop())), this.highlightedUnit) {\n          case \"minute\":\n            c > 0 ? this.incrementMinute() : this.decrementMinute(), this.highlightMinute();\n            break;\n\n          case \"second\":\n            c > 0 ? this.incrementSecond() : this.decrementSecond(), this.highlightSecond();\n            break;\n\n          case \"meridian\":\n            this.toggleMeridian(), this.highlightMeridian();\n            break;\n\n          default:\n            c > 0 ? this.incrementHour() : this.decrementHour(), this.highlightHour();\n        }\n\n        return !1;\n      }\n    },\n    changeToNearestStep: function changeToNearestStep(a, b) {\n      return a % b === 0 ? a : Math.round(a % b / b) ? (a + (b - a % b)) % 60 : a - a % b;\n    },\n    place: function place() {\n      if (!this.isInline) {\n        var c = this.$widget.outerWidth(),\n            d = this.$widget.outerHeight(),\n            e = 10,\n            f = a(b).width(),\n            g = a(b).height(),\n            h = a(b).scrollTop(),\n            i = parseInt(this.$element.parents().filter(function () {\n          return \"auto\" !== a(this).css(\"z-index\");\n        }).first().css(\"z-index\"), 10) + 10,\n            j = this.component ? this.component.parent().offset() : this.$element.offset(),\n            k = this.component ? this.component.outerHeight(!0) : this.$element.outerHeight(!1),\n            l = this.component ? this.component.outerWidth(!0) : this.$element.outerWidth(!1),\n            m = j.left,\n            n = j.top;\n        this.$widget.removeClass(\"timepicker-orient-top timepicker-orient-bottom timepicker-orient-right timepicker-orient-left\"), \"auto\" !== this.orientation.x ? (this.$widget.addClass(\"timepicker-orient-\" + this.orientation.x), \"right\" === this.orientation.x && (m -= c - l)) : (this.$widget.addClass(\"timepicker-orient-left\"), j.left < 0 ? m -= j.left - e : j.left + c > f && (m = f - c - e));\n        var o,\n            p,\n            q = this.orientation.y;\n        \"auto\" === q && (o = -h + j.top - d, p = h + g - (j.top + k + d), q = Math.max(o, p) === p ? \"top\" : \"bottom\"), this.$widget.addClass(\"timepicker-orient-\" + q), \"top\" === q ? n += k : n -= d + parseInt(this.$widget.css(\"padding-top\"), 10), this.$widget.css({\n          top: n,\n          left: m,\n          zIndex: i\n        });\n      }\n    },\n    remove: function remove() {\n      a(\"document\").off(\".timepicker\"), this.$widget && this.$widget.remove(), delete this.$element.data().timepicker;\n    },\n    setDefaultTime: function setDefaultTime(a) {\n      if (this.$element.val()) this.updateFromElementVal();else if (\"current\" === a) {\n        var b = new Date(),\n            c = b.getHours(),\n            d = b.getMinutes(),\n            e = b.getSeconds(),\n            f = \"AM\";\n        0 !== e && (e = Math.ceil(b.getSeconds() / this.secondStep) * this.secondStep, 60 === e && (d += 1, e = 0)), 0 !== d && (d = Math.ceil(b.getMinutes() / this.minuteStep) * this.minuteStep, 60 === d && (c += 1, d = 0)), this.showMeridian && (0 === c ? c = 12 : c >= 12 ? (c > 12 && (c -= 12), f = \"PM\") : f = \"AM\"), this.hour = c, this.minute = d, this.second = e, this.meridian = f, this.update();\n      } else a === !1 ? (this.hour = 0, this.minute = 0, this.second = 0, this.meridian = \"AM\") : this.setTime(a);\n    },\n    setTime: function setTime(a, b) {\n      if (!a) return void this.clear();\n      var c, d, e, f, g, h;\n      if (\"object\" == typeof a && a.getMonth) e = a.getHours(), f = a.getMinutes(), g = a.getSeconds(), this.showMeridian && (h = \"AM\", e > 12 && (h = \"PM\", e %= 12), 12 === e && (h = \"PM\"));else {\n        if (c = (/a/i.test(a) ? 1 : 0) + (/p/i.test(a) ? 2 : 0), c > 2) return void this.clear();\n        if (d = a.replace(/[^0-9\\:]/g, \"\").split(\":\"), e = d[0] ? d[0].toString() : d.toString(), this.explicitMode && e.length > 2 && e.length % 2 !== 0) return void this.clear();\n        f = d[1] ? d[1].toString() : \"\", g = d[2] ? d[2].toString() : \"\", e.length > 4 && (g = e.slice(-2), e = e.slice(0, -2)), e.length > 2 && (f = e.slice(-2), e = e.slice(0, -2)), f.length > 2 && (g = f.slice(-2), f = f.slice(0, -2)), e = parseInt(e, 10), f = parseInt(f, 10), g = parseInt(g, 10), isNaN(e) && (e = 0), isNaN(f) && (f = 0), isNaN(g) && (g = 0), g > 59 && (g = 59), f > 59 && (f = 59), e >= this.maxHours && (e = this.maxHours - 1), this.showMeridian ? (e > 12 && (c = 2, e -= 12), c || (c = 1), 0 === e && (e = 12), h = 1 === c ? \"AM\" : \"PM\") : 12 > e && 2 === c ? e += 12 : e >= this.maxHours ? e = this.maxHours - 1 : (0 > e || 12 === e && 1 === c) && (e = 0);\n      }\n      this.hour = e, this.snapToStep ? (this.minute = this.changeToNearestStep(f, this.minuteStep), this.second = this.changeToNearestStep(g, this.secondStep)) : (this.minute = f, this.second = g), this.meridian = h, this.update(b);\n    },\n    showWidget: function showWidget() {\n      this.isOpen || this.$element.is(\":disabled\") || (this.$widget.appendTo(this.appendWidgetTo), a(c).on(\"mousedown.timepicker, touchend.timepicker\", {\n        scope: this\n      }, this.handleDocumentClick), this.$element.trigger({\n        type: \"show.timepicker\",\n        time: {\n          value: this.getTime(),\n          hours: this.hour,\n          minutes: this.minute,\n          seconds: this.second,\n          meridian: this.meridian\n        }\n      }), this.place(), this.disableFocus && this.$element.blur(), \"\" === this.hour && (this.defaultTime ? this.setDefaultTime(this.defaultTime) : this.setTime(\"0:0:0\")), \"modal\" === this.template && this.$widget.modal ? this.$widget.modal(\"show\").on(\"hidden\", a.proxy(this.hideWidget, this)) : this.isOpen === !1 && this.$widget.addClass(\"open\"), this.isOpen = !0);\n    },\n    toggleMeridian: function toggleMeridian() {\n      this.meridian = \"AM\" === this.meridian ? \"PM\" : \"AM\";\n    },\n    update: function update(a) {\n      this.updateElement(), a || this.updateWidget(), this.$element.trigger({\n        type: \"changeTime.timepicker\",\n        time: {\n          value: this.getTime(),\n          hours: this.hour,\n          minutes: this.minute,\n          seconds: this.second,\n          meridian: this.meridian\n        }\n      });\n    },\n    updateElement: function updateElement() {\n      this.$element.val(this.getTime()).change();\n    },\n    updateFromElementVal: function updateFromElementVal() {\n      this.setTime(this.$element.val());\n    },\n    updateWidget: function updateWidget() {\n      if (this.$widget !== !1) {\n        var a = this.hour,\n            b = 1 === this.minute.toString().length ? \"0\" + this.minute : this.minute,\n            c = 1 === this.second.toString().length ? \"0\" + this.second : this.second;\n        this.showInputs ? (this.$widget.find(\"input.bootstrap-timepicker-hour\").val(a), this.$widget.find(\"input.bootstrap-timepicker-minute\").val(b), this.showSeconds && this.$widget.find(\"input.bootstrap-timepicker-second\").val(c), this.showMeridian && this.$widget.find(\"input.bootstrap-timepicker-meridian\").val(this.meridian)) : (this.$widget.find(\"span.bootstrap-timepicker-hour\").text(a), this.$widget.find(\"span.bootstrap-timepicker-minute\").text(b), this.showSeconds && this.$widget.find(\"span.bootstrap-timepicker-second\").text(c), this.showMeridian && this.$widget.find(\"span.bootstrap-timepicker-meridian\").text(this.meridian));\n      }\n    },\n    updateFromWidgetInputs: function updateFromWidgetInputs() {\n      if (this.$widget !== !1) {\n        var a = this.$widget.find(\"input.bootstrap-timepicker-hour\").val() + \":\" + this.$widget.find(\"input.bootstrap-timepicker-minute\").val() + (this.showSeconds ? \":\" + this.$widget.find(\"input.bootstrap-timepicker-second\").val() : \"\") + (this.showMeridian ? this.$widget.find(\"input.bootstrap-timepicker-meridian\").val() : \"\");\n        this.setTime(a, !0);\n      }\n    },\n    widgetClick: function widgetClick(b) {\n      b.stopPropagation(), b.preventDefault();\n      var c = a(b.target),\n          d = c.closest(\"a\").data(\"action\");\n      d && this[d](), this.update(), c.is(\"input\") && c.get(0).setSelectionRange(0, 2);\n    },\n    widgetKeydown: function widgetKeydown(b) {\n      var c = a(b.target),\n          d = c.attr(\"class\").replace(\"bootstrap-timepicker-\", \"\");\n\n      switch (b.which) {\n        case 9:\n          if (b.shiftKey) {\n            if (\"hour\" === d) return this.hideWidget();\n          } else if (this.showMeridian && \"meridian\" === d || this.showSeconds && \"second\" === d || !this.showMeridian && !this.showSeconds && \"minute\" === d) return this.hideWidget();\n\n          break;\n\n        case 27:\n          this.hideWidget();\n          break;\n\n        case 38:\n          switch (b.preventDefault(), d) {\n            case \"hour\":\n              this.incrementHour();\n              break;\n\n            case \"minute\":\n              this.incrementMinute();\n              break;\n\n            case \"second\":\n              this.incrementSecond();\n              break;\n\n            case \"meridian\":\n              this.toggleMeridian();\n          }\n\n          this.setTime(this.getTime()), c.get(0).setSelectionRange(0, 2);\n          break;\n\n        case 40:\n          switch (b.preventDefault(), d) {\n            case \"hour\":\n              this.decrementHour();\n              break;\n\n            case \"minute\":\n              this.decrementMinute();\n              break;\n\n            case \"second\":\n              this.decrementSecond();\n              break;\n\n            case \"meridian\":\n              this.toggleMeridian();\n          }\n\n          this.setTime(this.getTime()), c.get(0).setSelectionRange(0, 2);\n      }\n    },\n    widgetKeyup: function widgetKeyup(a) {\n      (65 === a.which || 77 === a.which || 80 === a.which || 46 === a.which || 8 === a.which || a.which >= 48 && a.which <= 57 || a.which >= 96 && a.which <= 105) && this.updateFromWidgetInputs();\n    }\n  }, a.fn.timepicker = function (b) {\n    var c = Array.apply(null, arguments);\n    return c.shift(), this.each(function () {\n      var e = a(this),\n          f = e.data(\"timepicker\"),\n          g = \"object\" == typeof b && b;\n      f || e.data(\"timepicker\", f = new d(this, a.extend({}, a.fn.timepicker.defaults, g, a(this).data()))), \"string\" == typeof b && f[b].apply(f, c);\n    });\n  }, a.fn.timepicker.defaults = {\n    defaultTime: \"current\",\n    disableFocus: !1,\n    disableMousewheel: !1,\n    isOpen: !1,\n    minuteStep: 15,\n    modalBackdrop: !1,\n    orientation: {\n      x: \"auto\",\n      y: \"auto\"\n    },\n    secondStep: 15,\n    snapToStep: !1,\n    showSeconds: !1,\n    showInputs: !0,\n    showMeridian: !0,\n    template: \"dropdown\",\n    appendWidgetTo: \"body\",\n    showWidgetOnAddonClick: !0,\n    icons: {\n      up: \"glyphicon glyphicon-chevron-up\",\n      down: \"glyphicon glyphicon-chevron-down\"\n    },\n    maxHours: 24,\n    explicitMode: !1\n  }, a.fn.timepicker.Constructor = d, a(c).on(\"focus.timepicker.data-api click.timepicker.data-api\", '[data-provide=\"timepicker\"]', function (b) {\n    var c = a(this);\n    c.data(\"timepicker\") || (b.preventDefault(), c.timepicker());\n  });\n}(jQuery, window, document);","map":null,"metadata":{},"sourceType":"script"}