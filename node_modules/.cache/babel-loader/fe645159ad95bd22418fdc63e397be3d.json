{"ast":null,"code":"var pressets = {\n  line: {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  radar: {\n    //Boolean - Whether to show lines for each scale point\n    scaleShowLine: true,\n    //Boolean - Whether we show the angle lines out of the radar\n    angleShowLineOut: true,\n    //Boolean - Whether to show labels on the scale\n    scaleShowLabels: false,\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //String - Colour of the angle line\n    angleLineColor: \"rgba(0,0,0,.1)\",\n    //Number - Pixel width of the angle line\n    angleLineWidth: 1,\n    //String - Point label font declaration\n    pointLabelFontFamily: \"'Arial'\",\n    //String - Point label font weight\n    pointLabelFontStyle: \"normal\",\n    //Number - Point label font size in pixels\n    pointLabelFontSize: 10,\n    //String - Point label font colour\n    pointLabelFontColor: \"#666\",\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 3,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  polar: {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop: true,\n    //String - The colour of the label backdrop\n    scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //Number - The backdrop padding above & below the label in pixels\n    scaleBackdropPaddingY: 2,\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX: 2,\n    //Boolean - Show line for each value in the scale\n    scaleShowLine: true,\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke: true,\n    //String - The colour of the stroke on each segement.\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect.\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate: true,\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  },\n  bar: {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: true,\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - If there is a stroke on each bar\n    barShowStroke: true,\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth: 1,\n    //Number - Spacing between each of the X value sets\n    barValueSpacing: 5,\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing: 1,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  doughnut: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //Number - The percentage of the chart that we cut out of the middle\n    percentageInnerCutout: 50,\n    // This is 0 for Pie charts\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  },\n  pie: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - types of animation\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  }\n};\nexport default pressets;","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/graphs/chartjs/components/ChartJsPressets.js"],"names":["pressets","line","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","responsive","legendTemplate","radar","scaleShowLine","angleShowLineOut","scaleShowLabels","scaleBeginAtZero","angleLineColor","angleLineWidth","pointLabelFontFamily","pointLabelFontStyle","pointLabelFontSize","pointLabelFontColor","polar","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","animationSteps","animationEasing","animateRotate","animateScale","bar","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","doughnut","percentageInnerCutout","pie"],"mappings":"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","sourcesContent":["const pressets = {\n  line: {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  radar: {\n    //Boolean - Whether to show lines for each scale point\n    scaleShowLine: true,\n    //Boolean - Whether we show the angle lines out of the radar\n    angleShowLineOut: true,\n    //Boolean - Whether to show labels on the scale\n    scaleShowLabels: false,\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //String - Colour of the angle line\n    angleLineColor: \"rgba(0,0,0,.1)\",\n    //Number - Pixel width of the angle line\n    angleLineWidth: 1,\n    //String - Point label font declaration\n    pointLabelFontFamily: \"'Arial'\",\n    //String - Point label font weight\n    pointLabelFontStyle: \"normal\",\n    //Number - Point label font size in pixels\n    pointLabelFontSize: 10,\n    //String - Point label font colour\n    pointLabelFontColor: \"#666\",\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 3,\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  polar: {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop: true,\n    //String - The colour of the label backdrop\n    scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n    //Number - The backdrop padding above & below the label in pixels\n    scaleBackdropPaddingY: 2,\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX: 2,\n    //Boolean - Show line for each value in the scale\n    scaleShowLine: true,\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke: true,\n    //String - The colour of the stroke on each segement.\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect.\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate: true,\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  },\n  bar: {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: true,\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n    //Boolean - If there is a stroke on each bar\n    barShowStroke: true,\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth: 1,\n    //Number - Spacing between each of the X value sets\n    barValueSpacing: 5,\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing: 1,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  },\n  doughnut: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //Number - The percentage of the chart that we cut out of the middle\n    percentageInnerCutout: 50, // This is 0 for Pie charts\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  },\n  pie: {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n    //Number - Amount of animation steps\n    animationSteps: 100,\n    //String - types of animation\n    animationEasing: \"easeOutBounce\",\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n    //Boolean - Re-draw chart on page resize\n    responsive: true,\n    //String - A legend template\n    legendTemplate:\n      '<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'\n  }\n};\n\nexport default pressets;\n"]},"metadata":{},"sourceType":"module"}