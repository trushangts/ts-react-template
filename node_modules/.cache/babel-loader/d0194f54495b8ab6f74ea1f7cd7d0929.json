{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/lampp/htdocs/reactApp/React_16.x/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/lampp/htdocs/reactApp/React_16.x/src/common/ui/components/TreeView.js\";\nimport React from \"react\";\nimport { newid } from \"../../utils/functions\";\nimport classnames from \"classnames\";\nimport HtmlRender from \"../../utils/components/HtmlRender\";\nimport { findDOMNode } from \"react-dom\";\nimport $ from \"jquery\";\nexport var TreeViewItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TreeViewItem, _React$Component);\n\n  function TreeViewItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TreeViewItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TreeViewItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleExpand = function (e) {\n      e.stopPropagation();\n      var item = _this.props.item;\n\n      if (item.children && item.children.length) {\n        item.expanded = !item.expanded;\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.componentDidUpdate = function () {\n      _this.handleIcon();\n    };\n\n    _this.componentDidMount = function () {\n      _this.handleIcon();\n    };\n\n    _this.handleIcon = function () {\n      var item = _this.props.item;\n\n      if (item.children && item.children.length) {\n        $(findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)))).find(\">p>span>i\").toggleClass(\"fa-plus-circle\", !item.expanded).toggleClass(\"fa-minus-circle\", !!item.expanded);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TreeViewItem, [{\n    key: \"render\",\n    value: function render() {\n      var item = this.props.item;\n      var children = item.children ? React.createElement(TreeView, {\n        className: classnames({\n          \"smart-treeview-group\": true,\n          hidden: !item.expanded\n        }),\n        items: item.children,\n        role: \"group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"li\", {\n        className: classnames({\n          parent_li: item.children && item.children.length\n        }),\n        onClick: this._handleExpand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(HtmlRender, {\n        html: item.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), children);\n    }\n  }]);\n\n  return TreeViewItem;\n}(React.Component);\n\nvar TreeView =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TreeView, _React$Component2);\n\n  function TreeView() {\n    _classCallCheck(this, TreeView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TreeView).apply(this, arguments));\n  }\n\n  _createClass(TreeView, [{\n    key: \"render\",\n    value: function render() {\n      var items = this.props.items;\n      return React.createElement(\"ul\", {\n        role: this.props.role,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(TreeViewItem, {\n          key: newid(\"treeview-item\"),\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return TreeView;\n}(React.Component);\n\nexport { TreeView as default };","map":{"version":3,"sources":["/opt/lampp/htdocs/reactApp/React_16.x/src/common/ui/components/TreeView.js"],"names":["React","newid","classnames","HtmlRender","findDOMNode","$","TreeViewItem","handleExpand","e","stopPropagation","item","props","children","length","expanded","forceUpdate","componentDidUpdate","handleIcon","componentDidMount","find","toggleClass","hidden","parent_li","_handleExpand","content","Component","TreeView","items","role","className","map"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { newid } from \"../../utils/functions\";\nimport classnames from \"classnames\";\nimport HtmlRender from \"../../utils/components/HtmlRender\";\nimport { findDOMNode } from \"react-dom\";\nimport $ from \"jquery\";\n\nexport class TreeViewItem extends React.Component {\n  handleExpand = e => {\n    e.stopPropagation();\n    let item = this.props.item;\n    if (item.children && item.children.length) {\n      item.expanded = !item.expanded;\n      this.forceUpdate();\n    }\n  };\n  render() {\n    let item = this.props.item;\n\n    let children = item.children ? (\n      <TreeView\n        className={classnames({\n          \"smart-treeview-group\": true,\n          hidden: !item.expanded\n        })}\n        items={item.children}\n        role=\"group\"\n      />\n    ) : null;\n\n    return (\n      <li\n        className={classnames({\n          parent_li: item.children && item.children.length\n        })}\n        onClick={this._handleExpand}\n      >\n        <HtmlRender html={item.content} />\n        {children}\n      </li>\n    );\n  }\n  componentDidUpdate = () => {\n    this.handleIcon();\n  };\n  componentDidMount = () => {\n    this.handleIcon();\n  };\n  handleIcon = () => {\n    let item = this.props.item;\n    if (item.children && item.children.length) {\n      $(findDOMNode(this))\n        .find(\">p>span>i\")\n        .toggleClass(\"fa-plus-circle\", !item.expanded)\n        .toggleClass(\"fa-minus-circle\", !!item.expanded);\n    }\n  };\n}\n\nexport default class TreeView extends React.Component {\n  render() {\n    let items = this.props.items;\n    return (\n      <ul role={this.props.role} className={this.props.className}>\n        {items.map(function(item) {\n          return <TreeViewItem key={newid(\"treeview-item\")} item={item} />;\n        })}\n      </ul>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}