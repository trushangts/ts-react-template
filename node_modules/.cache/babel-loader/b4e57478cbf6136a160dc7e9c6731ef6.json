{"ast":null,"code":"/*! Summernote v0.8.12 | (c) 2013- Alan Hong and other contributors | MIT license */\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? e(require(\"jquery\")) : \"function\" == typeof define && define.amd ? define([\"jquery\"], e) : e((t = t || self).jQuery);\n}(this, function (C) {\n  \"use strict\";\n\n  C = C && C.hasOwnProperty(\"default\") ? C.default : C;\n\n  var i = function () {\n    function t(t, e, o, n) {\n      this.markup = t, this.children = e, this.options = o, this.callback = n;\n    }\n\n    return t.prototype.render = function (t) {\n      var o = C(this.markup);\n\n      if (this.options && this.options.contents && o.html(this.options.contents), this.options && this.options.className && o.addClass(this.options.className), this.options && this.options.data && C.each(this.options.data, function (t, e) {\n        o.attr(\"data-\" + t, e);\n      }), this.options && this.options.click && o.on(\"click\", this.options.click), this.children) {\n        var e = o.find(\".note-children-container\");\n        this.children.forEach(function (t) {\n          t.render(e.length ? e : o);\n        });\n      }\n\n      return this.callback && this.callback(o, this.options), this.options && this.options.callback && this.options.callback(o), t && t.append(o), o;\n    }, t;\n  }(),\n      o = function o(_o, n) {\n    return function () {\n      var t = \"object\" == typeof arguments[1] ? arguments[1] : arguments[0],\n          e = Array.isArray(arguments[0]) ? arguments[0] : [];\n      return t && t.children && (e = t.children), new i(_o, e, t, n);\n    };\n  },\n      t = o('<div class=\"note-editor note-frame panel panel-default\"/>'),\n      e = o('<div class=\"note-toolbar panel-heading\" role=\"toolbar\"></div></div>'),\n      n = o('<div class=\"note-editing-area\"/>'),\n      r = o('<textarea class=\"note-codable\" role=\"textbox\" aria-multiline=\"true\"/>'),\n      s = o('<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>'),\n      a = o(['<output class=\"note-status-output\" aria-live=\"polite\"/>', '<div class=\"note-statusbar\" role=\"status\">', '  <div class=\"note-resizebar\" role=\"seperator\" aria-orientation=\"horizontal\" aria-label=\"Resize\">', '    <div class=\"note-icon-bar\"/>', '    <div class=\"note-icon-bar\"/>', '    <div class=\"note-icon-bar\"/>', \"  </div>\", \"</div>\"].join(\"\")),\n      l = o('<div class=\"note-editor\"/>'),\n      c = o(['<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>', '<output class=\"note-status-output\" aria-live=\"polite\"/>'].join(\"\")),\n      d = o('<div class=\"note-btn-group btn-group\">'),\n      u = o('<ul class=\"dropdown-menu\" role=\"list\">', function (t, i) {\n    var e = Array.isArray(i.items) ? i.items.map(function (t) {\n      var e = \"string\" == typeof t ? t : t.value || \"\",\n          o = i.template ? i.template(t) : t,\n          n = \"object\" == typeof t ? t.option : void 0;\n      return '<li role=\"listitem\" aria-label=\"' + e + '\"><a href=\"#\" ' + ('data-value=\"' + e + '\"' + (void 0 !== n ? ' data-option=\"' + n + '\"' : \"\")) + \">\" + o + \"</a></li>\";\n    }).join(\"\") : i.items;\n    t.html(e).attr({\n      \"aria-label\": i.title\n    });\n  }),\n      h = o('<ul class=\"dropdown-menu note-check\" role=\"list\">', function (t, n) {\n    var e = Array.isArray(n.items) ? n.items.map(function (t) {\n      var e = \"string\" == typeof t ? t : t.value || \"\",\n          o = n.template ? n.template(t) : t;\n      return '<li role=\"listitem\" aria-label=\"' + t + '\"><a href=\"#\" data-value=\"' + e + '\">' + v(n.checkClassName) + \" \" + o + \"</a></li>\";\n    }).join(\"\") : n.items;\n    t.html(e).attr({\n      \"aria-label\": n.title\n    });\n  }),\n      p = o('<div class=\"note-color-palette\"/>', function (t, e) {\n    for (var o = [], n = 0, i = e.colors.length; n < i; n++) {\n      for (var r = e.eventName, s = e.colors[n], a = e.colorsName[n], l = [], c = 0, d = s.length; c < d; c++) {\n        var u = s[c],\n            h = a[c];\n        l.push(['<button type=\"button\" class=\"note-color-btn\"', 'style=\"background-color:', u, '\" ', 'data-event=\"', r, '\" ', 'data-value=\"', u, '\" ', 'title=\"', h, '\" ', 'aria-label=\"', h, '\" ', 'data-toggle=\"button\" tabindex=\"-1\"></button>'].join(\"\"));\n      }\n\n      o.push('<div class=\"note-color-row\">' + l.join(\"\") + \"</div>\");\n    }\n\n    t.html(o.join(\"\")), e.tooltip && t.find(\".note-color-btn\").tooltip({\n      container: e.container,\n      trigger: \"hover\",\n      placement: \"bottom\"\n    });\n  }),\n      f = o('<div class=\"modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"/>', function (t, e) {\n    e.fade && t.addClass(\"fade\"), t.attr({\n      \"aria-label\": e.title\n    }), t.html(['<div class=\"modal-dialog\">', '  <div class=\"modal-content\">', e.title ? '    <div class=\"modal-header\">      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button>      <h4 class=\"modal-title\">' + e.title + \"</h4>    </div>\" : \"\", '    <div class=\"modal-body\">' + e.body + \"</div>\", e.footer ? '    <div class=\"modal-footer\">' + e.footer + \"</div>\" : \"\", \"  </div>\", \"</div>\"].join(\"\"));\n  }),\n      m = o(['<div class=\"note-popover popover in\">', '  <div class=\"arrow\"/>', '  <div class=\"popover-content note-children-container\"/>', \"</div>\"].join(\"\"), function (t, e) {\n    var o = void 0 !== e.direction ? e.direction : \"bottom\";\n    t.addClass(o), e.hideArrow && t.find(\".arrow\").hide();\n  }),\n      g = o('<div class=\"checkbox\"></div>', function (t, e) {\n    t.html([\"<label\" + (e.id ? ' for=\"' + e.id + '\"' : \"\") + \">\", ' <input role=\"checkbox\" type=\"checkbox\"' + (e.id ? ' id=\"' + e.id + '\"' : \"\"), e.checked ? \" checked\" : \"\", ' aria-checked=\"' + (e.checked ? \"true\" : \"false\") + '\"/>', e.text ? e.text : \"\", \"</label>\"].join(\"\"));\n  }),\n      v = function v(t, e) {\n    return \"<\" + (e = e || \"i\") + ' class=\"' + t + '\"/>';\n  },\n      b = {\n    editor: t,\n    toolbar: e,\n    editingArea: n,\n    codable: r,\n    editable: s,\n    statusbar: a,\n    airEditor: l,\n    airEditable: c,\n    buttonGroup: d,\n    dropdown: u,\n    dropdownButtonContents: function dropdownButtonContents(t, e) {\n      return t + \" \" + v(e.icons.caret, \"span\");\n    },\n    dropdownCheck: h,\n    palette: p,\n    dialog: f,\n    popover: m,\n    checkbox: g,\n    icon: v,\n    options: {},\n    button: function button(t, e) {\n      return o('<button type=\"button\" class=\"note-btn btn btn-default btn-sm\" role=\"button\" tabindex=\"-1\">', function (t, e) {\n        e && e.tooltip && t.attr({\n          title: e.tooltip,\n          \"aria-label\": e.tooltip\n        }).tooltip({\n          container: void 0 !== e.container ? e.container : \"body\",\n          trigger: \"hover\",\n          placement: \"bottom\"\n        }).on(\"click\", function (t) {\n          C(t.currentTarget).tooltip(\"hide\");\n        });\n      })(t, e);\n    },\n    toggleBtn: function toggleBtn(t, e) {\n      t.toggleClass(\"disabled\", !e), t.attr(\"disabled\", !e);\n    },\n    toggleBtnActive: function toggleBtnActive(t, e) {\n      t.toggleClass(\"active\", e);\n    },\n    onDialogShown: function onDialogShown(t, e) {\n      t.one(\"shown.bs.modal\", e);\n    },\n    onDialogHidden: function onDialogHidden(t, e) {\n      t.one(\"hidden.bs.modal\", e);\n    },\n    showDialog: function showDialog(t) {\n      t.modal(\"show\");\n    },\n    hideDialog: function hideDialog(t) {\n      t.modal(\"hide\");\n    },\n    createLayout: function createLayout(t, e) {\n      var o = (e.airMode ? b.airEditor([b.editingArea([b.airEditable()])]) : b.editor([b.toolbar(), b.editingArea([b.codable(), b.editable()]), b.statusbar()])).render();\n      return o.insertAfter(t), {\n        note: t,\n        editor: o,\n        toolbar: o.find(\".note-toolbar\"),\n        editingArea: o.find(\".note-editing-area\"),\n        editable: o.find(\".note-editable\"),\n        codable: o.find(\".note-codable\"),\n        statusbar: o.find(\".note-statusbar\")\n      };\n    },\n    removeLayout: function removeLayout(t, e) {\n      t.html(e.editable.html()), e.editor.remove(), t.show();\n    }\n  };\n\n  C.summernote = C.summernote || {\n    lang: {}\n  }, C.extend(C.summernote.lang, {\n    \"en-US\": {\n      font: {\n        bold: \"Bold\",\n        italic: \"Italic\",\n        underline: \"Underline\",\n        clear: \"Remove Font Style\",\n        height: \"Line Height\",\n        name: \"Font Family\",\n        strikethrough: \"Strikethrough\",\n        subscript: \"Subscript\",\n        superscript: \"Superscript\",\n        size: \"Font Size\"\n      },\n      image: {\n        image: \"Picture\",\n        insert: \"Insert Image\",\n        resizeFull: \"Resize full\",\n        resizeHalf: \"Resize half\",\n        resizeQuarter: \"Resize quarter\",\n        resizeNone: \"Original size\",\n        floatLeft: \"Float Left\",\n        floatRight: \"Float Right\",\n        floatNone: \"Remove float\",\n        shapeRounded: \"Shape: Rounded\",\n        shapeCircle: \"Shape: Circle\",\n        shapeThumbnail: \"Shape: Thumbnail\",\n        shapeNone: \"Shape: None\",\n        dragImageHere: \"Drag image or text here\",\n        dropImage: \"Drop image or Text\",\n        selectFromFiles: \"Select from files\",\n        maximumFileSize: \"Maximum file size\",\n        maximumFileSizeError: \"Maximum file size exceeded.\",\n        url: \"Image URL\",\n        remove: \"Remove Image\",\n        original: \"Original\"\n      },\n      video: {\n        video: \"Video\",\n        videoLink: \"Video Link\",\n        insert: \"Insert Video\",\n        url: \"Video URL\",\n        providers: \"(YouTube, Vimeo, Vine, Instagram, DailyMotion or Youku)\"\n      },\n      link: {\n        link: \"Link\",\n        insert: \"Insert Link\",\n        unlink: \"Unlink\",\n        edit: \"Edit\",\n        textToDisplay: \"Text to display\",\n        url: \"To what URL should this link go?\",\n        openInNewWindow: \"Open in new window\"\n      },\n      table: {\n        table: \"Table\",\n        addRowAbove: \"Add row above\",\n        addRowBelow: \"Add row below\",\n        addColLeft: \"Add column left\",\n        addColRight: \"Add column right\",\n        delRow: \"Delete row\",\n        delCol: \"Delete column\",\n        delTable: \"Delete table\"\n      },\n      hr: {\n        insert: \"Insert Horizontal Rule\"\n      },\n      style: {\n        style: \"Style\",\n        p: \"Normal\",\n        blockquote: \"Quote\",\n        pre: \"Code\",\n        h1: \"Header 1\",\n        h2: \"Header 2\",\n        h3: \"Header 3\",\n        h4: \"Header 4\",\n        h5: \"Header 5\",\n        h6: \"Header 6\"\n      },\n      lists: {\n        unordered: \"Unordered list\",\n        ordered: \"Ordered list\"\n      },\n      options: {\n        help: \"Help\",\n        fullscreen: \"Full Screen\",\n        codeview: \"Code View\"\n      },\n      paragraph: {\n        paragraph: \"Paragraph\",\n        outdent: \"Outdent\",\n        indent: \"Indent\",\n        left: \"Align left\",\n        center: \"Align center\",\n        right: \"Align right\",\n        justify: \"Justify full\"\n      },\n      color: {\n        recent: \"Recent Color\",\n        more: \"More Color\",\n        background: \"Background Color\",\n        foreground: \"Foreground Color\",\n        transparent: \"Transparent\",\n        setTransparent: \"Set transparent\",\n        reset: \"Reset\",\n        resetToDefault: \"Reset to default\",\n        cpSelect: \"Select\"\n      },\n      shortcut: {\n        shortcuts: \"Keyboard shortcuts\",\n        close: \"Close\",\n        textFormatting: \"Text formatting\",\n        action: \"Action\",\n        paragraphFormatting: \"Paragraph formatting\",\n        documentStyle: \"Document Style\",\n        extraKeys: \"Extra keys\"\n      },\n      help: {\n        insertParagraph: \"Insert Paragraph\",\n        undo: \"Undoes the last command\",\n        redo: \"Redoes the last command\",\n        tab: \"Tab\",\n        untab: \"Untab\",\n        bold: \"Set a bold style\",\n        italic: \"Set a italic style\",\n        underline: \"Set a underline style\",\n        strikethrough: \"Set a strikethrough style\",\n        removeFormat: \"Clean a style\",\n        justifyLeft: \"Set left align\",\n        justifyCenter: \"Set center align\",\n        justifyRight: \"Set right align\",\n        justifyFull: \"Set full align\",\n        insertUnorderedList: \"Toggle unordered list\",\n        insertOrderedList: \"Toggle ordered list\",\n        outdent: \"Outdent on current paragraph\",\n        indent: \"Indent on current paragraph\",\n        formatPara: \"Change current block's format as a paragraph(P tag)\",\n        formatH1: \"Change current block's format as H1\",\n        formatH2: \"Change current block's format as H2\",\n        formatH3: \"Change current block's format as H3\",\n        formatH4: \"Change current block's format as H4\",\n        formatH5: \"Change current block's format as H5\",\n        formatH6: \"Change current block's format as H6\",\n        insertHorizontalRule: \"Insert horizontal rule\",\n        \"linkDialog.show\": \"Show Link Dialog\"\n      },\n      history: {\n        undo: \"Undo\",\n        redo: \"Redo\"\n      },\n      specialChar: {\n        specialChar: \"SPECIAL CHARACTERS\",\n        select: \"Select Special characters\"\n      }\n    }\n  });\n  var y = \"function\" == typeof define && define.amd;\n  var k,\n      w = navigator.userAgent,\n      x = /MSIE|Trident/i.test(w);\n\n  if (x) {\n    var S = /MSIE (\\d+[.]\\d+)/.exec(w);\n    S && (k = parseFloat(S[1])), (S = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(w)) && (k = parseFloat(S[1]));\n  }\n\n  var I = /Edge\\/\\d+/.test(w),\n      T = !!window.CodeMirror,\n      N = \"ontouchstart\" in window || 0 < navigator.MaxTouchPoints || 0 < navigator.msMaxTouchPoints,\n      E = x || I ? \"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted\" : \"input\",\n      R = {\n    isMac: -1 < navigator.appVersion.indexOf(\"Mac\"),\n    isMSIE: x,\n    isEdge: I,\n    isFF: !I && /firefox/i.test(w),\n    isPhantom: /PhantomJS/i.test(w),\n    isWebkit: !I && /webkit/i.test(w),\n    isChrome: !I && /chrome/i.test(w),\n    isSafari: !I && /safari/i.test(w),\n    browserVersion: k,\n    jqueryVersion: parseFloat(C.fn.jquery),\n    isSupportAmd: y,\n    isSupportTouch: N,\n    hasCodeMirror: T,\n    isFontInstalled: function isFontInstalled(t) {\n      var e = \"Comic Sans MS\" === t ? \"Courier New\" : \"Comic Sans MS\",\n          o = \"mmmmmmmmmmwwwww\",\n          n = document.createElement(\"canvas\").getContext(\"2d\");\n      n.font = \"200px '\" + e + \"'\";\n      var i = n.measureText(o).width;\n      return n.font = \"200px '\" + t + \"', '\" + e + \"'\", i !== n.measureText(o).width;\n    },\n    isW3CRangeSupport: !!document.createRange,\n    inputEventName: E\n  };\n  var L = 0;\n  var A = {\n    eq: function eq(e) {\n      return function (t) {\n        return e === t;\n      };\n    },\n    eq2: function eq2(t, e) {\n      return t === e;\n    },\n    peq2: function peq2(o) {\n      return function (t, e) {\n        return t[o] === e[o];\n      };\n    },\n    ok: function ok() {\n      return !0;\n    },\n    fail: function fail() {\n      return !1;\n    },\n    self: function self(t) {\n      return t;\n    },\n    not: function not(t) {\n      return function () {\n        return !t.apply(t, arguments);\n      };\n    },\n    and: function and(e, o) {\n      return function (t) {\n        return e(t) && o(t);\n      };\n    },\n    invoke: function invoke(t, e) {\n      return function () {\n        return t[e].apply(t, arguments);\n      };\n    },\n    uniqueId: function uniqueId(t) {\n      var e = ++L + \"\";\n      return t ? t + e : e;\n    },\n    rect2bnd: function rect2bnd(t) {\n      var e = $(document);\n      return {\n        top: t.top + e.scrollTop(),\n        left: t.left + e.scrollLeft(),\n        width: t.right - t.left,\n        height: t.bottom - t.top\n      };\n    },\n    invertObject: function invertObject(t) {\n      var e = {};\n\n      for (var o in t) {\n        t.hasOwnProperty(o) && (e[t[o]] = o);\n      }\n\n      return e;\n    },\n    namespaceToCamel: function namespaceToCamel(t, e) {\n      return (e = e || \"\") + t.split(\".\").map(function (t) {\n        return t.substring(0, 1).toUpperCase() + t.substring(1);\n      }).join(\"\");\n    },\n    debounce: function debounce(n, i, r) {\n      var s;\n      return function () {\n        var t = this,\n            e = arguments,\n            o = r && !s;\n        clearTimeout(s), s = setTimeout(function () {\n          s = null, r || n.apply(t, e);\n        }, i), o && n.apply(t, e);\n      };\n    },\n    isValidUrl: function isValidUrl(t) {\n      return /[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi.test(t);\n    }\n  };\n\n  function F(t) {\n    return t[0];\n  }\n\n  function P(t) {\n    return t[t.length - 1];\n  }\n\n  function H(t) {\n    return t.slice(1);\n  }\n\n  function D(t, e) {\n    return !!(t && t.length && e) && -1 !== t.indexOf(e);\n  }\n\n  var B = {\n    head: F,\n    last: P,\n    initial: function initial(t) {\n      return t.slice(0, t.length - 1);\n    },\n    tail: H,\n    prev: function prev(t, e) {\n      if (t && t.length && e) {\n        var o = t.indexOf(e);\n        return -1 === o ? null : t[o - 1];\n      }\n\n      return null;\n    },\n    next: function next(t, e) {\n      if (t && t.length && e) {\n        var o = t.indexOf(e);\n        return -1 === o ? null : t[o + 1];\n      }\n\n      return null;\n    },\n    find: function find(t, e) {\n      for (var o = 0, n = t.length; o < n; o++) {\n        var i = t[o];\n        if (e(i)) return i;\n      }\n    },\n    contains: D,\n    all: function all(t, e) {\n      for (var o = 0, n = t.length; o < n; o++) {\n        if (!e(t[o])) return !1;\n      }\n\n      return !0;\n    },\n    sum: function sum(t, o) {\n      return o = o || A.self, t.reduce(function (t, e) {\n        return t + o(e);\n      }, 0);\n    },\n    from: function from(t) {\n      for (var e = [], o = t.length, n = -1; ++n < o;) {\n        e[n] = t[n];\n      }\n\n      return e;\n    },\n    isEmpty: function isEmpty(t) {\n      return !t || !t.length;\n    },\n    clusterBy: function clusterBy(t, n) {\n      return t.length ? H(t).reduce(function (t, e) {\n        var o = P(t);\n        return n(P(o), e) ? o[o.length] = e : t[t.length] = [e], t;\n      }, [[F(t)]]) : [];\n    },\n    compact: function compact(t) {\n      for (var e = [], o = 0, n = t.length; o < n; o++) {\n        t[o] && e.push(t[o]);\n      }\n\n      return e;\n    },\n    unique: function unique(t) {\n      for (var e = [], o = 0, n = t.length; o < n; o++) {\n        D(e, t[o]) || e.push(t[o]);\n      }\n\n      return e;\n    }\n  },\n      z = String.fromCharCode(160);\n\n  function M(t) {\n    return t && C(t).hasClass(\"note-editable\");\n  }\n\n  function O(e) {\n    return e = e.toUpperCase(), function (t) {\n      return t && t.nodeName.toUpperCase() === e;\n    };\n  }\n\n  function U(t) {\n    return t && 3 === t.nodeType;\n  }\n\n  function j(t) {\n    return t && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(t.nodeName.toUpperCase());\n  }\n\n  function K(t) {\n    return !M(t) && t && /^DIV|^P|^LI|^H[1-7]/.test(t.nodeName.toUpperCase());\n  }\n\n  var W = O(\"PRE\"),\n      V = O(\"LI\");\n  var q = O(\"TABLE\"),\n      G = O(\"DATA\");\n\n  function _(t) {\n    return !(X(t) || Z(t) || Y(t) || K(t) || q(t) || J(t) || G(t));\n  }\n\n  function Z(t) {\n    return t && /^UL|^OL/.test(t.nodeName.toUpperCase());\n  }\n\n  var Y = O(\"HR\");\n\n  function Q(t) {\n    return t && /^TD|^TH/.test(t.nodeName.toUpperCase());\n  }\n\n  var J = O(\"BLOCKQUOTE\");\n\n  function X(t) {\n    return Q(t) || J(t) || M(t);\n  }\n\n  var tt = O(\"A\");\n  var et = O(\"BODY\");\n  var ot = R.isMSIE && R.browserVersion < 11 ? \"&nbsp;\" : \"<br>\";\n\n  function nt(t) {\n    return U(t) ? t.nodeValue.length : t ? t.childNodes.length : 0;\n  }\n\n  function it(t) {\n    var e = nt(t);\n    return 0 === e || !U(t) && 1 === e && t.innerHTML === ot || !(!B.all(t.childNodes, U) || \"\" !== t.innerHTML);\n  }\n\n  function rt(t) {\n    j(t) || nt(t) || (t.innerHTML = ot);\n  }\n\n  function st(t, e) {\n    for (; t;) {\n      if (e(t)) return t;\n      if (M(t)) break;\n      t = t.parentNode;\n    }\n\n    return null;\n  }\n\n  function at(t, e) {\n    e = e || A.fail;\n    var o = [];\n    return st(t, function (t) {\n      return M(t) || o.push(t), e(t);\n    }), o;\n  }\n\n  function lt(t, e) {\n    e = e || A.fail;\n\n    for (var o = []; t && !e(t);) {\n      o.push(t), t = t.nextSibling;\n    }\n\n    return o;\n  }\n\n  function ct(t, e) {\n    var o = e.nextSibling,\n        n = e.parentNode;\n    return o ? n.insertBefore(t, o) : n.appendChild(t), t;\n  }\n\n  function dt(o, t) {\n    return C.each(t, function (t, e) {\n      o.appendChild(e);\n    }), o;\n  }\n\n  function ut(t) {\n    return 0 === t.offset;\n  }\n\n  function ht(t) {\n    return t.offset === nt(t.node);\n  }\n\n  function pt(t) {\n    return ut(t) || ht(t);\n  }\n\n  function ft(t, e) {\n    for (; t && t !== e;) {\n      if (0 !== gt(t)) return !1;\n      t = t.parentNode;\n    }\n\n    return !0;\n  }\n\n  function mt(t, e) {\n    if (!e) return !1;\n\n    for (; t && t !== e;) {\n      if (gt(t) !== nt(t.parentNode) - 1) return !1;\n      t = t.parentNode;\n    }\n\n    return !0;\n  }\n\n  function gt(t) {\n    for (var e = 0; t = t.previousSibling;) {\n      e += 1;\n    }\n\n    return e;\n  }\n\n  function vt(t) {\n    return !!(t && t.childNodes && t.childNodes.length);\n  }\n\n  function bt(t, e) {\n    var o, n;\n\n    if (0 === t.offset) {\n      if (M(t.node)) return null;\n      o = t.node.parentNode, n = gt(t.node);\n    } else n = vt(t.node) ? nt(o = t.node.childNodes[t.offset - 1]) : (o = t.node, e ? 0 : t.offset - 1);\n\n    return {\n      node: o,\n      offset: n\n    };\n  }\n\n  function yt(t, e) {\n    var o, n;\n\n    if (nt(t.node) === t.offset) {\n      if (M(t.node)) return null;\n      o = t.node.parentNode, n = gt(t.node) + 1;\n    } else n = vt(t.node) ? (o = t.node.childNodes[t.offset], 0) : (o = t.node, e ? nt(t.node) : t.offset + 1);\n\n    return {\n      node: o,\n      offset: n\n    };\n  }\n\n  function kt(t, e) {\n    return t.node === e.node && t.offset === e.offset;\n  }\n\n  function Ct(t, e) {\n    var o = e && e.isSkipPaddingBlankHTML,\n        n = e && e.isNotSplitEdgePoint,\n        i = e && e.isDiscardEmptySplits;\n\n    if (i && (o = !0), pt(t) && (U(t.node) || n)) {\n      if (ut(t)) return t.node;\n      if (ht(t)) return t.node.nextSibling;\n    }\n\n    if (U(t.node)) return t.node.splitText(t.offset);\n    var r = t.node.childNodes[t.offset],\n        s = ct(t.node.cloneNode(!1), t.node);\n    return dt(s, lt(r)), o || (rt(t.node), rt(s)), i && (it(t.node) && St(t.node), it(s)) ? (St(s), t.node.nextSibling) : s;\n  }\n\n  function wt(t, o, n) {\n    var e = at(o.node, A.eq(t));\n    return e.length ? 1 === e.length ? Ct(o, n) : e.reduce(function (t, e) {\n      return t === o.node && (t = Ct(o, n)), Ct({\n        node: e,\n        offset: t ? gt(t) : nt(e)\n      }, n);\n    }) : null;\n  }\n\n  function xt(t) {\n    return document.createElement(t);\n  }\n\n  function St(t, e) {\n    if (t && t.parentNode) {\n      if (t.removeNode) return t.removeNode(e);\n      var o = t.parentNode;\n\n      if (!e) {\n        for (var n = [], i = 0, r = t.childNodes.length; i < r; i++) {\n          n.push(t.childNodes[i]);\n        }\n\n        for (i = 0, r = n.length; i < r; i++) {\n          o.insertBefore(n[i], t);\n        }\n      }\n\n      o.removeChild(t);\n    }\n  }\n\n  var It = O(\"TEXTAREA\");\n\n  function Tt(t, e) {\n    var o = It(t[0]) ? t.val() : t.html();\n    return e ? o.replace(/[\\n\\r]/g, \"\") : o;\n  }\n\n  var $t = {\n    NBSP_CHAR: z,\n    ZERO_WIDTH_NBSP_CHAR: \"\\uFEFF\",\n    blank: ot,\n    emptyPara: \"<p>\" + ot + \"</p>\",\n    makePredByNodeName: O,\n    isEditable: M,\n    isControlSizing: function isControlSizing(t) {\n      return t && C(t).hasClass(\"note-control-sizing\");\n    },\n    isText: U,\n    isElement: function isElement(t) {\n      return t && 1 === t.nodeType;\n    },\n    isVoid: j,\n    isPara: K,\n    isPurePara: function isPurePara(t) {\n      return K(t) && !V(t);\n    },\n    isHeading: function isHeading(t) {\n      return t && /^H[1-7]/.test(t.nodeName.toUpperCase());\n    },\n    isInline: _,\n    isBlock: A.not(_),\n    isBodyInline: function isBodyInline(t) {\n      return _(t) && !st(t, K);\n    },\n    isBody: et,\n    isParaInline: function isParaInline(t) {\n      return _(t) && !!st(t, K);\n    },\n    isPre: W,\n    isList: Z,\n    isTable: q,\n    isData: G,\n    isCell: Q,\n    isBlockquote: J,\n    isBodyContainer: X,\n    isAnchor: tt,\n    isDiv: O(\"DIV\"),\n    isLi: V,\n    isBR: O(\"BR\"),\n    isSpan: O(\"SPAN\"),\n    isB: O(\"B\"),\n    isU: O(\"U\"),\n    isS: O(\"S\"),\n    isI: O(\"I\"),\n    isImg: O(\"IMG\"),\n    isTextarea: It,\n    isEmpty: it,\n    isEmptyAnchor: A.and(tt, it),\n    isClosestSibling: function isClosestSibling(t, e) {\n      return t.nextSibling === e || t.previousSibling === e;\n    },\n    withClosestSiblings: function withClosestSiblings(t, e) {\n      e = e || A.ok;\n      var o = [];\n      return t.previousSibling && e(t.previousSibling) && o.push(t.previousSibling), o.push(t), t.nextSibling && e(t.nextSibling) && o.push(t.nextSibling), o;\n    },\n    nodeLength: nt,\n    isLeftEdgePoint: ut,\n    isRightEdgePoint: ht,\n    isEdgePoint: pt,\n    isLeftEdgeOf: ft,\n    isRightEdgeOf: mt,\n    isLeftEdgePointOf: function isLeftEdgePointOf(t, e) {\n      return ut(t) && ft(t.node, e);\n    },\n    isRightEdgePointOf: function isRightEdgePointOf(t, e) {\n      return ht(t) && mt(t.node, e);\n    },\n    prevPoint: bt,\n    nextPoint: yt,\n    isSamePoint: kt,\n    isVisiblePoint: function isVisiblePoint(t) {\n      if (U(t.node) || !vt(t.node) || it(t.node)) return !0;\n      var e = t.node.childNodes[t.offset - 1],\n          o = t.node.childNodes[t.offset];\n      return !(e && !j(e) || o && !j(o));\n    },\n    prevPointUntil: function prevPointUntil(t, e) {\n      for (; t;) {\n        if (e(t)) return t;\n        t = bt(t);\n      }\n\n      return null;\n    },\n    nextPointUntil: function nextPointUntil(t, e) {\n      for (; t;) {\n        if (e(t)) return t;\n        t = yt(t);\n      }\n\n      return null;\n    },\n    isCharPoint: function isCharPoint(t) {\n      if (!U(t.node)) return !1;\n      var e = t.node.nodeValue.charAt(t.offset - 1);\n      return e && \" \" !== e && e !== z;\n    },\n    walkPoint: function walkPoint(t, e, o, n) {\n      for (var i = t; i && (o(i), !kt(i, e));) {\n        i = yt(i, n && t.node !== i.node && e.node !== i.node);\n      }\n    },\n    ancestor: st,\n    singleChildAncestor: function singleChildAncestor(t, e) {\n      for (t = t.parentNode; t && 1 === nt(t);) {\n        if (e(t)) return t;\n        if (M(t)) break;\n        t = t.parentNode;\n      }\n\n      return null;\n    },\n    listAncestor: at,\n    lastAncestor: function lastAncestor(t, e) {\n      var o = at(t);\n      return B.last(o.filter(e));\n    },\n    listNext: lt,\n    listPrev: function listPrev(t, e) {\n      e = e || A.fail;\n\n      for (var o = []; t && !e(t);) {\n        o.push(t), t = t.previousSibling;\n      }\n\n      return o;\n    },\n    listDescendant: function listDescendant(i, r) {\n      var s = [];\n      return r = r || A.ok, function t(e) {\n        i !== e && r(e) && s.push(e);\n\n        for (var o = 0, n = e.childNodes.length; o < n; o++) {\n          t(e.childNodes[o]);\n        }\n      }(i), s;\n    },\n    commonAncestor: function commonAncestor(t, e) {\n      for (var o = at(t), n = e; n; n = n.parentNode) {\n        if (-1 < o.indexOf(n)) return n;\n      }\n\n      return null;\n    },\n    wrap: function wrap(t, e) {\n      var o = t.parentNode,\n          n = C(\"<\" + e + \">\")[0];\n      return o.insertBefore(n, t), n.appendChild(t), n;\n    },\n    insertAfter: ct,\n    appendChildNodes: dt,\n    position: gt,\n    hasChildren: vt,\n    makeOffsetPath: function makeOffsetPath(t, e) {\n      return at(e, A.eq(t)).map(gt).reverse();\n    },\n    fromOffsetPath: function fromOffsetPath(t, e) {\n      for (var o = t, n = 0, i = e.length; n < i; n++) {\n        o = o.childNodes.length <= e[n] ? o.childNodes[o.childNodes.length - 1] : o.childNodes[e[n]];\n      }\n\n      return o;\n    },\n    splitTree: wt,\n    splitPoint: function splitPoint(t, e) {\n      var o,\n          n,\n          i = e ? K : X,\n          r = at(t.node, i),\n          s = B.last(r) || t.node;\n      n = i(s) ? (o = r[r.length - 2], s) : (o = s).parentNode;\n      var a = o && wt(o, t, {\n        isSkipPaddingBlankHTML: e,\n        isNotSplitEdgePoint: e\n      });\n      return a || n !== t.node || (a = t.node.childNodes[t.offset]), {\n        rightNode: a,\n        container: n\n      };\n    },\n    create: xt,\n    createText: function createText(t) {\n      return document.createTextNode(t);\n    },\n    remove: St,\n    removeWhile: function removeWhile(t, e) {\n      for (; t && !M(t) && e(t);) {\n        var o = t.parentNode;\n        St(t), t = o;\n      }\n    },\n    replace: function replace(t, e) {\n      if (t.nodeName.toUpperCase() === e.toUpperCase()) return t;\n      var o = xt(e);\n      return t.style.cssText && (o.style.cssText = t.style.cssText), dt(o, B.from(t.childNodes)), ct(o, t), St(t), o;\n    },\n    html: function html(t, e) {\n      var o = Tt(t);\n      e && (o = (o = o.replace(/<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g, function (t, e, o) {\n        o = o.toUpperCase();\n        var n = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(o) && !!e,\n            i = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(o);\n        return t + (n || i ? \"\\n\" : \"\");\n      })).trim());\n      return o;\n    },\n    value: Tt,\n    posFromPlaceholder: function posFromPlaceholder(t) {\n      var e = C(t),\n          o = e.offset(),\n          n = e.outerHeight(!0);\n      return {\n        left: o.left,\n        top: o.top + n\n      };\n    },\n    attachEvents: function attachEvents(e, o) {\n      Object.keys(o).forEach(function (t) {\n        e.on(t, o[t]);\n      });\n    },\n    detachEvents: function detachEvents(e, o) {\n      Object.keys(o).forEach(function (t) {\n        e.off(t, o[t]);\n      });\n    },\n    isCustomStyleTag: function isCustomStyleTag(t) {\n      return t && !U(t) && B.contains(t.classList, \"note-styletag\");\n    }\n  },\n      Nt = function () {\n    function t(t, e) {\n      this.ui = C.summernote.ui, this.$note = t, this.memos = {}, this.modules = {}, this.layoutInfo = {}, this.options = e, this.initialize();\n    }\n\n    return t.prototype.initialize = function () {\n      return this.layoutInfo = this.ui.createLayout(this.$note, this.options), this._initialize(), this.$note.hide(), this;\n    }, t.prototype.destroy = function () {\n      this._destroy(), this.$note.removeData(\"summernote\"), this.ui.removeLayout(this.$note, this.layoutInfo);\n    }, t.prototype.reset = function () {\n      var t = this.isDisabled();\n      this.code($t.emptyPara), this._destroy(), this._initialize(), t && this.disable();\n    }, t.prototype._initialize = function () {\n      var e = this,\n          o = C.extend({}, this.options.buttons);\n      Object.keys(o).forEach(function (t) {\n        e.memo(\"button.\" + t, o[t]);\n      });\n      var n = C.extend({}, this.options.modules, C.summernote.plugins || {});\n      Object.keys(n).forEach(function (t) {\n        e.module(t, n[t], !0);\n      }), Object.keys(this.modules).forEach(function (t) {\n        e.initializeModule(t);\n      });\n    }, t.prototype._destroy = function () {\n      var e = this;\n      Object.keys(this.modules).reverse().forEach(function (t) {\n        e.removeModule(t);\n      }), Object.keys(this.memos).forEach(function (t) {\n        e.removeMemo(t);\n      }), this.triggerEvent(\"destroy\", this);\n    }, t.prototype.code = function (t) {\n      var e = this.invoke(\"codeview.isActivated\");\n      if (void 0 === t) return this.invoke(\"codeview.sync\"), e ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\n      e ? this.layoutInfo.codable.val(t) : this.layoutInfo.editable.html(t), this.$note.val(t), this.triggerEvent(\"change\", t, this.layoutInfo.editable);\n    }, t.prototype.isDisabled = function () {\n      return \"false\" === this.layoutInfo.editable.attr(\"contenteditable\");\n    }, t.prototype.enable = function () {\n      this.layoutInfo.editable.attr(\"contenteditable\", !0), this.invoke(\"toolbar.activate\", !0), this.triggerEvent(\"disable\", !1);\n    }, t.prototype.disable = function () {\n      this.invoke(\"codeview.isActivated\") && this.invoke(\"codeview.deactivate\"), this.layoutInfo.editable.attr(\"contenteditable\", !1), this.invoke(\"toolbar.deactivate\", !0), this.triggerEvent(\"disable\", !0);\n    }, t.prototype.triggerEvent = function () {\n      var t = B.head(arguments),\n          e = B.tail(B.from(arguments)),\n          o = this.options.callbacks[A.namespaceToCamel(t, \"on\")];\n      o && o.apply(this.$note[0], e), this.$note.trigger(\"summernote.\" + t, e);\n    }, t.prototype.initializeModule = function (t) {\n      var e = this.modules[t];\n      e.shouldInitialize = e.shouldInitialize || A.ok, e.shouldInitialize() && (e.initialize && e.initialize(), e.events && $t.attachEvents(this.$note, e.events));\n    }, t.prototype.module = function (t, e, o) {\n      if (1 === arguments.length) return this.modules[t];\n      this.modules[t] = new e(this), o || this.initializeModule(t);\n    }, t.prototype.removeModule = function (t) {\n      var e = this.modules[t];\n      e.shouldInitialize() && (e.events && $t.detachEvents(this.$note, e.events), e.destroy && e.destroy()), delete this.modules[t];\n    }, t.prototype.memo = function (t, e) {\n      if (1 === arguments.length) return this.memos[t];\n      this.memos[t] = e;\n    }, t.prototype.removeMemo = function (t) {\n      this.memos[t] && this.memos[t].destroy && this.memos[t].destroy(), delete this.memos[t];\n    }, t.prototype.createInvokeHandlerAndUpdateState = function (e, o) {\n      var n = this;\n      return function (t) {\n        n.createInvokeHandler(e, o)(t), n.invoke(\"buttons.updateCurrentStyle\");\n      };\n    }, t.prototype.createInvokeHandler = function (o, n) {\n      var i = this;\n      return function (t) {\n        t.preventDefault();\n        var e = C(t.target);\n        i.invoke(o, n || e.closest(\"[data-value]\").data(\"value\"), e);\n      };\n    }, t.prototype.invoke = function () {\n      var t = B.head(arguments),\n          e = B.tail(B.from(arguments)),\n          o = t.split(\".\"),\n          n = 1 < o.length,\n          i = n && B.head(o),\n          r = n ? B.last(o) : B.head(o),\n          s = this.modules[i || \"editor\"];\n      return !i && this[r] ? this[r].apply(this, e) : s && s[r] && s.shouldInitialize() ? s[r].apply(s, e) : void 0;\n    }, t;\n  }();\n\n  function Et(t, e) {\n    var o,\n        n,\n        i = t.parentElement(),\n        r = document.body.createTextRange(),\n        s = B.from(i.childNodes);\n\n    for (o = 0; o < s.length; o++) {\n      if (!$t.isText(s[o])) {\n        if (r.moveToElementText(s[o]), 0 <= r.compareEndPoints(\"StartToStart\", t)) break;\n        n = s[o];\n      }\n    }\n\n    if (0 !== o && $t.isText(s[o - 1])) {\n      var a = document.body.createTextRange(),\n          l = null;\n      a.moveToElementText(n || i), a.collapse(!n), l = n ? n.nextSibling : i.firstChild;\n      var c = t.duplicate();\n      c.setEndPoint(\"StartToStart\", a);\n\n      for (var d = c.text.replace(/[\\r\\n]/g, \"\").length; d > l.nodeValue.length && l.nextSibling;) {\n        d -= l.nodeValue.length, l = l.nextSibling;\n      }\n\n      l.nodeValue;\n      e && l.nextSibling && $t.isText(l.nextSibling) && d === l.nodeValue.length && (d -= l.nodeValue.length, l = l.nextSibling), i = l, o = d;\n    }\n\n    return {\n      cont: i,\n      offset: o\n    };\n  }\n\n  function Rt(t) {\n    var s = function s(t, e) {\n      var o, n;\n\n      if ($t.isText(t)) {\n        var i = $t.listPrev(t, A.not($t.isText)),\n            r = B.last(i).previousSibling;\n        o = r || t.parentNode, e += B.sum(B.tail(i), $t.nodeLength), n = !r;\n      } else {\n        if (o = t.childNodes[e] || t, $t.isText(o)) return s(o, 0);\n        e = 0, n = !1;\n      }\n\n      return {\n        node: o,\n        collapseToStart: n,\n        offset: e\n      };\n    },\n        e = document.body.createTextRange(),\n        o = s(t.node, t.offset);\n\n    return e.moveToElementText(o.node), e.collapse(o.collapseToStart), e.moveStart(\"character\", o.offset), e;\n  }\n\n  C.fn.extend({\n    summernote: function summernote() {\n      var t = C.type(B.head(arguments)),\n          e = \"string\" === t,\n          o = \"object\" === t,\n          i = C.extend({}, C.summernote.options, o ? B.head(arguments) : {});\n      i.langInfo = C.extend(!0, {}, C.summernote.lang[\"en-US\"], C.summernote.lang[i.lang]), i.icons = C.extend(!0, {}, C.summernote.options.icons, i.icons), i.tooltip = \"auto\" === i.tooltip ? !R.isSupportTouch : i.tooltip, this.each(function (t, e) {\n        var o = C(e);\n\n        if (!o.data(\"summernote\")) {\n          var n = new Nt(o, i);\n          o.data(\"summernote\", n), o.data(\"summernote\").triggerEvent(\"init\", n.layoutInfo);\n        }\n      });\n      var n = this.first();\n\n      if (n.length) {\n        var r = n.data(\"summernote\");\n        if (e) return r.invoke.apply(r, B.from(arguments));\n        i.focus && r.invoke(\"editor.focus\");\n      }\n\n      return this;\n    }\n  });\n\n  var Lt = function () {\n    function r(t, e, o, n) {\n      this.sc = t, this.so = e, this.ec = o, this.eo = n, this.isOnEditable = this.makeIsOn($t.isEditable), this.isOnList = this.makeIsOn($t.isList), this.isOnAnchor = this.makeIsOn($t.isAnchor), this.isOnCell = this.makeIsOn($t.isCell), this.isOnData = this.makeIsOn($t.isData);\n    }\n\n    return r.prototype.nativeRange = function () {\n      if (R.isW3CRangeSupport) {\n        var t = document.createRange();\n        return t.setStart(this.sc, this.sc.data && this.so > this.sc.data.length ? 0 : this.so), t.setEnd(this.ec, this.sc.data ? Math.min(this.eo, this.sc.data.length) : this.eo), t;\n      }\n\n      var e = Rt({\n        node: this.sc,\n        offset: this.so\n      });\n      return e.setEndPoint(\"EndToEnd\", Rt({\n        node: this.ec,\n        offset: this.eo\n      })), e;\n    }, r.prototype.getPoints = function () {\n      return {\n        sc: this.sc,\n        so: this.so,\n        ec: this.ec,\n        eo: this.eo\n      };\n    }, r.prototype.getStartPoint = function () {\n      return {\n        node: this.sc,\n        offset: this.so\n      };\n    }, r.prototype.getEndPoint = function () {\n      return {\n        node: this.ec,\n        offset: this.eo\n      };\n    }, r.prototype.select = function () {\n      var t = this.nativeRange();\n\n      if (R.isW3CRangeSupport) {\n        var e = document.getSelection();\n        0 < e.rangeCount && e.removeAllRanges(), e.addRange(t);\n      } else t.select();\n\n      return this;\n    }, r.prototype.scrollIntoView = function (t) {\n      var e = C(t).height();\n      return t.scrollTop + e < this.sc.offsetTop && (t.scrollTop += Math.abs(t.scrollTop + e - this.sc.offsetTop)), this;\n    }, r.prototype.normalize = function () {\n      var t = function t(_t2, e) {\n        if ($t.isVisiblePoint(_t2) && (!$t.isEdgePoint(_t2) || $t.isRightEdgePoint(_t2) && !e || $t.isLeftEdgePoint(_t2) && e || $t.isRightEdgePoint(_t2) && e && $t.isVoid(_t2.node.nextSibling) || $t.isLeftEdgePoint(_t2) && !e && $t.isVoid(_t2.node.previousSibling) || $t.isBlock(_t2.node) && $t.isEmpty(_t2.node))) return _t2;\n        var o = $t.ancestor(_t2.node, $t.isBlock);\n\n        if (($t.isLeftEdgePointOf(_t2, o) || $t.isVoid($t.prevPoint(_t2).node)) && !e || ($t.isRightEdgePointOf(_t2, o) || $t.isVoid($t.nextPoint(_t2).node)) && e) {\n          if ($t.isVisiblePoint(_t2)) return _t2;\n          e = !e;\n        }\n\n        return (e ? $t.nextPointUntil($t.nextPoint(_t2), $t.isVisiblePoint) : $t.prevPointUntil($t.prevPoint(_t2), $t.isVisiblePoint)) || _t2;\n      },\n          e = t(this.getEndPoint(), !1),\n          o = this.isCollapsed() ? e : t(this.getStartPoint(), !0);\n\n      return new r(o.node, o.offset, e.node, e.offset);\n    }, r.prototype.nodes = function (o, t) {\n      o = o || A.ok;\n      var n = t && t.includeAncestor,\n          i = t && t.fullyContains,\n          e = this.getStartPoint(),\n          r = this.getEndPoint(),\n          s = [],\n          a = [];\n      return $t.walkPoint(e, r, function (t) {\n        var e;\n        $t.isEditable(t.node) || (i ? ($t.isLeftEdgePoint(t) && a.push(t.node), $t.isRightEdgePoint(t) && B.contains(a, t.node) && (e = t.node)) : e = n ? $t.ancestor(t.node, o) : t.node, e && o(e) && s.push(e));\n      }, !0), B.unique(s);\n    }, r.prototype.commonAncestor = function () {\n      return $t.commonAncestor(this.sc, this.ec);\n    }, r.prototype.expand = function (t) {\n      var e = $t.ancestor(this.sc, t),\n          o = $t.ancestor(this.ec, t);\n      if (!e && !o) return new r(this.sc, this.so, this.ec, this.eo);\n      var n = this.getPoints();\n      return e && (n.sc = e, n.so = 0), o && (n.ec = o, n.eo = $t.nodeLength(o)), new r(n.sc, n.so, n.ec, n.eo);\n    }, r.prototype.collapse = function (t) {\n      return t ? new r(this.sc, this.so, this.sc, this.so) : new r(this.ec, this.eo, this.ec, this.eo);\n    }, r.prototype.splitText = function () {\n      var t = this.sc === this.ec,\n          e = this.getPoints();\n      return $t.isText(this.ec) && !$t.isEdgePoint(this.getEndPoint()) && this.ec.splitText(this.eo), $t.isText(this.sc) && !$t.isEdgePoint(this.getStartPoint()) && (e.sc = this.sc.splitText(this.so), e.so = 0, t && (e.ec = e.sc, e.eo = this.eo - this.so)), new r(e.sc, e.so, e.ec, e.eo);\n    }, r.prototype.deleteContents = function () {\n      if (this.isCollapsed()) return this;\n      var t = this.splitText(),\n          e = t.nodes(null, {\n        fullyContains: !0\n      }),\n          n = $t.prevPointUntil(t.getStartPoint(), function (t) {\n        return !B.contains(e, t.node);\n      }),\n          i = [];\n      return C.each(e, function (t, e) {\n        var o = e.parentNode;\n        n.node !== o && 1 === $t.nodeLength(o) && i.push(o), $t.remove(e, !1);\n      }), C.each(i, function (t, e) {\n        $t.remove(e, !1);\n      }), new r(n.node, n.offset, n.node, n.offset).normalize();\n    }, r.prototype.makeIsOn = function (e) {\n      return function () {\n        var t = $t.ancestor(this.sc, e);\n        return !!t && t === $t.ancestor(this.ec, e);\n      };\n    }, r.prototype.isLeftEdgeOf = function (t) {\n      if (!$t.isLeftEdgePoint(this.getStartPoint())) return !1;\n      var e = $t.ancestor(this.sc, t);\n      return e && $t.isLeftEdgeOf(this.sc, e);\n    }, r.prototype.isCollapsed = function () {\n      return this.sc === this.ec && this.so === this.eo;\n    }, r.prototype.wrapBodyInlineWithPara = function () {\n      if ($t.isBodyContainer(this.sc) && $t.isEmpty(this.sc)) return this.sc.innerHTML = $t.emptyPara, new r(this.sc.firstChild, 0, this.sc.firstChild, 0);\n      var t,\n          e = this.normalize();\n      if ($t.isParaInline(this.sc) || $t.isPara(this.sc)) return e;\n\n      if ($t.isInline(e.sc)) {\n        var o = $t.listAncestor(e.sc, A.not($t.isInline));\n        t = B.last(o), $t.isInline(t) || (t = o[o.length - 2] || e.sc.childNodes[e.so]);\n      } else t = e.sc.childNodes[0 < e.so ? e.so - 1 : 0];\n\n      var n = $t.listPrev(t, $t.isParaInline).reverse();\n\n      if ((n = n.concat($t.listNext(t.nextSibling, $t.isParaInline))).length) {\n        var i = $t.wrap(B.head(n), \"p\");\n        $t.appendChildNodes(i, B.tail(n));\n      }\n\n      return this.normalize();\n    }, r.prototype.insertNode = function (t) {\n      var e = this.wrapBodyInlineWithPara().deleteContents(),\n          o = $t.splitPoint(e.getStartPoint(), $t.isInline(t));\n      return o.rightNode ? o.rightNode.parentNode.insertBefore(t, o.rightNode) : o.container.appendChild(t), t;\n    }, r.prototype.pasteHTML = function (t) {\n      var e = C(\"<div></div>\").html(t)[0],\n          o = B.from(e.childNodes),\n          n = this.wrapBodyInlineWithPara().deleteContents();\n      return 0 < n.so && (o = o.reverse()), o = o.map(function (t) {\n        return n.insertNode(t);\n      }), 0 < n.so && (o = o.reverse()), o;\n    }, r.prototype.toString = function () {\n      var t = this.nativeRange();\n      return R.isW3CRangeSupport ? t.toString() : t.text;\n    }, r.prototype.getWordRange = function (t) {\n      var e = this.getEndPoint();\n      if (!$t.isCharPoint(e)) return this;\n      var o = $t.prevPointUntil(e, function (t) {\n        return !$t.isCharPoint(t);\n      });\n      return t && (e = $t.nextPointUntil(e, function (t) {\n        return !$t.isCharPoint(t);\n      })), new r(o.node, o.offset, e.node, e.offset);\n    }, r.prototype.bookmark = function (t) {\n      return {\n        s: {\n          path: $t.makeOffsetPath(t, this.sc),\n          offset: this.so\n        },\n        e: {\n          path: $t.makeOffsetPath(t, this.ec),\n          offset: this.eo\n        }\n      };\n    }, r.prototype.paraBookmark = function (t) {\n      return {\n        s: {\n          path: B.tail($t.makeOffsetPath(B.head(t), this.sc)),\n          offset: this.so\n        },\n        e: {\n          path: B.tail($t.makeOffsetPath(B.last(t), this.ec)),\n          offset: this.eo\n        }\n      };\n    }, r.prototype.getClientRects = function () {\n      return this.nativeRange().getClientRects();\n    }, r;\n  }(),\n      At = {\n    create: function create(t, e, o, n) {\n      if (4 === arguments.length) return new Lt(t, e, o, n);\n      if (2 === arguments.length) return new Lt(o = t, n = e, o, n);\n      var i = this.createFromSelection();\n      return i || 1 !== arguments.length ? i : (i = this.createFromNode(t)).collapse($t.emptyPara === t.innerHTML);\n    },\n    createFromSelection: function createFromSelection() {\n      var t, e, o, n;\n\n      if (R.isW3CRangeSupport) {\n        var i = document.getSelection();\n        if (!i || 0 === i.rangeCount) return null;\n        if ($t.isBody(i.anchorNode)) return null;\n        var r = i.getRangeAt(0);\n        t = r.startContainer, e = r.startOffset, o = r.endContainer, n = r.endOffset;\n      } else {\n        var s = document.selection.createRange(),\n            a = s.duplicate();\n        a.collapse(!1);\n        var l = s;\n        l.collapse(!0);\n        var c = Et(l, !0),\n            d = Et(a, !1);\n        $t.isText(c.node) && $t.isLeftEdgePoint(c) && $t.isTextNode(d.node) && $t.isRightEdgePoint(d) && d.node.nextSibling === c.node && (c = d), t = c.cont, e = c.offset, o = d.cont, n = d.offset;\n      }\n\n      return new Lt(t, e, o, n);\n    },\n    createFromNode: function createFromNode(t) {\n      var e = t,\n          o = 0,\n          n = t,\n          i = $t.nodeLength(n);\n      return $t.isVoid(e) && (o = $t.listPrev(e).length - 1, e = e.parentNode), $t.isBR(n) ? (i = $t.listPrev(n).length - 1, n = n.parentNode) : $t.isVoid(n) && (i = $t.listPrev(n).length, n = n.parentNode), this.create(e, o, n, i);\n    },\n    createFromNodeBefore: function createFromNodeBefore(t) {\n      return this.createFromNode(t).collapse(!0);\n    },\n    createFromNodeAfter: function createFromNodeAfter(t) {\n      return this.createFromNode(t).collapse();\n    },\n    createFromBookmark: function createFromBookmark(t, e) {\n      var o = $t.fromOffsetPath(t, e.s.path),\n          n = e.s.offset,\n          i = $t.fromOffsetPath(t, e.e.path),\n          r = e.e.offset;\n      return new Lt(o, n, i, r);\n    },\n    createFromParaBookmark: function createFromParaBookmark(t, e) {\n      var o = t.s.offset,\n          n = t.e.offset,\n          i = $t.fromOffsetPath(B.head(e), t.s.path),\n          r = $t.fromOffsetPath(B.last(e), t.e.path);\n      return new Lt(i, o, r, n);\n    }\n  },\n      Ft = {\n    BACKSPACE: 8,\n    TAB: 9,\n    ENTER: 13,\n    SPACE: 32,\n    DELETE: 46,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    NUM0: 48,\n    NUM1: 49,\n    NUM2: 50,\n    NUM3: 51,\n    NUM4: 52,\n    NUM5: 53,\n    NUM6: 54,\n    NUM7: 55,\n    NUM8: 56,\n    B: 66,\n    E: 69,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    R: 82,\n    S: 83,\n    U: 85,\n    V: 86,\n    Y: 89,\n    Z: 90,\n    SLASH: 191,\n    LEFTBRACKET: 219,\n    BACKSLASH: 220,\n    RIGHTBRACKET: 221\n  },\n      Pt = {\n    isEdit: function isEdit(t) {\n      return B.contains([Ft.BACKSPACE, Ft.TAB, Ft.ENTER, Ft.SPACE, Ft.DELETE], t);\n    },\n    isMove: function isMove(t) {\n      return B.contains([Ft.LEFT, Ft.UP, Ft.RIGHT, Ft.DOWN], t);\n    },\n    nameFromCode: A.invertObject(Ft),\n    code: Ft\n  };\n\n  var Ht = function () {\n    function t(t) {\n      this.stack = [], this.stackOffset = -1, this.$editable = t, this.editable = t[0];\n    }\n\n    return t.prototype.makeSnapshot = function () {\n      var t = At.create(this.editable);\n      return {\n        contents: this.$editable.html(),\n        bookmark: t && t.isOnEditable() ? t.bookmark(this.editable) : {\n          s: {\n            path: [],\n            offset: 0\n          },\n          e: {\n            path: [],\n            offset: 0\n          }\n        }\n      };\n    }, t.prototype.applySnapshot = function (t) {\n      null !== t.contents && this.$editable.html(t.contents), null !== t.bookmark && At.createFromBookmark(this.editable, t.bookmark).select();\n    }, t.prototype.rewind = function () {\n      this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), this.stackOffset = 0, this.applySnapshot(this.stack[this.stackOffset]);\n    }, t.prototype.commit = function () {\n      this.stack = [], this.stackOffset = -1, this.recordUndo();\n    }, t.prototype.reset = function () {\n      this.stack = [], this.stackOffset = -1, this.$editable.html(\"\"), this.recordUndo();\n    }, t.prototype.undo = function () {\n      this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), 0 < this.stackOffset && (this.stackOffset--, this.applySnapshot(this.stack[this.stackOffset]));\n    }, t.prototype.redo = function () {\n      this.stack.length - 1 > this.stackOffset && (this.stackOffset++, this.applySnapshot(this.stack[this.stackOffset]));\n    }, t.prototype.recordUndo = function () {\n      this.stackOffset++, this.stack.length > this.stackOffset && (this.stack = this.stack.slice(0, this.stackOffset)), this.stack.push(this.makeSnapshot());\n    }, t;\n  }(),\n      Dt = function () {\n    function t() {}\n\n    return t.prototype.jQueryCSS = function (o, t) {\n      if (R.jqueryVersion < 1.9) {\n        var n = {};\n        return C.each(t, function (t, e) {\n          n[e] = o.css(e);\n        }), n;\n      }\n\n      return o.css(t);\n    }, t.prototype.fromNode = function (t) {\n      var e = this.jQueryCSS(t, [\"font-family\", \"font-size\", \"text-align\", \"list-style-type\", \"line-height\"]) || {};\n      return e[\"font-size\"] = parseInt(e[\"font-size\"], 10), e;\n    }, t.prototype.stylePara = function (t, o) {\n      C.each(t.nodes($t.isPara, {\n        includeAncestor: !0\n      }), function (t, e) {\n        C(e).css(o);\n      });\n    }, t.prototype.styleNodes = function (t, e) {\n      t = t.splitText();\n      var o = e && e.nodeName || \"SPAN\",\n          n = !(!e || !e.expandClosestSibling),\n          i = !(!e || !e.onlyPartialContains);\n      if (t.isCollapsed()) return [t.insertNode($t.create(o))];\n      var r = $t.makePredByNodeName(o),\n          s = t.nodes($t.isText, {\n        fullyContains: !0\n      }).map(function (t) {\n        return $t.singleChildAncestor(t, r) || $t.wrap(t, o);\n      });\n\n      if (n) {\n        if (i) {\n          var a = t.nodes();\n          r = A.and(r, function (t) {\n            return B.contains(a, t);\n          });\n        }\n\n        return s.map(function (t) {\n          var e = $t.withClosestSiblings(t, r),\n              o = B.head(e),\n              n = B.tail(e);\n          return C.each(n, function (t, e) {\n            $t.appendChildNodes(o, e.childNodes), $t.remove(e);\n          }), B.head(e);\n        });\n      }\n\n      return s;\n    }, t.prototype.current = function (t) {\n      var e = C($t.isElement(t.sc) ? t.sc : t.sc.parentNode),\n          o = this.fromNode(e);\n\n      try {\n        o = C.extend(o, {\n          \"font-bold\": document.queryCommandState(\"bold\") ? \"bold\" : \"normal\",\n          \"font-italic\": document.queryCommandState(\"italic\") ? \"italic\" : \"normal\",\n          \"font-underline\": document.queryCommandState(\"underline\") ? \"underline\" : \"normal\",\n          \"font-subscript\": document.queryCommandState(\"subscript\") ? \"subscript\" : \"normal\",\n          \"font-superscript\": document.queryCommandState(\"superscript\") ? \"superscript\" : \"normal\",\n          \"font-strikethrough\": document.queryCommandState(\"strikethrough\") ? \"strikethrough\" : \"normal\",\n          \"font-family\": document.queryCommandValue(\"fontname\") || o[\"font-family\"]\n        });\n      } catch (t) {}\n\n      if (t.isOnList()) {\n        var n = -1 < [\"circle\", \"disc\", \"disc-leading-zero\", \"square\"].indexOf(o[\"list-style-type\"]);\n        o[\"list-style\"] = n ? \"unordered\" : \"ordered\";\n      } else o[\"list-style\"] = \"none\";\n\n      var i = $t.ancestor(t.sc, $t.isPara);\n      if (i && i.style[\"line-height\"]) o[\"line-height\"] = i.style.lineHeight;else {\n        var r = parseInt(o[\"line-height\"], 10) / parseInt(o[\"font-size\"], 10);\n        o[\"line-height\"] = r.toFixed(1);\n      }\n      return o.anchor = t.isOnAnchor() && $t.ancestor(t.sc, $t.isAnchor), o.ancestors = $t.listAncestor(t.sc, $t.isEditable), o.range = t, o;\n    }, t;\n  }(),\n      Bt = function () {\n    function t() {}\n\n    return t.prototype.insertOrderedList = function (t) {\n      this.toggleList(\"OL\", t);\n    }, t.prototype.insertUnorderedList = function (t) {\n      this.toggleList(\"UL\", t);\n    }, t.prototype.indent = function (t) {\n      var i = this,\n          e = At.create(t).wrapBodyInlineWithPara(),\n          o = e.nodes($t.isPara, {\n        includeAncestor: !0\n      }),\n          n = B.clusterBy(o, A.peq2(\"parentNode\"));\n      C.each(n, function (t, e) {\n        var o = B.head(e);\n\n        if ($t.isLi(o)) {\n          var n = i.findList(o.previousSibling);\n          n ? e.map(function (t) {\n            return n.appendChild(t);\n          }) : (i.wrapList(e, o.parentNode.nodeName), e.map(function (t) {\n            return t.parentNode;\n          }).map(function (t) {\n            return i.appendToPrevious(t);\n          }));\n        } else C.each(e, function (t, e) {\n          C(e).css(\"marginLeft\", function (t, e) {\n            return (parseInt(e, 10) || 0) + 25;\n          });\n        });\n      }), e.select();\n    }, t.prototype.outdent = function (t) {\n      var n = this,\n          e = At.create(t).wrapBodyInlineWithPara(),\n          o = e.nodes($t.isPara, {\n        includeAncestor: !0\n      }),\n          i = B.clusterBy(o, A.peq2(\"parentNode\"));\n      C.each(i, function (t, e) {\n        var o = B.head(e);\n        $t.isLi(o) ? n.releaseList([e]) : C.each(e, function (t, e) {\n          C(e).css(\"marginLeft\", function (t, e) {\n            return 25 < (e = parseInt(e, 10) || 0) ? e - 25 : \"\";\n          });\n        });\n      }), e.select();\n    }, t.prototype.toggleList = function (o, t) {\n      var n = this,\n          e = At.create(t).wrapBodyInlineWithPara(),\n          i = e.nodes($t.isPara, {\n        includeAncestor: !0\n      }),\n          r = e.paraBookmark(i),\n          s = B.clusterBy(i, A.peq2(\"parentNode\"));\n\n      if (B.find(i, $t.isPurePara)) {\n        var a = [];\n        C.each(s, function (t, e) {\n          a = a.concat(n.wrapList(e, o));\n        }), i = a;\n      } else {\n        var l = e.nodes($t.isList, {\n          includeAncestor: !0\n        }).filter(function (t) {\n          return !C.nodeName(t, o);\n        });\n        l.length ? C.each(l, function (t, e) {\n          $t.replace(e, o);\n        }) : i = this.releaseList(s, !0);\n      }\n\n      At.createFromParaBookmark(r, i).select();\n    }, t.prototype.wrapList = function (t, e) {\n      var o = B.head(t),\n          n = B.last(t),\n          i = $t.isList(o.previousSibling) && o.previousSibling,\n          r = $t.isList(n.nextSibling) && n.nextSibling,\n          s = i || $t.insertAfter($t.create(e || \"UL\"), n);\n      return t = t.map(function (t) {\n        return $t.isPurePara(t) ? $t.replace(t, \"LI\") : t;\n      }), $t.appendChildNodes(s, t), r && ($t.appendChildNodes(s, B.from(r.childNodes)), $t.remove(r)), t;\n    }, t.prototype.releaseList = function (t, c) {\n      var d = this,\n          u = [];\n      return C.each(t, function (t, e) {\n        var o = B.head(e),\n            n = B.last(e),\n            i = c ? $t.lastAncestor(o, $t.isList) : o.parentNode,\n            r = i.parentNode;\n        if (\"LI\" === i.parentNode.nodeName) e.map(function (t) {\n          var e = d.findNextSiblings(t);\n          r.nextSibling ? r.parentNode.insertBefore(t, r.nextSibling) : r.parentNode.appendChild(t), e.length && (d.wrapList(e, i.nodeName), t.appendChild(e[0].parentNode));\n        }), 0 === i.children.length && r.removeChild(i), 0 === r.childNodes.length && r.parentNode.removeChild(r);else {\n          var s = 1 < i.childNodes.length ? $t.splitTree(i, {\n            node: n.parentNode,\n            offset: $t.position(n) + 1\n          }, {\n            isSkipPaddingBlankHTML: !0\n          }) : null,\n              a = $t.splitTree(i, {\n            node: o.parentNode,\n            offset: $t.position(o)\n          }, {\n            isSkipPaddingBlankHTML: !0\n          });\n          e = c ? $t.listDescendant(a, $t.isLi) : B.from(a.childNodes).filter($t.isLi), !c && $t.isList(i.parentNode) || (e = e.map(function (t) {\n            return $t.replace(t, \"P\");\n          })), C.each(B.from(e).reverse(), function (t, e) {\n            $t.insertAfter(e, i);\n          });\n          var l = B.compact([i, a, s]);\n          C.each(l, function (t, e) {\n            var o = [e].concat($t.listDescendant(e, $t.isList));\n            C.each(o.reverse(), function (t, e) {\n              $t.nodeLength(e) || $t.remove(e, !0);\n            });\n          });\n        }\n        u = u.concat(e);\n      }), u;\n    }, t.prototype.appendToPrevious = function (t) {\n      return t.previousSibling ? $t.appendChildNodes(t.previousSibling, [t]) : this.wrapList([t], \"LI\");\n    }, t.prototype.findList = function (t) {\n      return t ? B.find(t.children, function (t) {\n        return -1 < [\"OL\", \"UL\"].indexOf(t.nodeName);\n      }) : null;\n    }, t.prototype.findNextSiblings = function (t) {\n      for (var e = []; t.nextSibling;) {\n        e.push(t.nextSibling), t = t.nextSibling;\n      }\n\n      return e;\n    }, t;\n  }(),\n      zt = function () {\n    function t(t) {\n      this.bullet = new Bt(), this.options = t.options;\n    }\n\n    return t.prototype.insertTab = function (t, e) {\n      var o = $t.createText(new Array(e + 1).join($t.NBSP_CHAR));\n      (t = t.deleteContents()).insertNode(o, !0), (t = At.create(o, e)).select();\n    }, t.prototype.insertParagraph = function (t, e) {\n      e = (e = (e = e || At.create(t)).deleteContents()).wrapBodyInlineWithPara();\n      var o,\n          n = $t.ancestor(e.sc, $t.isPara);\n\n      if (n) {\n        if ($t.isEmpty(n) && $t.isLi(n)) return void this.bullet.toggleList(n.parentNode.nodeName);\n        var i = null;\n\n        if (1 === this.options.blockquoteBreakingLevel ? i = $t.ancestor(n, $t.isBlockquote) : 2 === this.options.blockquoteBreakingLevel && (i = $t.lastAncestor(n, $t.isBlockquote)), i) {\n          o = C($t.emptyPara)[0], $t.isRightEdgePoint(e.getStartPoint()) && $t.isBR(e.sc.nextSibling) && C(e.sc.nextSibling).remove();\n          var r = $t.splitTree(i, e.getStartPoint(), {\n            isDiscardEmptySplits: !0\n          });\n          r ? r.parentNode.insertBefore(o, r) : $t.insertAfter(o, i);\n        } else {\n          o = $t.splitTree(n, e.getStartPoint());\n          var s = $t.listDescendant(n, $t.isEmptyAnchor);\n          s = s.concat($t.listDescendant(o, $t.isEmptyAnchor)), C.each(s, function (t, e) {\n            $t.remove(e);\n          }), ($t.isHeading(o) || $t.isPre(o) || $t.isCustomStyleTag(o)) && $t.isEmpty(o) && (o = $t.replace(o, \"p\"));\n        }\n      } else {\n        var a = e.sc.childNodes[e.so];\n        o = C($t.emptyPara)[0], a ? e.sc.insertBefore(o, a) : e.sc.appendChild(o);\n      }\n\n      At.create(o, 0).normalize().select().scrollIntoView(t);\n    }, t;\n  }(),\n      Mt = function Mt(t, h, p, i) {\n    var f = {\n      colPos: 0,\n      rowPos: 0\n    },\n        m = [],\n        g = [];\n\n    function v(t, e, o, n, i, r, s) {\n      var a = {\n        baseRow: o,\n        baseCell: n,\n        isRowSpan: i,\n        isColSpan: r,\n        isVirtual: s\n      };\n      m[t] || (m[t] = []), m[t][e] = a;\n    }\n\n    function b(t, e) {\n      if (!m[t]) return e;\n      if (!m[t][e]) return e;\n\n      for (var o = e; m[t][o];) {\n        if (o++, !m[t][o]) return o;\n      }\n    }\n\n    function r(t, e) {\n      var o = b(t.rowIndex, e.cellIndex),\n          n = 1 < e.colSpan,\n          i = 1 < e.rowSpan,\n          r = t.rowIndex === f.rowPos && e.cellIndex === f.colPos;\n      v(t.rowIndex, o, t, e, i, n, !1);\n      var s = e.attributes.rowSpan ? parseInt(e.attributes.rowSpan.value, 10) : 0;\n      if (1 < s) for (var a = 1; a < s; a++) {\n        var l = t.rowIndex + a;\n        y(l, o, e, r), v(l, o, t, e, !0, n, !0);\n      }\n      var c = e.attributes.colSpan ? parseInt(e.attributes.colSpan.value, 10) : 0;\n      if (1 < c) for (var d = 1; d < c; d++) {\n        var u = b(t.rowIndex, o + d);\n        y(t.rowIndex, u, e, r), v(t.rowIndex, u, t, e, i, !0, !0);\n      }\n    }\n\n    function y(t, e, o, n) {\n      t === f.rowPos && f.colPos >= o.cellIndex && o.cellIndex <= e && !n && f.colPos++;\n    }\n\n    function k(t) {\n      switch (h) {\n        case Mt.where.Column:\n          if (t.isColSpan) return Mt.resultAction.SubtractSpanCount;\n          break;\n\n        case Mt.where.Row:\n          if (!t.isVirtual && t.isRowSpan) return Mt.resultAction.AddCell;\n          if (t.isRowSpan) return Mt.resultAction.SubtractSpanCount;\n      }\n\n      return Mt.resultAction.RemoveCell;\n    }\n\n    function C(t) {\n      switch (h) {\n        case Mt.where.Column:\n          if (t.isColSpan) return Mt.resultAction.SumSpanCount;\n          if (t.isRowSpan && t.isVirtual) return Mt.resultAction.Ignore;\n          break;\n\n        case Mt.where.Row:\n          if (t.isRowSpan) return Mt.resultAction.SumSpanCount;\n          if (t.isColSpan && t.isVirtual) return Mt.resultAction.Ignore;\n      }\n\n      return Mt.resultAction.AddCell;\n    }\n\n    this.getActionList = function () {\n      for (var t, e, o, n = h === Mt.where.Row ? f.rowPos : -1, i = h === Mt.where.Column ? f.colPos : -1, r = 0, s = !0; s;) {\n        var a = 0 <= n ? n : r,\n            l = 0 <= i ? i : r,\n            c = m[a];\n        if (!c) return s = !1, g;\n        var d = c[l];\n        if (!d) return s = !1, g;\n        var u = Mt.resultAction.Ignore;\n\n        switch (p) {\n          case Mt.requestAction.Add:\n            u = C(d);\n            break;\n\n          case Mt.requestAction.Delete:\n            u = k(d);\n        }\n\n        g.push((t = u, e = a, o = l, {\n          baseCell: d.baseCell,\n          action: t,\n          virtualTable: {\n            rowIndex: e,\n            cellIndex: o\n          }\n        })), r++;\n      }\n\n      return g;\n    }, t && t.tagName && (\"td\" === t.tagName.toLowerCase() || \"th\" === t.tagName.toLowerCase()) ? (f.colPos = t.cellIndex, t.parentElement && t.parentElement.tagName && \"tr\" === t.parentElement.tagName.toLowerCase() ? f.rowPos = t.parentElement.rowIndex : console.error(\"Impossible to identify start Row point.\", t)) : console.error(\"Impossible to identify start Cell point.\", t), function () {\n      for (var t = i.rows, e = 0; e < t.length; e++) {\n        for (var o = t[e].cells, n = 0; n < o.length; n++) {\n          r(t[e], o[n]);\n        }\n      }\n    }();\n  };\n\n  Mt.where = {\n    Row: 0,\n    Column: 1\n  }, Mt.requestAction = {\n    Add: 0,\n    Delete: 1\n  }, Mt.resultAction = {\n    Ignore: 0,\n    SubtractSpanCount: 1,\n    RemoveCell: 2,\n    AddCell: 3,\n    SumSpanCount: 4\n  };\n\n  var Ot,\n      Ut = function () {\n    function t() {}\n\n    return t.prototype.tab = function (t, e) {\n      var o = $t.ancestor(t.commonAncestor(), $t.isCell),\n          n = $t.ancestor(o, $t.isTable),\n          i = $t.listDescendant(n, $t.isCell),\n          r = B[e ? \"prev\" : \"next\"](i, o);\n      r && At.create(r, 0).select();\n    }, t.prototype.addRow = function (t, e) {\n      for (var o = $t.ancestor(t.commonAncestor(), $t.isCell), n = C(o).closest(\"tr\"), i = this.recoverAttributes(n), r = C(\"<tr\" + i + \"></tr>\"), s = new Mt(o, Mt.where.Row, Mt.requestAction.Add, C(n).closest(\"table\")[0]).getActionList(), a = 0; a < s.length; a++) {\n        var l = s[a],\n            c = this.recoverAttributes(l.baseCell);\n\n        switch (l.action) {\n          case Mt.resultAction.AddCell:\n            r.append(\"<td\" + c + \">\" + $t.blank + \"</td>\");\n            break;\n\n          case Mt.resultAction.SumSpanCount:\n            if (\"top\" === e) if ((l.baseCell.parent ? l.baseCell.closest(\"tr\").rowIndex : 0) <= n[0].rowIndex) {\n              var d = C(\"<div></div>\").append(C(\"<td\" + c + \">\" + $t.blank + \"</td>\").removeAttr(\"rowspan\")).html();\n              r.append(d);\n              break;\n            }\n            var u = parseInt(l.baseCell.rowSpan, 10);\n            u++, l.baseCell.setAttribute(\"rowSpan\", u);\n        }\n      }\n\n      if (\"top\" === e) n.before(r);else {\n        if (1 < o.rowSpan) {\n          var h = n[0].rowIndex + (o.rowSpan - 2);\n          return void C(C(n).parent().find(\"tr\")[h]).after(C(r));\n        }\n\n        n.after(r);\n      }\n    }, t.prototype.addCol = function (t, e) {\n      var o = $t.ancestor(t.commonAncestor(), $t.isCell),\n          n = C(o).closest(\"tr\");\n      C(n).siblings().push(n);\n\n      for (var i = new Mt(o, Mt.where.Column, Mt.requestAction.Add, C(n).closest(\"table\")[0]).getActionList(), r = 0; r < i.length; r++) {\n        var s = i[r],\n            a = this.recoverAttributes(s.baseCell);\n\n        switch (s.action) {\n          case Mt.resultAction.AddCell:\n            \"right\" === e ? C(s.baseCell).after(\"<td\" + a + \">\" + $t.blank + \"</td>\") : C(s.baseCell).before(\"<td\" + a + \">\" + $t.blank + \"</td>\");\n            break;\n\n          case Mt.resultAction.SumSpanCount:\n            if (\"right\" === e) {\n              var l = parseInt(s.baseCell.colSpan, 10);\n              l++, s.baseCell.setAttribute(\"colSpan\", l);\n            } else C(s.baseCell).before(\"<td\" + a + \">\" + $t.blank + \"</td>\");\n\n        }\n      }\n    }, t.prototype.recoverAttributes = function (t) {\n      var e = \"\";\n      if (!t) return e;\n\n      for (var o = t.attributes || [], n = 0; n < o.length; n++) {\n        \"id\" !== o[n].name.toLowerCase() && o[n].specified && (e += \" \" + o[n].name + \"='\" + o[n].value + \"'\");\n      }\n\n      return e;\n    }, t.prototype.deleteRow = function (t) {\n      for (var e = $t.ancestor(t.commonAncestor(), $t.isCell), o = C(e).closest(\"tr\"), n = o.children(\"td, th\").index(C(e)), i = o[0].rowIndex, r = new Mt(e, Mt.where.Row, Mt.requestAction.Delete, C(o).closest(\"table\")[0]).getActionList(), s = 0; s < r.length; s++) {\n        if (r[s]) {\n          var a = r[s].baseCell,\n              l = r[s].virtualTable,\n              c = a.rowSpan && 1 < a.rowSpan,\n              d = c ? parseInt(a.rowSpan, 10) : 0;\n\n          switch (r[s].action) {\n            case Mt.resultAction.Ignore:\n              continue;\n\n            case Mt.resultAction.AddCell:\n              var u = o.next(\"tr\")[0];\n              if (!u) continue;\n              var h = o[0].cells[n];\n              c && (2 < d ? (d--, u.insertBefore(h, u.cells[n]), u.cells[n].setAttribute(\"rowSpan\", d), u.cells[n].innerHTML = \"\") : 2 === d && (u.insertBefore(h, u.cells[n]), u.cells[n].removeAttribute(\"rowSpan\"), u.cells[n].innerHTML = \"\"));\n              continue;\n\n            case Mt.resultAction.SubtractSpanCount:\n              c && (2 < d ? (d--, a.setAttribute(\"rowSpan\", d), l.rowIndex !== i && a.cellIndex === n && (a.innerHTML = \"\")) : 2 === d && (a.removeAttribute(\"rowSpan\"), l.rowIndex !== i && a.cellIndex === n && (a.innerHTML = \"\")));\n              continue;\n\n            case Mt.resultAction.RemoveCell:\n              continue;\n          }\n        }\n      }\n\n      o.remove();\n    }, t.prototype.deleteCol = function (t) {\n      for (var e = $t.ancestor(t.commonAncestor(), $t.isCell), o = C(e).closest(\"tr\"), n = o.children(\"td, th\").index(C(e)), i = new Mt(e, Mt.where.Column, Mt.requestAction.Delete, C(o).closest(\"table\")[0]).getActionList(), r = 0; r < i.length; r++) {\n        if (i[r]) switch (i[r].action) {\n          case Mt.resultAction.Ignore:\n            continue;\n\n          case Mt.resultAction.SubtractSpanCount:\n            var s = i[r].baseCell;\n\n            if (s.colSpan && 1 < s.colSpan) {\n              var a = s.colSpan ? parseInt(s.colSpan, 10) : 0;\n              2 < a ? (a--, s.setAttribute(\"colSpan\", a), s.cellIndex === n && (s.innerHTML = \"\")) : 2 === a && (s.removeAttribute(\"colSpan\"), s.cellIndex === n && (s.innerHTML = \"\"));\n            }\n\n            continue;\n\n          case Mt.resultAction.RemoveCell:\n            $t.remove(i[r].baseCell, !0);\n            continue;\n        }\n      }\n    }, t.prototype.createTable = function (t, e, o) {\n      for (var n, i = [], r = 0; r < t; r++) {\n        i.push(\"<td>\" + $t.blank + \"</td>\");\n      }\n\n      n = i.join(\"\");\n\n      for (var s, a = [], l = 0; l < e; l++) {\n        a.push(\"<tr>\" + n + \"</tr>\");\n      }\n\n      s = a.join(\"\");\n      var c = C(\"<table>\" + s + \"</table>\");\n      return o && o.tableClassName && c.addClass(o.tableClassName), c[0];\n    }, t.prototype.deleteTable = function (t) {\n      var e = $t.ancestor(t.commonAncestor(), $t.isCell);\n      C(e).closest(\"table\").remove();\n    }, t;\n  }(),\n      jt = function () {\n    function t(t) {\n      var u = this;\n      this.context = t, this.$note = t.layoutInfo.note, this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.options = t.options, this.lang = this.options.langInfo, this.editable = this.$editable[0], this.lastRange = null, this.style = new Dt(), this.table = new Ut(), this.typing = new zt(t), this.bullet = new Bt(), this.history = new Ht(this.$editable), this.context.memo(\"help.undo\", this.lang.help.undo), this.context.memo(\"help.redo\", this.lang.help.redo), this.context.memo(\"help.tab\", this.lang.help.tab), this.context.memo(\"help.untab\", this.lang.help.untab), this.context.memo(\"help.insertParagraph\", this.lang.help.insertParagraph), this.context.memo(\"help.insertOrderedList\", this.lang.help.insertOrderedList), this.context.memo(\"help.insertUnorderedList\", this.lang.help.insertUnorderedList), this.context.memo(\"help.indent\", this.lang.help.indent), this.context.memo(\"help.outdent\", this.lang.help.outdent), this.context.memo(\"help.formatPara\", this.lang.help.formatPara), this.context.memo(\"help.insertHorizontalRule\", this.lang.help.insertHorizontalRule), this.context.memo(\"help.fontName\", this.lang.help.fontName);\n\n      for (var e = [\"bold\", \"italic\", \"underline\", \"strikethrough\", \"superscript\", \"subscript\", \"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\", \"formatBlock\", \"removeFormat\", \"backColor\"], o = 0, n = e.length; o < n; o++) {\n        this[e[o]] = function (e) {\n          return function (t) {\n            u.beforeCommand(), document.execCommand(e, !1, t), u.afterCommand(!0);\n          };\n        }(e[o]), this.context.memo(\"help.\" + e[o], this.lang.help[e[o]]);\n      }\n\n      this.fontName = this.wrapCommand(function (t) {\n        return u.fontStyling(\"font-family\", \"'\" + t + \"'\");\n      }), this.fontSize = this.wrapCommand(function (t) {\n        return u.fontStyling(\"font-size\", t + \"px\");\n      });\n\n      for (o = 1; o <= 6; o++) {\n        this[\"formatH\" + o] = function (t) {\n          return function () {\n            u.formatBlock(\"H\" + t);\n          };\n        }(o), this.context.memo(\"help.formatH\" + o, this.lang.help[\"formatH\" + o]);\n      }\n\n      this.insertParagraph = this.wrapCommand(function () {\n        u.typing.insertParagraph(u.editable);\n      }), this.insertOrderedList = this.wrapCommand(function () {\n        u.bullet.insertOrderedList(u.editable);\n      }), this.insertUnorderedList = this.wrapCommand(function () {\n        u.bullet.insertUnorderedList(u.editable);\n      }), this.indent = this.wrapCommand(function () {\n        u.bullet.indent(u.editable);\n      }), this.outdent = this.wrapCommand(function () {\n        u.bullet.outdent(u.editable);\n      }), this.insertNode = this.wrapCommand(function (t) {\n        u.isLimited(C(t).text().length) || (u.getLastRange().insertNode(t), At.createFromNodeAfter(t).select(), u.setLastRange());\n      }), this.insertText = this.wrapCommand(function (t) {\n        if (!u.isLimited(t.length)) {\n          var e = u.getLastRange().insertNode($t.createText(t));\n          At.create(e, $t.nodeLength(e)).select(), u.setLastRange();\n        }\n      }), this.pasteHTML = this.wrapCommand(function (t) {\n        if (!u.isLimited(t.length)) {\n          t = u.context.invoke(\"codeview.purify\", t);\n          var e = u.getLastRange().pasteHTML(t);\n          At.createFromNodeAfter(B.last(e)).select(), u.setLastRange();\n        }\n      }), this.formatBlock = this.wrapCommand(function (t, e) {\n        var o = u.options.callbacks.onApplyCustomStyle;\n        o ? o.call(u, e, u.context, u.onFormatBlock) : u.onFormatBlock(t, e);\n      }), this.insertHorizontalRule = this.wrapCommand(function () {\n        var t = u.getLastRange().insertNode($t.create(\"HR\"));\n        t.nextSibling && (At.create(t.nextSibling, 0).normalize().select(), u.setLastRange());\n      }), this.lineHeight = this.wrapCommand(function (t) {\n        u.style.stylePara(u.getLastRange(), {\n          lineHeight: t\n        });\n      }), this.createLink = this.wrapCommand(function (t) {\n        var o = t.url,\n            e = t.text,\n            n = t.isNewWindow,\n            i = t.range || u.getLastRange(),\n            r = e.length - i.toString().length;\n\n        if (!(0 < r && u.isLimited(r))) {\n          var s = i.toString() !== e;\n          \"string\" == typeof o && (o = o.trim()), o = u.options.onCreateLink ? u.options.onCreateLink(o) : /^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(o) ? o : \"http://\" + o;\n          var a = [];\n\n          if (s) {\n            var l = (i = i.deleteContents()).insertNode(C(\"<A>\" + e + \"</A>\")[0]);\n            a.push(l);\n          } else a = u.style.styleNodes(i, {\n            nodeName: \"A\",\n            expandClosestSibling: !0,\n            onlyPartialContains: !0\n          });\n\n          C.each(a, function (t, e) {\n            C(e).attr(\"href\", o), n ? C(e).attr(\"target\", \"_blank\") : C(e).removeAttr(\"target\");\n          });\n          var c = At.createFromNodeBefore(B.head(a)).getStartPoint(),\n              d = At.createFromNodeAfter(B.last(a)).getEndPoint();\n          At.create(c.node, c.offset, d.node, d.offset).select(), u.setLastRange();\n        }\n      }), this.color = this.wrapCommand(function (t) {\n        var e = t.foreColor,\n            o = t.backColor;\n        e && document.execCommand(\"foreColor\", !1, e), o && document.execCommand(\"backColor\", !1, o);\n      }), this.foreColor = this.wrapCommand(function (t) {\n        document.execCommand(\"styleWithCSS\", !1, !0), document.execCommand(\"foreColor\", !1, t);\n      }), this.insertTable = this.wrapCommand(function (t) {\n        var e = t.split(\"x\");\n        u.getLastRange().deleteContents().insertNode(u.table.createTable(e[0], e[1], u.options));\n      }), this.removeMedia = this.wrapCommand(function () {\n        var t = C(u.restoreTarget()).parent();\n        t.parent(\"figure\").length ? t.parent(\"figure\").remove() : t = C(u.restoreTarget()).detach(), u.context.triggerEvent(\"media.delete\", t, u.$editable);\n      }), this.floatMe = this.wrapCommand(function (t) {\n        var e = C(u.restoreTarget());\n        e.toggleClass(\"note-float-left\", \"left\" === t), e.toggleClass(\"note-float-right\", \"right\" === t), e.css(\"float\", \"none\" === t ? \"\" : t);\n      }), this.resize = this.wrapCommand(function (t) {\n        var e = C(u.restoreTarget());\n        0 === (t = parseFloat(t)) ? e.css(\"width\", \"\") : e.css({\n          width: 100 * t + \"%\",\n          height: \"\"\n        });\n      });\n    }\n\n    return t.prototype.initialize = function () {\n      var e = this;\n      this.$editable.on(\"keydown\", function (t) {\n        if (t.keyCode === Pt.code.ENTER && e.context.triggerEvent(\"enter\", t), e.context.triggerEvent(\"keydown\", t), t.isDefaultPrevented() || (e.options.shortcuts ? e.handleKeyMap(t) : e.preventDefaultEditableShortCuts(t)), e.isLimited(1, t)) return !1;\n      }).on(\"keyup\", function (t) {\n        e.setLastRange(), e.context.triggerEvent(\"keyup\", t);\n      }).on(\"focus\", function (t) {\n        e.setLastRange(), e.context.triggerEvent(\"focus\", t);\n      }).on(\"blur\", function (t) {\n        e.context.triggerEvent(\"blur\", t);\n      }).on(\"mousedown\", function (t) {\n        e.context.triggerEvent(\"mousedown\", t);\n      }).on(\"mouseup\", function (t) {\n        e.setLastRange(), e.context.triggerEvent(\"mouseup\", t);\n      }).on(\"scroll\", function (t) {\n        e.context.triggerEvent(\"scroll\", t);\n      }).on(\"paste\", function (t) {\n        e.setLastRange(), e.context.triggerEvent(\"paste\", t);\n      }), this.$editable.attr(\"spellcheck\", this.options.spellCheck), this.$editable.html($t.html(this.$note) || $t.emptyPara), this.$editable.on(R.inputEventName, A.debounce(function () {\n        e.context.triggerEvent(\"change\", e.$editable.html(), e.$editable);\n      }, 10)), this.$editor.on(\"focusin\", function (t) {\n        e.context.triggerEvent(\"focusin\", t);\n      }).on(\"focusout\", function (t) {\n        e.context.triggerEvent(\"focusout\", t);\n      }), this.options.airMode || (this.options.width && this.$editor.outerWidth(this.options.width), this.options.height && this.$editable.outerHeight(this.options.height), this.options.maxHeight && this.$editable.css(\"max-height\", this.options.maxHeight), this.options.minHeight && this.$editable.css(\"min-height\", this.options.minHeight)), this.history.recordUndo(), this.setLastRange();\n    }, t.prototype.destroy = function () {\n      this.$editable.off();\n    }, t.prototype.handleKeyMap = function (t) {\n      var e = this.options.keyMap[R.isMac ? \"mac\" : \"pc\"],\n          o = [];\n      t.metaKey && o.push(\"CMD\"), t.ctrlKey && !t.altKey && o.push(\"CTRL\"), t.shiftKey && o.push(\"SHIFT\");\n      var n = Pt.nameFromCode[t.keyCode];\n      n && o.push(n);\n      var i = e[o.join(\"+\")];\n      i ? !1 !== this.context.invoke(i) && t.preventDefault() : Pt.isEdit(t.keyCode) && this.afterCommand();\n    }, t.prototype.preventDefaultEditableShortCuts = function (t) {\n      (t.ctrlKey || t.metaKey) && B.contains([66, 73, 85], t.keyCode) && t.preventDefault();\n    }, t.prototype.isLimited = function (t, e) {\n      return t = t || 0, (void 0 === e || !(Pt.isMove(e.keyCode) || e.ctrlKey || e.metaKey || B.contains([Pt.code.BACKSPACE, Pt.code.DELETE], e.keyCode))) && 0 < this.options.maxTextLength && this.$editable.text().length + t >= this.options.maxTextLength;\n    }, t.prototype.createRange = function () {\n      return this.focus(), this.setLastRange(), this.getLastRange();\n    }, t.prototype.setLastRange = function () {\n      this.lastRange = At.create(this.editable);\n    }, t.prototype.getLastRange = function () {\n      return this.lastRange || this.setLastRange(), this.lastRange;\n    }, t.prototype.saveRange = function (t) {\n      t && this.getLastRange().collapse().select();\n    }, t.prototype.restoreRange = function () {\n      this.lastRange && (this.lastRange.select(), this.focus());\n    }, t.prototype.saveTarget = function (t) {\n      this.$editable.data(\"target\", t);\n    }, t.prototype.clearTarget = function () {\n      this.$editable.removeData(\"target\");\n    }, t.prototype.restoreTarget = function () {\n      return this.$editable.data(\"target\");\n    }, t.prototype.currentStyle = function () {\n      var t = At.create();\n      return t && (t = t.normalize()), t ? this.style.current(t) : this.style.fromNode(this.$editable);\n    }, t.prototype.styleFromNode = function (t) {\n      return this.style.fromNode(t);\n    }, t.prototype.undo = function () {\n      this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.undo(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n    }, t.prototype.commit = function () {\n      this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.commit(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n    }, t.prototype.redo = function () {\n      this.context.triggerEvent(\"before.command\", this.$editable.html()), this.history.redo(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n    }, t.prototype.beforeCommand = function () {\n      this.context.triggerEvent(\"before.command\", this.$editable.html()), this.focus();\n    }, t.prototype.afterCommand = function (t) {\n      this.normalizeContent(), this.history.recordUndo(), t || this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable);\n    }, t.prototype.tab = function () {\n      var t = this.getLastRange();\n      if (t.isCollapsed() && t.isOnCell()) this.table.tab(t);else {\n        if (0 === this.options.tabSize) return !1;\n        this.isLimited(this.options.tabSize) || (this.beforeCommand(), this.typing.insertTab(t, this.options.tabSize), this.afterCommand());\n      }\n    }, t.prototype.untab = function () {\n      var t = this.getLastRange();\n      if (t.isCollapsed() && t.isOnCell()) this.table.tab(t, !0);else if (0 === this.options.tabSize) return !1;\n    }, t.prototype.wrapCommand = function (t) {\n      return function () {\n        this.beforeCommand(), t.apply(this, arguments), this.afterCommand();\n      };\n    }, t.prototype.insertImage = function (t, e) {\n      var o,\n          n = this;\n      return (o = t, C.Deferred(function (t) {\n        var e = C(\"<img>\");\n        e.one(\"load\", function () {\n          e.off(\"error abort\"), t.resolve(e);\n        }).one(\"error abort\", function () {\n          e.off(\"load\").detach(), t.reject(e);\n        }).css({\n          display: \"none\"\n        }).appendTo(document.body).attr(\"src\", o);\n      }).promise()).then(function (t) {\n        n.beforeCommand(), \"function\" == typeof e ? e(t) : (\"string\" == typeof e && t.attr(\"data-filename\", e), t.css(\"width\", Math.min(n.$editable.width(), t.width()))), t.show(), At.create(n.editable).insertNode(t[0]), At.createFromNodeAfter(t[0]).select(), n.setLastRange(), n.afterCommand();\n      }).fail(function (t) {\n        n.context.triggerEvent(\"image.upload.error\", t);\n      });\n    }, t.prototype.insertImagesAsDataURL = function (t) {\n      var i = this;\n      C.each(t, function (t, e) {\n        var n,\n            o = e.name;\n        i.options.maximumImageFileSize && i.options.maximumImageFileSize < e.size ? i.context.triggerEvent(\"image.upload.error\", i.lang.image.maximumFileSizeError) : (n = e, C.Deferred(function (o) {\n          C.extend(new FileReader(), {\n            onload: function onload(t) {\n              var e = t.target.result;\n              o.resolve(e);\n            },\n            onerror: function onerror(t) {\n              o.reject(t);\n            }\n          }).readAsDataURL(n);\n        }).promise()).then(function (t) {\n          return i.insertImage(t, o);\n        }).fail(function () {\n          i.context.triggerEvent(\"image.upload.error\");\n        });\n      });\n    }, t.prototype.insertImagesOrCallback = function (t) {\n      this.options.callbacks.onImageUpload ? this.context.triggerEvent(\"image.upload\", t) : this.insertImagesAsDataURL(t);\n    }, t.prototype.getSelectedText = function () {\n      var t = this.getLastRange();\n      return t.isOnAnchor() && (t = At.createFromNode($t.ancestor(t.sc, $t.isAnchor))), t.toString();\n    }, t.prototype.onFormatBlock = function (t, e) {\n      if (document.execCommand(\"FormatBlock\", !1, R.isMSIE ? \"<\" + t + \">\" : t), e && e.length && (e[0].tagName.toUpperCase() !== t.toUpperCase() && (e = e.find(t)), e && e.length)) {\n        var o = e[0].className || \"\";\n\n        if (o) {\n          var n = this.createRange();\n          C([n.sc, n.ec]).closest(t).addClass(o);\n        }\n      }\n    }, t.prototype.formatPara = function () {\n      this.formatBlock(\"P\");\n    }, t.prototype.fontStyling = function (t, e) {\n      var o = this.getLastRange();\n\n      if (o) {\n        var n = this.style.styleNodes(o);\n\n        if (C(n).css(t, e), o.isCollapsed()) {\n          var i = B.head(n);\n          i && !$t.nodeLength(i) && (i.innerHTML = $t.ZERO_WIDTH_NBSP_CHAR, At.createFromNodeAfter(i.firstChild).select(), this.setLastRange(), this.$editable.data(\"bogus\", i));\n        }\n      }\n    }, t.prototype.unlink = function () {\n      var t = this.getLastRange();\n\n      if (t.isOnAnchor()) {\n        var e = $t.ancestor(t.sc, $t.isAnchor);\n        (t = At.createFromNode(e)).select(), this.setLastRange(), this.beforeCommand(), document.execCommand(\"unlink\"), this.afterCommand();\n      }\n    }, t.prototype.getLinkInfo = function () {\n      var t = this.getLastRange().expand($t.isAnchor),\n          e = C(B.head(t.nodes($t.isAnchor))),\n          o = {\n        range: t,\n        text: t.toString(),\n        url: e.length ? e.attr(\"href\") : \"\"\n      };\n      return e.length && (o.isNewWindow = \"_blank\" === e.attr(\"target\")), o;\n    }, t.prototype.addRow = function (t) {\n      var e = this.getLastRange(this.$editable);\n      e.isCollapsed() && e.isOnCell() && (this.beforeCommand(), this.table.addRow(e, t), this.afterCommand());\n    }, t.prototype.addCol = function (t) {\n      var e = this.getLastRange(this.$editable);\n      e.isCollapsed() && e.isOnCell() && (this.beforeCommand(), this.table.addCol(e, t), this.afterCommand());\n    }, t.prototype.deleteRow = function () {\n      var t = this.getLastRange(this.$editable);\n      t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteRow(t), this.afterCommand());\n    }, t.prototype.deleteCol = function () {\n      var t = this.getLastRange(this.$editable);\n      t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteCol(t), this.afterCommand());\n    }, t.prototype.deleteTable = function () {\n      var t = this.getLastRange(this.$editable);\n      t.isCollapsed() && t.isOnCell() && (this.beforeCommand(), this.table.deleteTable(t), this.afterCommand());\n    }, t.prototype.resizeTo = function (t, e, o) {\n      var n;\n\n      if (o) {\n        var i = t.y / t.x,\n            r = e.data(\"ratio\");\n        n = {\n          width: i < r ? t.x : t.y / r,\n          height: i < r ? t.x * r : t.y\n        };\n      } else n = {\n        width: t.x,\n        height: t.y\n      };\n\n      e.css(n);\n    }, t.prototype.hasFocus = function () {\n      return this.$editable.is(\":focus\");\n    }, t.prototype.focus = function () {\n      this.hasFocus() || this.$editable.focus();\n    }, t.prototype.isEmpty = function () {\n      return $t.isEmpty(this.$editable[0]) || $t.emptyPara === this.$editable.html();\n    }, t.prototype.empty = function () {\n      this.context.invoke(\"code\", $t.emptyPara);\n    }, t.prototype.normalizeContent = function () {\n      this.$editable[0].normalize();\n    }, t;\n  }(),\n      Kt = function () {\n    function t(t) {\n      this.context = t, this.$editable = t.layoutInfo.editable;\n    }\n\n    return t.prototype.initialize = function () {\n      this.$editable.on(\"paste\", this.pasteByEvent.bind(this));\n    }, t.prototype.pasteByEvent = function (t) {\n      var e = t.originalEvent.clipboardData;\n\n      if (e && e.items && e.items.length) {\n        var o = 1 < e.items.length ? e.items[1] : B.head(e.items);\n        \"file\" === o.kind && -1 !== o.type.indexOf(\"image/\") && this.context.invoke(\"editor.insertImagesOrCallback\", [o.getAsFile()]), this.context.invoke(\"editor.afterCommand\");\n      }\n    }, t;\n  }(),\n      Wt = function () {\n    function t(t) {\n      this.context = t, this.$eventListener = C(document), this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.options = t.options, this.lang = this.options.langInfo, this.documentEventHandlers = {}, this.$dropzone = C(['<div class=\"note-dropzone\">', '  <div class=\"note-dropzone-message\"/>', \"</div>\"].join(\"\")).prependTo(this.$editor);\n    }\n\n    return t.prototype.initialize = function () {\n      this.options.disableDragAndDrop ? (this.documentEventHandlers.onDrop = function (t) {\n        t.preventDefault();\n      }, this.$eventListener = this.$dropzone, this.$eventListener.on(\"drop\", this.documentEventHandlers.onDrop)) : this.attachDragAndDropEvent();\n    }, t.prototype.attachDragAndDropEvent = function () {\n      var i = this,\n          n = C(),\n          r = this.$dropzone.find(\".note-dropzone-message\");\n      this.documentEventHandlers.onDragenter = function (t) {\n        var e = i.context.invoke(\"codeview.isActivated\"),\n            o = 0 < i.$editor.width() && 0 < i.$editor.height();\n        e || n.length || !o || (i.$editor.addClass(\"dragover\"), i.$dropzone.width(i.$editor.width()), i.$dropzone.height(i.$editor.height()), r.text(i.lang.image.dragImageHere)), n = n.add(t.target);\n      }, this.documentEventHandlers.onDragleave = function (t) {\n        (n = n.not(t.target)).length || i.$editor.removeClass(\"dragover\");\n      }, this.documentEventHandlers.onDrop = function () {\n        n = C(), i.$editor.removeClass(\"dragover\");\n      }, this.$eventListener.on(\"dragenter\", this.documentEventHandlers.onDragenter).on(\"dragleave\", this.documentEventHandlers.onDragleave).on(\"drop\", this.documentEventHandlers.onDrop), this.$dropzone.on(\"dragenter\", function () {\n        i.$dropzone.addClass(\"hover\"), r.text(i.lang.image.dropImage);\n      }).on(\"dragleave\", function () {\n        i.$dropzone.removeClass(\"hover\"), r.text(i.lang.image.dragImageHere);\n      }), this.$dropzone.on(\"drop\", function (t) {\n        var n = t.originalEvent.dataTransfer;\n        t.preventDefault(), n && n.files && n.files.length ? (i.$editable.focus(), i.context.invoke(\"editor.insertImagesOrCallback\", n.files)) : C.each(n.types, function (t, e) {\n          var o = n.getData(e);\n          -1 < e.toLowerCase().indexOf(\"text\") ? i.context.invoke(\"editor.pasteHTML\", o) : C(o).each(function (t, e) {\n            i.context.invoke(\"editor.insertNode\", e);\n          });\n        });\n      }).on(\"dragover\", !1);\n    }, t.prototype.destroy = function () {\n      var e = this;\n      Object.keys(this.documentEventHandlers).forEach(function (t) {\n        e.$eventListener.off(t.substr(2).toLowerCase(), e.documentEventHandlers[t]);\n      }), this.documentEventHandlers = {};\n    }, t;\n  }();\n\n  R.hasCodeMirror && (Ot = window.CodeMirror);\n\n  var Vt = function () {\n    function t(t) {\n      this.context = t, this.$editor = t.layoutInfo.editor, this.$editable = t.layoutInfo.editable, this.$codable = t.layoutInfo.codable, this.options = t.options;\n    }\n\n    return t.prototype.sync = function () {\n      this.isActivated() && R.hasCodeMirror && this.$codable.data(\"cmEditor\").save();\n    }, t.prototype.isActivated = function () {\n      return this.$editor.hasClass(\"codeview\");\n    }, t.prototype.toggle = function () {\n      this.isActivated() ? this.deactivate() : this.activate(), this.context.triggerEvent(\"codeview.toggled\");\n    }, t.prototype.purify = function (t) {\n      if (this.options.codeviewFilter && (t = t.replace(this.options.codeviewFilterRegex, \"\"), this.options.codeviewIframeFilter)) {\n        var i = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\n        t = t.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function (t) {\n          if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(t)) return \"\";\n\n          for (var e = 0, o = i; e < o.length; e++) {\n            var n = o[e];\n            if (new RegExp('src=\"(https?:)?//' + n.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\") + '/(.+)\"').test(t)) return t;\n          }\n\n          return \"\";\n        });\n      }\n\n      return t;\n    }, t.prototype.activate = function () {\n      var e = this;\n\n      if (this.$codable.val($t.html(this.$editable, this.options.prettifyHtml)), this.$codable.height(this.$editable.height()), this.context.invoke(\"toolbar.updateCodeview\", !0), this.$editor.addClass(\"codeview\"), this.$codable.focus(), R.hasCodeMirror) {\n        var o = Ot.fromTextArea(this.$codable[0], this.options.codemirror);\n\n        if (this.options.codemirror.tern) {\n          var n = new Ot.TernServer(this.options.codemirror.tern);\n          o.ternServer = n, o.on(\"cursorActivity\", function (t) {\n            n.updateArgHints(t);\n          });\n        }\n\n        o.on(\"blur\", function (t) {\n          e.context.triggerEvent(\"blur.codeview\", o.getValue(), t);\n        }), o.on(\"change\", function (t) {\n          e.context.triggerEvent(\"change.codeview\", o.getValue(), o);\n        }), o.setSize(null, this.$editable.outerHeight()), this.$codable.data(\"cmEditor\", o);\n      } else this.$codable.on(\"blur\", function (t) {\n        e.context.triggerEvent(\"blur.codeview\", e.$codable.val(), t);\n      }), this.$codable.on(\"input\", function (t) {\n        e.context.triggerEvent(\"change.codeview\", e.$codable.val(), e.$codable);\n      });\n    }, t.prototype.deactivate = function () {\n      if (R.hasCodeMirror) {\n        var t = this.$codable.data(\"cmEditor\");\n        this.$codable.val(t.getValue()), t.toTextArea();\n      }\n\n      var e = this.purify($t.value(this.$codable, this.options.prettifyHtml) || $t.emptyPara),\n          o = this.$editable.html() !== e;\n      this.$editable.html(e), this.$editable.height(this.options.height ? this.$codable.height() : \"auto\"), this.$editor.removeClass(\"codeview\"), o && this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable), this.$editable.focus(), this.context.invoke(\"toolbar.updateCodeview\", !1);\n    }, t.prototype.destroy = function () {\n      this.isActivated() && this.deactivate();\n    }, t;\n  }(),\n      qt = function () {\n    function t(t) {\n      this.$document = C(document), this.$statusbar = t.layoutInfo.statusbar, this.$editable = t.layoutInfo.editable, this.options = t.options;\n    }\n\n    return t.prototype.initialize = function () {\n      var n = this;\n      this.options.airMode || this.options.disableResizeEditor ? this.destroy() : this.$statusbar.on(\"mousedown\", function (t) {\n        t.preventDefault(), t.stopPropagation();\n\n        var o = n.$editable.offset().top - n.$document.scrollTop(),\n            e = function e(t) {\n          var e = t.clientY - (o + 24);\n          e = 0 < n.options.minheight ? Math.max(e, n.options.minheight) : e, e = 0 < n.options.maxHeight ? Math.min(e, n.options.maxHeight) : e, n.$editable.height(e);\n        };\n\n        n.$document.on(\"mousemove\", e).one(\"mouseup\", function () {\n          n.$document.off(\"mousemove\", e);\n        });\n      });\n    }, t.prototype.destroy = function () {\n      this.$statusbar.off(), this.$statusbar.addClass(\"locked\");\n    }, t;\n  }(),\n      Gt = function () {\n    function t(t) {\n      var e = this;\n      this.context = t, this.$editor = t.layoutInfo.editor, this.$toolbar = t.layoutInfo.toolbar, this.$editable = t.layoutInfo.editable, this.$codable = t.layoutInfo.codable, this.$window = C(window), this.$scrollbar = C(\"html, body\"), this.onResize = function () {\n        e.resizeTo({\n          h: e.$window.height() - e.$toolbar.outerHeight()\n        });\n      };\n    }\n\n    return t.prototype.resizeTo = function (t) {\n      this.$editable.css(\"height\", t.h), this.$codable.css(\"height\", t.h), this.$codable.data(\"cmeditor\") && this.$codable.data(\"cmeditor\").setsize(null, t.h);\n    }, t.prototype.toggle = function () {\n      this.$editor.toggleClass(\"fullscreen\"), this.isFullscreen() ? (this.$editable.data(\"orgHeight\", this.$editable.css(\"height\")), this.$editable.data(\"orgMaxHeight\", this.$editable.css(\"maxHeight\")), this.$editable.css(\"maxHeight\", \"\"), this.$window.on(\"resize\", this.onResize).trigger(\"resize\"), this.$scrollbar.css(\"overflow\", \"hidden\")) : (this.$window.off(\"resize\", this.onResize), this.resizeTo({\n        h: this.$editable.data(\"orgHeight\")\n      }), this.$editable.css(\"maxHeight\", this.$editable.css(\"orgMaxHeight\")), this.$scrollbar.css(\"overflow\", \"visible\")), this.context.invoke(\"toolbar.updateFullscreen\", this.isFullscreen());\n    }, t.prototype.isFullscreen = function () {\n      return this.$editor.hasClass(\"fullscreen\");\n    }, t;\n  }(),\n      _t = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.$document = C(document), this.$editingArea = t.layoutInfo.editingArea, this.options = t.options, this.lang = this.options.langInfo, this.events = {\n        \"summernote.mousedown\": function summernoteMousedown(t, e) {\n          o.update(e.target, e) && e.preventDefault();\n        },\n        \"summernote.keyup summernote.scroll summernote.change summernote.dialog.shown\": function summernoteKeyupSummernoteScrollSummernoteChangeSummernoteDialogShown() {\n          o.update();\n        },\n        \"summernote.disable\": function summernoteDisable() {\n          o.hide();\n        },\n        \"summernote.codeview.toggled\": function summernoteCodeviewToggled() {\n          o.update();\n        }\n      };\n    }\n\n    return t.prototype.initialize = function () {\n      var r = this;\n      this.$handle = C(['<div class=\"note-handle\">', '<div class=\"note-control-selection\">', '<div class=\"note-control-selection-bg\"></div>', '<div class=\"note-control-holder note-control-nw\"></div>', '<div class=\"note-control-holder note-control-ne\"></div>', '<div class=\"note-control-holder note-control-sw\"></div>', '<div class=\"', this.options.disableResizeImage ? \"note-control-holder\" : \"note-control-sizing\", ' note-control-se\"></div>', this.options.disableResizeImage ? \"\" : '<div class=\"note-control-selection-info\"></div>', \"</div>\", \"</div>\"].join(\"\")).prependTo(this.$editingArea), this.$handle.on(\"mousedown\", function (t) {\n        if ($t.isControlSizing(t.target)) {\n          t.preventDefault(), t.stopPropagation();\n\n          var e = r.$handle.find(\".note-control-selection\").data(\"target\"),\n              o = e.offset(),\n              n = r.$document.scrollTop(),\n              i = function i(t) {\n            r.context.invoke(\"editor.resizeTo\", {\n              x: t.clientX - o.left,\n              y: t.clientY - (o.top - n)\n            }, e, !t.shiftKey), r.update(e[0]);\n          };\n\n          r.$document.on(\"mousemove\", i).one(\"mouseup\", function (t) {\n            t.preventDefault(), r.$document.off(\"mousemove\", i), r.context.invoke(\"editor.afterCommand\");\n          }), e.data(\"ratio\") || e.data(\"ratio\", e.height() / e.width());\n        }\n      }), this.$handle.on(\"wheel\", function (t) {\n        t.preventDefault(), r.update();\n      });\n    }, t.prototype.destroy = function () {\n      this.$handle.remove();\n    }, t.prototype.update = function (t, e) {\n      if (this.context.isDisabled()) return !1;\n      var o = $t.isImg(t),\n          n = this.$handle.find(\".note-control-selection\");\n\n      if (this.context.invoke(\"imagePopover.update\", t, e), o) {\n        var i = C(t),\n            r = i.position(),\n            s = {\n          left: r.left + parseInt(i.css(\"marginLeft\"), 10),\n          top: r.top + parseInt(i.css(\"marginTop\"), 10)\n        },\n            a = {\n          w: i.outerWidth(!1),\n          h: i.outerHeight(!1)\n        };\n        n.css({\n          display: \"block\",\n          left: s.left,\n          top: s.top,\n          width: a.w,\n          height: a.h\n        }).data(\"target\", i);\n        var l = new Image();\n        l.src = i.attr(\"src\");\n        var c = a.w + \"x\" + a.h + \" (\" + this.lang.image.original + \": \" + l.width + \"x\" + l.height + \")\";\n        n.find(\".note-control-selection-info\").text(c), this.context.invoke(\"editor.saveTarget\", t);\n      } else this.hide();\n\n      return o;\n    }, t.prototype.hide = function () {\n      this.context.invoke(\"editor.clearTarget\"), this.$handle.children().hide();\n    }, t;\n  }(),\n      Zt = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|mailto:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i,\n      Yt = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.events = {\n        \"summernote.keyup\": function summernoteKeyup(t, e) {\n          e.isDefaultPrevented() || o.handleKeyup(e);\n        },\n        \"summernote.keydown\": function summernoteKeydown(t, e) {\n          o.handleKeydown(e);\n        }\n      };\n    }\n\n    return t.prototype.initialize = function () {\n      this.lastWordRange = null;\n    }, t.prototype.destroy = function () {\n      this.lastWordRange = null;\n    }, t.prototype.replace = function () {\n      if (this.lastWordRange) {\n        var t = this.lastWordRange.toString(),\n            e = t.match(Zt);\n\n        if (e && (e[1] || e[2])) {\n          var o = e[1] ? t : \"http://\" + t,\n              n = C(\"<a />\").html(t).attr(\"href\", o)[0];\n          this.context.options.linkTargetBlank && C(n).attr(\"target\", \"_blank\"), this.lastWordRange.insertNode(n), this.lastWordRange = null, this.context.invoke(\"editor.focus\");\n        }\n      }\n    }, t.prototype.handleKeydown = function (t) {\n      if (B.contains([Pt.code.ENTER, Pt.code.SPACE], t.keyCode)) {\n        var e = this.context.invoke(\"editor.createRange\").getWordRange();\n        this.lastWordRange = e;\n      }\n    }, t.prototype.handleKeyup = function (t) {\n      B.contains([Pt.code.ENTER, Pt.code.SPACE], t.keyCode) && this.replace();\n    }, t;\n  }(),\n      Qt = function () {\n    function t(t) {\n      var e = this;\n      this.$note = t.layoutInfo.note, this.events = {\n        \"summernote.change\": function summernoteChange() {\n          e.$note.val(t.invoke(\"code\"));\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return $t.isTextarea(this.$note[0]);\n    }, t;\n  }(),\n      Jt = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.options = t.options.replace || {}, this.keys = [Pt.code.ENTER, Pt.code.SPACE, Pt.code.PERIOD, Pt.code.COMMA, Pt.code.SEMICOLON, Pt.code.SLASH], this.previousKeydownCode = null, this.events = {\n        \"summernote.keyup\": function summernoteKeyup(t, e) {\n          e.isDefaultPrevented() || o.handleKeyup(e);\n        },\n        \"summernote.keydown\": function summernoteKeydown(t, e) {\n          o.handleKeydown(e);\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !!this.options.match;\n    }, t.prototype.initialize = function () {\n      this.lastWord = null;\n    }, t.prototype.destroy = function () {\n      this.lastWord = null;\n    }, t.prototype.replace = function () {\n      if (this.lastWord) {\n        var o = this,\n            t = this.lastWord.toString();\n        this.options.match(t, function (t) {\n          if (t) {\n            var e = \"\";\n            if (\"string\" == typeof t ? e = $t.createText(t) : t instanceof jQuery ? e = t[0] : t instanceof Node && (e = t), !e) return;\n            o.lastWord.insertNode(e), o.lastWord = null, o.context.invoke(\"editor.focus\");\n          }\n        });\n      }\n    }, t.prototype.handleKeydown = function (t) {\n      if (this.previousKeydownCode && B.contains(this.keys, this.previousKeydownCode)) this.previousKeydownCode = t.keyCode;else {\n        if (B.contains(this.keys, t.keyCode)) {\n          var e = this.context.invoke(\"editor.createRange\").getWordRange();\n          this.lastWord = e;\n        }\n\n        this.previousKeydownCode = t.keyCode;\n      }\n    }, t.prototype.handleKeyup = function (t) {\n      B.contains(this.keys, t.keyCode) && this.replace();\n    }, t;\n  }(),\n      Xt = function () {\n    function t(t) {\n      var e = this;\n      this.context = t, this.$editingArea = t.layoutInfo.editingArea, this.options = t.options, this.events = {\n        \"summernote.init summernote.change\": function summernoteInitSummernoteChange() {\n          e.update();\n        },\n        \"summernote.codeview.toggled\": function summernoteCodeviewToggled() {\n          e.update();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !!this.options.placeholder;\n    }, t.prototype.initialize = function () {\n      var t = this;\n      this.$placeholder = C('<div class=\"note-placeholder\">'), this.$placeholder.on(\"click\", function () {\n        t.context.invoke(\"focus\");\n      }).html(this.options.placeholder).prependTo(this.$editingArea), this.update();\n    }, t.prototype.destroy = function () {\n      this.$placeholder.remove();\n    }, t.prototype.update = function () {\n      var t = !this.context.invoke(\"codeview.isActivated\") && this.context.invoke(\"editor.isEmpty\");\n      this.$placeholder.toggle(t);\n    }, t;\n  }(),\n      te = function () {\n    function t(t) {\n      this.ui = C.summernote.ui, this.context = t, this.$toolbar = t.layoutInfo.toolbar, this.options = t.options, this.lang = this.options.langInfo, this.invertedKeyMap = A.invertObject(this.options.keyMap[R.isMac ? \"mac\" : \"pc\"]);\n    }\n\n    return t.prototype.representShortcut = function (t) {\n      var e = this.invertedKeyMap[t];\n      return this.options.shortcuts && e ? (R.isMac && (e = e.replace(\"CMD\", \"⌘\").replace(\"SHIFT\", \"⇧\")), \" (\" + (e = e.replace(\"BACKSLASH\", \"\\\\\").replace(\"SLASH\", \"/\").replace(\"LEFTBRACKET\", \"[\").replace(\"RIGHTBRACKET\", \"]\")) + \")\") : \"\";\n    }, t.prototype.button = function (t) {\n      return !this.options.tooltip && t.tooltip && delete t.tooltip, t.container = this.options.container, this.ui.button(t);\n    }, t.prototype.initialize = function () {\n      this.addToolbarButtons(), this.addImagePopoverButtons(), this.addLinkPopoverButtons(), this.addTablePopoverButtons(), this.fontInstalledMap = {};\n    }, t.prototype.destroy = function () {\n      delete this.fontInstalledMap;\n    }, t.prototype.isFontInstalled = function (t) {\n      return this.fontInstalledMap.hasOwnProperty(t) || (this.fontInstalledMap[t] = R.isFontInstalled(t) || B.contains(this.options.fontNamesIgnoreCheck, t)), this.fontInstalledMap[t];\n    }, t.prototype.isFontDeservedToAdd = function (t) {\n      return \"\" !== (t = t.toLowerCase()) && this.isFontInstalled(t) && -1 === [\"sans-serif\", \"serif\", \"monospace\", \"cursive\", \"fantasy\"].indexOf(t);\n    }, t.prototype.colorPalette = function (h, t, o, n) {\n      var p = this;\n      return this.ui.buttonGroup({\n        className: \"note-color \" + h,\n        children: [this.button({\n          className: \"note-current-color-button\",\n          contents: this.ui.icon(this.options.icons.font + \" note-recent-color\"),\n          tooltip: t,\n          click: function click(t) {\n            var e = C(t.currentTarget);\n            o && n ? p.context.invoke(\"editor.color\", {\n              backColor: e.attr(\"data-backColor\"),\n              foreColor: e.attr(\"data-foreColor\")\n            }) : o ? p.context.invoke(\"editor.color\", {\n              backColor: e.attr(\"data-backColor\")\n            }) : n && p.context.invoke(\"editor.color\", {\n              foreColor: e.attr(\"data-foreColor\")\n            });\n          },\n          callback: function callback(t) {\n            var e = t.find(\".note-recent-color\");\n            o && (e.css(\"background-color\", p.options.colorButton.backColor), t.attr(\"data-backColor\", p.options.colorButton.backColor)), n ? (e.css(\"color\", p.options.colorButton.foreColor), t.attr(\"data-foreColor\", p.options.colorButton.foreColor)) : e.css(\"color\", \"transparent\");\n          }\n        }), this.button({\n          className: \"dropdown-toggle\",\n          contents: this.ui.dropdownButtonContents(\"\", this.options),\n          tooltip: this.lang.color.more,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), this.ui.dropdown({\n          items: (o ? ['<div class=\"note-palette\">', '  <div class=\"note-palette-title\">' + this.lang.color.background + \"</div>\", \"  <div>\", '    <button type=\"button\" class=\"note-color-reset btn btn-light\" data-event=\"backColor\" data-value=\"inherit\">', this.lang.color.transparent, \"    </button>\", \"  </div>\", '  <div class=\"note-holder\" data-event=\"backColor\"/>', \"  <div>\", '    <button type=\"button\" class=\"note-color-select btn\" data-event=\"openPalette\" data-value=\"backColorPicker\">', this.lang.color.cpSelect, \"    </button>\", '    <input type=\"color\" id=\"backColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette\">', \"  </div>\", '  <div class=\"note-holder-custom\" id=\"backColorPalette\" data-event=\"backColor\"/>', \"</div>\"].join(\"\") : \"\") + (n ? ['<div class=\"note-palette\">', '  <div class=\"note-palette-title\">' + this.lang.color.foreground + \"</div>\", \"  <div>\", '    <button type=\"button\" class=\"note-color-reset btn btn-light\" data-event=\"removeFormat\" data-value=\"foreColor\">', this.lang.color.resetToDefault, \"    </button>\", \"  </div>\", '  <div class=\"note-holder\" data-event=\"foreColor\"/>', \"  <div>\", '    <button type=\"button\" class=\"note-color-select btn\" data-event=\"openPalette\" data-value=\"foreColorPicker\">', this.lang.color.cpSelect, \"    </button>\", '    <input type=\"color\" id=\"foreColorPicker\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette\">', '  <div class=\"note-holder-custom\" id=\"foreColorPalette\" data-event=\"foreColor\"/>', \"</div>\"].join(\"\") : \"\"),\n          callback: function callback(o) {\n            o.find(\".note-holder\").each(function (t, e) {\n              var o = C(e);\n              o.append(p.ui.palette({\n                colors: p.options.colors,\n                colorsName: p.options.colorsName,\n                eventName: o.data(\"event\"),\n                container: p.options.container,\n                tooltip: p.options.tooltip\n              }).render());\n            });\n            var n = [[\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]];\n            o.find(\".note-holder-custom\").each(function (t, e) {\n              var o = C(e);\n              o.append(p.ui.palette({\n                colors: n,\n                colorsName: n,\n                eventName: o.data(\"event\"),\n                container: p.options.container,\n                tooltip: p.options.tooltip\n              }).render());\n            }), o.find(\"input[type=color]\").each(function (t, e) {\n              C(e).change(function () {\n                var t = o.find(\"#\" + C(this).data(\"event\")).find(\".note-color-btn\").first(),\n                    e = this.value.toUpperCase();\n                t.css(\"background-color\", e).attr(\"aria-label\", e).attr(\"data-value\", e).attr(\"data-original-title\", e), t.click();\n              });\n            });\n          },\n          click: function click(t) {\n            t.stopPropagation();\n            var e = C(\".\" + h),\n                o = C(t.target),\n                n = o.data(\"event\"),\n                i = o.attr(\"data-value\");\n\n            if (\"openPalette\" === n) {\n              var r = e.find(\"#\" + i),\n                  s = C(e.find(\"#\" + r.data(\"event\")).find(\".note-color-row\")[0]),\n                  a = s.find(\".note-color-btn\").last().detach(),\n                  l = r.val();\n              a.css(\"background-color\", l).attr(\"aria-label\", l).attr(\"data-value\", l).attr(\"data-original-title\", l), s.prepend(a), r.click();\n            } else if (B.contains([\"backColor\", \"foreColor\"], n)) {\n              var c = \"backColor\" === n ? \"background-color\" : \"color\",\n                  d = o.closest(\".note-color\").find(\".note-recent-color\"),\n                  u = o.closest(\".note-color\").find(\".note-current-color-button\");\n              d.css(c, i), u.attr(\"data-\" + n, i), p.context.invoke(\"editor.\" + n, i);\n            }\n          }\n        })]\n      }).render();\n    }, t.prototype.addToolbarButtons = function () {\n      var n = this;\n      this.context.memo(\"button.style\", function () {\n        return n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents(n.ui.icon(n.options.icons.magic), n.options),\n          tooltip: n.lang.style.style,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdown({\n          className: \"dropdown-style\",\n          items: n.options.styleTags,\n          title: n.lang.style.style,\n          template: function template(t) {\n            \"string\" == typeof t && (t = {\n              tag: t,\n              title: n.lang.style.hasOwnProperty(t) ? n.lang.style[t] : t\n            });\n            var e = t.tag,\n                o = t.title;\n            return \"<\" + e + (t.style ? ' style=\"' + t.style + '\" ' : \"\") + (t.className ? ' class=\"' + t.className + '\"' : \"\") + \">\" + o + \"</\" + e + \">\";\n          },\n          click: n.context.createInvokeHandler(\"editor.formatBlock\")\n        })]).render();\n      });\n\n      for (var t = function t(_t3, e) {\n        var o = i.options.styleTags[_t3];\n        i.context.memo(\"button.style.\" + o, function () {\n          return n.button({\n            className: \"note-btn-style-\" + o,\n            contents: '<div data-value=\"' + o + '\">' + o.toUpperCase() + \"</div>\",\n            tooltip: n.lang.style[o],\n            click: n.context.createInvokeHandler(\"editor.formatBlock\")\n          }).render();\n        });\n      }, i = this, e = 0, o = this.options.styleTags.length; e < o; e++) {\n        t(e);\n      }\n\n      this.context.memo(\"button.bold\", function () {\n        return n.button({\n          className: \"note-btn-bold\",\n          contents: n.ui.icon(n.options.icons.bold),\n          tooltip: n.lang.font.bold + n.representShortcut(\"bold\"),\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.bold\")\n        }).render();\n      }), this.context.memo(\"button.italic\", function () {\n        return n.button({\n          className: \"note-btn-italic\",\n          contents: n.ui.icon(n.options.icons.italic),\n          tooltip: n.lang.font.italic + n.representShortcut(\"italic\"),\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.italic\")\n        }).render();\n      }), this.context.memo(\"button.underline\", function () {\n        return n.button({\n          className: \"note-btn-underline\",\n          contents: n.ui.icon(n.options.icons.underline),\n          tooltip: n.lang.font.underline + n.representShortcut(\"underline\"),\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.underline\")\n        }).render();\n      }), this.context.memo(\"button.clear\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.eraser),\n          tooltip: n.lang.font.clear + n.representShortcut(\"removeFormat\"),\n          click: n.context.createInvokeHandler(\"editor.removeFormat\")\n        }).render();\n      }), this.context.memo(\"button.strikethrough\", function () {\n        return n.button({\n          className: \"note-btn-strikethrough\",\n          contents: n.ui.icon(n.options.icons.strikethrough),\n          tooltip: n.lang.font.strikethrough + n.representShortcut(\"strikethrough\"),\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.strikethrough\")\n        }).render();\n      }), this.context.memo(\"button.superscript\", function () {\n        return n.button({\n          className: \"note-btn-superscript\",\n          contents: n.ui.icon(n.options.icons.superscript),\n          tooltip: n.lang.font.superscript,\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.superscript\")\n        }).render();\n      }), this.context.memo(\"button.subscript\", function () {\n        return n.button({\n          className: \"note-btn-subscript\",\n          contents: n.ui.icon(n.options.icons.subscript),\n          tooltip: n.lang.font.subscript,\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.subscript\")\n        }).render();\n      }), this.context.memo(\"button.fontname\", function () {\n        var t = n.context.invoke(\"editor.currentStyle\");\n        return C.each(t[\"font-family\"].split(\",\"), function (t, e) {\n          e = e.trim().replace(/['\"]+/g, \"\"), n.isFontDeservedToAdd(e) && -1 === n.options.fontNames.indexOf(e) && n.options.fontNames.push(e);\n        }), n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents('<span class=\"note-current-fontname\"/>', n.options),\n          tooltip: n.lang.font.name,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdownCheck({\n          className: \"dropdown-fontname\",\n          checkClassName: n.options.icons.menuCheck,\n          items: n.options.fontNames.filter(n.isFontInstalled.bind(n)),\n          title: n.lang.font.name,\n          template: function template(t) {\n            return \"<span style=\\\"font-family: '\" + t + \"'\\\">\" + t + \"</span>\";\n          },\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.fontName\")\n        })]).render();\n      }), this.context.memo(\"button.fontsize\", function () {\n        return n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"/>', n.options),\n          tooltip: n.lang.font.size,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdownCheck({\n          className: \"dropdown-fontsize\",\n          checkClassName: n.options.icons.menuCheck,\n          items: n.options.fontSizes,\n          title: n.lang.font.size,\n          click: n.context.createInvokeHandlerAndUpdateState(\"editor.fontSize\")\n        })]).render();\n      }), this.context.memo(\"button.color\", function () {\n        return n.colorPalette(\"note-color-all\", n.lang.color.recent, !0, !0);\n      }), this.context.memo(\"button.forecolor\", function () {\n        return n.colorPalette(\"note-color-fore\", n.lang.color.foreground, !1, !0);\n      }), this.context.memo(\"button.backcolor\", function () {\n        return n.colorPalette(\"note-color-back\", n.lang.color.background, !0, !1);\n      }), this.context.memo(\"button.ul\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.unorderedlist),\n          tooltip: n.lang.lists.unordered + n.representShortcut(\"insertUnorderedList\"),\n          click: n.context.createInvokeHandler(\"editor.insertUnorderedList\")\n        }).render();\n      }), this.context.memo(\"button.ol\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.orderedlist),\n          tooltip: n.lang.lists.ordered + n.representShortcut(\"insertOrderedList\"),\n          click: n.context.createInvokeHandler(\"editor.insertOrderedList\")\n        }).render();\n      });\n      var r = this.button({\n        contents: this.ui.icon(this.options.icons.alignLeft),\n        tooltip: this.lang.paragraph.left + this.representShortcut(\"justifyLeft\"),\n        click: this.context.createInvokeHandler(\"editor.justifyLeft\")\n      }),\n          s = this.button({\n        contents: this.ui.icon(this.options.icons.alignCenter),\n        tooltip: this.lang.paragraph.center + this.representShortcut(\"justifyCenter\"),\n        click: this.context.createInvokeHandler(\"editor.justifyCenter\")\n      }),\n          a = this.button({\n        contents: this.ui.icon(this.options.icons.alignRight),\n        tooltip: this.lang.paragraph.right + this.representShortcut(\"justifyRight\"),\n        click: this.context.createInvokeHandler(\"editor.justifyRight\")\n      }),\n          l = this.button({\n        contents: this.ui.icon(this.options.icons.alignJustify),\n        tooltip: this.lang.paragraph.justify + this.representShortcut(\"justifyFull\"),\n        click: this.context.createInvokeHandler(\"editor.justifyFull\")\n      }),\n          c = this.button({\n        contents: this.ui.icon(this.options.icons.outdent),\n        tooltip: this.lang.paragraph.outdent + this.representShortcut(\"outdent\"),\n        click: this.context.createInvokeHandler(\"editor.outdent\")\n      }),\n          d = this.button({\n        contents: this.ui.icon(this.options.icons.indent),\n        tooltip: this.lang.paragraph.indent + this.representShortcut(\"indent\"),\n        click: this.context.createInvokeHandler(\"editor.indent\")\n      });\n      this.context.memo(\"button.justifyLeft\", A.invoke(r, \"render\")), this.context.memo(\"button.justifyCenter\", A.invoke(s, \"render\")), this.context.memo(\"button.justifyRight\", A.invoke(a, \"render\")), this.context.memo(\"button.justifyFull\", A.invoke(l, \"render\")), this.context.memo(\"button.outdent\", A.invoke(c, \"render\")), this.context.memo(\"button.indent\", A.invoke(d, \"render\")), this.context.memo(\"button.paragraph\", function () {\n        return n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents(n.ui.icon(n.options.icons.alignLeft), n.options),\n          tooltip: n.lang.paragraph.paragraph,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdown([n.ui.buttonGroup({\n          className: \"note-align\",\n          children: [r, s, a, l]\n        }), n.ui.buttonGroup({\n          className: \"note-list\",\n          children: [c, d]\n        })])]).render();\n      }), this.context.memo(\"button.height\", function () {\n        return n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents(n.ui.icon(n.options.icons.textHeight), n.options),\n          tooltip: n.lang.font.height,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdownCheck({\n          items: n.options.lineHeights,\n          checkClassName: n.options.icons.menuCheck,\n          className: \"dropdown-line-height\",\n          title: n.lang.font.height,\n          click: n.context.createInvokeHandler(\"editor.lineHeight\")\n        })]).render();\n      }), this.context.memo(\"button.table\", function () {\n        return n.ui.buttonGroup([n.button({\n          className: \"dropdown-toggle\",\n          contents: n.ui.dropdownButtonContents(n.ui.icon(n.options.icons.table), n.options),\n          tooltip: n.lang.table.table,\n          data: {\n            toggle: \"dropdown\"\n          }\n        }), n.ui.dropdown({\n          title: n.lang.table.table,\n          className: \"note-table\",\n          items: ['<div class=\"note-dimension-picker\">', '  <div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"/>', '  <div class=\"note-dimension-picker-highlighted\"/>', '  <div class=\"note-dimension-picker-unhighlighted\"/>', \"</div>\", '<div class=\"note-dimension-display\">1 x 1</div>'].join(\"\")\n        })], {\n          callback: function callback(t) {\n            t.find(\".note-dimension-picker-mousecatcher\").css({\n              width: n.options.insertTableMaxSize.col + \"em\",\n              height: n.options.insertTableMaxSize.row + \"em\"\n            }).mousedown(n.context.createInvokeHandler(\"editor.insertTable\")).on(\"mousemove\", n.tableMoveHandler.bind(n));\n          }\n        }).render();\n      }), this.context.memo(\"button.link\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.link),\n          tooltip: n.lang.link.link + n.representShortcut(\"linkDialog.show\"),\n          click: n.context.createInvokeHandler(\"linkDialog.show\")\n        }).render();\n      }), this.context.memo(\"button.picture\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.picture),\n          tooltip: n.lang.image.image,\n          click: n.context.createInvokeHandler(\"imageDialog.show\")\n        }).render();\n      }), this.context.memo(\"button.video\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.video),\n          tooltip: n.lang.video.video,\n          click: n.context.createInvokeHandler(\"videoDialog.show\")\n        }).render();\n      }), this.context.memo(\"button.hr\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.minus),\n          tooltip: n.lang.hr.insert + n.representShortcut(\"insertHorizontalRule\"),\n          click: n.context.createInvokeHandler(\"editor.insertHorizontalRule\")\n        }).render();\n      }), this.context.memo(\"button.fullscreen\", function () {\n        return n.button({\n          className: \"btn-fullscreen\",\n          contents: n.ui.icon(n.options.icons.arrowsAlt),\n          tooltip: n.lang.options.fullscreen,\n          click: n.context.createInvokeHandler(\"fullscreen.toggle\")\n        }).render();\n      }), this.context.memo(\"button.codeview\", function () {\n        return n.button({\n          className: \"btn-codeview\",\n          contents: n.ui.icon(n.options.icons.code),\n          tooltip: n.lang.options.codeview,\n          click: n.context.createInvokeHandler(\"codeview.toggle\")\n        }).render();\n      }), this.context.memo(\"button.redo\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.redo),\n          tooltip: n.lang.history.redo + n.representShortcut(\"redo\"),\n          click: n.context.createInvokeHandler(\"editor.redo\")\n        }).render();\n      }), this.context.memo(\"button.undo\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.undo),\n          tooltip: n.lang.history.undo + n.representShortcut(\"undo\"),\n          click: n.context.createInvokeHandler(\"editor.undo\")\n        }).render();\n      }), this.context.memo(\"button.help\", function () {\n        return n.button({\n          contents: n.ui.icon(n.options.icons.question),\n          tooltip: n.lang.options.help,\n          click: n.context.createInvokeHandler(\"helpDialog.show\")\n        }).render();\n      });\n    }, t.prototype.addImagePopoverButtons = function () {\n      var t = this;\n      this.context.memo(\"button.resizeFull\", function () {\n        return t.button({\n          contents: '<span class=\"note-fontsize-10\">100%</span>',\n          tooltip: t.lang.image.resizeFull,\n          click: t.context.createInvokeHandler(\"editor.resize\", \"1\")\n        }).render();\n      }), this.context.memo(\"button.resizeHalf\", function () {\n        return t.button({\n          contents: '<span class=\"note-fontsize-10\">50%</span>',\n          tooltip: t.lang.image.resizeHalf,\n          click: t.context.createInvokeHandler(\"editor.resize\", \"0.5\")\n        }).render();\n      }), this.context.memo(\"button.resizeQuarter\", function () {\n        return t.button({\n          contents: '<span class=\"note-fontsize-10\">25%</span>',\n          tooltip: t.lang.image.resizeQuarter,\n          click: t.context.createInvokeHandler(\"editor.resize\", \"0.25\")\n        }).render();\n      }), this.context.memo(\"button.resizeNone\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.rollback),\n          tooltip: t.lang.image.resizeNone,\n          click: t.context.createInvokeHandler(\"editor.resize\", \"0\")\n        }).render();\n      }), this.context.memo(\"button.floatLeft\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.floatLeft),\n          tooltip: t.lang.image.floatLeft,\n          click: t.context.createInvokeHandler(\"editor.floatMe\", \"left\")\n        }).render();\n      }), this.context.memo(\"button.floatRight\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.floatRight),\n          tooltip: t.lang.image.floatRight,\n          click: t.context.createInvokeHandler(\"editor.floatMe\", \"right\")\n        }).render();\n      }), this.context.memo(\"button.floatNone\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.rollback),\n          tooltip: t.lang.image.floatNone,\n          click: t.context.createInvokeHandler(\"editor.floatMe\", \"none\")\n        }).render();\n      }), this.context.memo(\"button.removeMedia\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.trash),\n          tooltip: t.lang.image.remove,\n          click: t.context.createInvokeHandler(\"editor.removeMedia\")\n        }).render();\n      });\n    }, t.prototype.addLinkPopoverButtons = function () {\n      var t = this;\n      this.context.memo(\"button.linkDialogShow\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.link),\n          tooltip: t.lang.link.edit,\n          click: t.context.createInvokeHandler(\"linkDialog.show\")\n        }).render();\n      }), this.context.memo(\"button.unlink\", function () {\n        return t.button({\n          contents: t.ui.icon(t.options.icons.unlink),\n          tooltip: t.lang.link.unlink,\n          click: t.context.createInvokeHandler(\"editor.unlink\")\n        }).render();\n      });\n    }, t.prototype.addTablePopoverButtons = function () {\n      var t = this;\n      this.context.memo(\"button.addRowUp\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.rowAbove),\n          tooltip: t.lang.table.addRowAbove,\n          click: t.context.createInvokeHandler(\"editor.addRow\", \"top\")\n        }).render();\n      }), this.context.memo(\"button.addRowDown\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.rowBelow),\n          tooltip: t.lang.table.addRowBelow,\n          click: t.context.createInvokeHandler(\"editor.addRow\", \"bottom\")\n        }).render();\n      }), this.context.memo(\"button.addColLeft\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.colBefore),\n          tooltip: t.lang.table.addColLeft,\n          click: t.context.createInvokeHandler(\"editor.addCol\", \"left\")\n        }).render();\n      }), this.context.memo(\"button.addColRight\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.colAfter),\n          tooltip: t.lang.table.addColRight,\n          click: t.context.createInvokeHandler(\"editor.addCol\", \"right\")\n        }).render();\n      }), this.context.memo(\"button.deleteRow\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.rowRemove),\n          tooltip: t.lang.table.delRow,\n          click: t.context.createInvokeHandler(\"editor.deleteRow\")\n        }).render();\n      }), this.context.memo(\"button.deleteCol\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.colRemove),\n          tooltip: t.lang.table.delCol,\n          click: t.context.createInvokeHandler(\"editor.deleteCol\")\n        }).render();\n      }), this.context.memo(\"button.deleteTable\", function () {\n        return t.button({\n          className: \"btn-md\",\n          contents: t.ui.icon(t.options.icons.trash),\n          tooltip: t.lang.table.delTable,\n          click: t.context.createInvokeHandler(\"editor.deleteTable\")\n        }).render();\n      });\n    }, t.prototype.build = function (t, e) {\n      for (var o = 0, n = e.length; o < n; o++) {\n        for (var i = e[o], r = Array.isArray(i) ? i[0] : i, s = Array.isArray(i) ? 1 === i.length ? [i[0]] : i[1] : [i], a = this.ui.buttonGroup({\n          className: \"note-\" + r\n        }).render(), l = 0, c = s.length; l < c; l++) {\n          var d = this.context.memo(\"button.\" + s[l]);\n          d && a.append(\"function\" == typeof d ? d() : d);\n        }\n\n        a.appendTo(t);\n      }\n    }, t.prototype.updateCurrentStyle = function (t) {\n      var n = this,\n          e = t || this.$toolbar,\n          o = this.context.invoke(\"editor.currentStyle\");\n\n      if (this.updateBtnStates(e, {\n        \".note-btn-bold\": function noteBtnBold() {\n          return \"bold\" === o[\"font-bold\"];\n        },\n        \".note-btn-italic\": function noteBtnItalic() {\n          return \"italic\" === o[\"font-italic\"];\n        },\n        \".note-btn-underline\": function noteBtnUnderline() {\n          return \"underline\" === o[\"font-underline\"];\n        },\n        \".note-btn-subscript\": function noteBtnSubscript() {\n          return \"subscript\" === o[\"font-subscript\"];\n        },\n        \".note-btn-superscript\": function noteBtnSuperscript() {\n          return \"superscript\" === o[\"font-superscript\"];\n        },\n        \".note-btn-strikethrough\": function noteBtnStrikethrough() {\n          return \"strikethrough\" === o[\"font-strikethrough\"];\n        }\n      }), o[\"font-family\"]) {\n        var i = o[\"font-family\"].split(\",\").map(function (t) {\n          return t.replace(/[\\'\\\"]/g, \"\").replace(/\\s+$/, \"\").replace(/^\\s+/, \"\");\n        }),\n            r = B.find(i, this.isFontInstalled.bind(this));\n        e.find(\".dropdown-fontname a\").each(function (t, e) {\n          var o = C(e),\n              n = o.data(\"value\") + \"\" == r + \"\";\n          o.toggleClass(\"checked\", n);\n        }), e.find(\".note-current-fontname\").text(r).css(\"font-family\", r);\n      }\n\n      if (o[\"font-size\"]) {\n        var s = o[\"font-size\"];\n        e.find(\".dropdown-fontsize a\").each(function (t, e) {\n          var o = C(e),\n              n = o.data(\"value\") + \"\" == s + \"\";\n          o.toggleClass(\"checked\", n);\n        }), e.find(\".note-current-fontsize\").text(s);\n      }\n\n      if (o[\"line-height\"]) {\n        var a = o[\"line-height\"];\n        e.find(\".dropdown-line-height li a\").each(function (t, e) {\n          var o = C(e).data(\"value\") + \"\" == a + \"\";\n          n.className = o ? \"checked\" : \"\";\n        });\n      }\n    }, t.prototype.updateBtnStates = function (o, t) {\n      var n = this;\n      C.each(t, function (t, e) {\n        n.ui.toggleBtnActive(o.find(t), e());\n      });\n    }, t.prototype.tableMoveHandler = function (t) {\n      var e,\n          o = C(t.target.parentNode),\n          n = o.next(),\n          i = o.find(\".note-dimension-picker-mousecatcher\"),\n          r = o.find(\".note-dimension-picker-highlighted\"),\n          s = o.find(\".note-dimension-picker-unhighlighted\");\n\n      if (void 0 === t.offsetX) {\n        var a = C(t.target).offset();\n        e = {\n          x: t.pageX - a.left,\n          y: t.pageY - a.top\n        };\n      } else e = {\n        x: t.offsetX,\n        y: t.offsetY\n      };\n\n      var l = Math.ceil(e.x / 18) || 1,\n          c = Math.ceil(e.y / 18) || 1;\n      r.css({\n        width: l + \"em\",\n        height: c + \"em\"\n      }), i.data(\"value\", l + \"x\" + c), 3 < l && l < this.options.insertTableMaxSize.col && s.css({\n        width: l + 1 + \"em\"\n      }), 3 < c && c < this.options.insertTableMaxSize.row && s.css({\n        height: c + 1 + \"em\"\n      }), n.html(l + \" x \" + c);\n    }, t;\n  }(),\n      ee = function () {\n    function t(t) {\n      this.context = t, this.$window = C(window), this.$document = C(document), this.ui = C.summernote.ui, this.$note = t.layoutInfo.note, this.$editor = t.layoutInfo.editor, this.$toolbar = t.layoutInfo.toolbar, this.$editable = t.layoutInfo.editable, this.$statusbar = t.layoutInfo.statusbar, this.options = t.options, this.isFollowing = !1, this.followScroll = this.followScroll.bind(this);\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !this.options.airMode;\n    }, t.prototype.initialize = function () {\n      var t = this;\n      this.options.toolbar = this.options.toolbar || [], this.options.toolbar.length ? this.context.invoke(\"buttons.build\", this.$toolbar, this.options.toolbar) : this.$toolbar.hide(), this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.changeContainer(!1), this.$note.on(\"summernote.keyup summernote.mouseup summernote.change\", function () {\n        t.context.invoke(\"buttons.updateCurrentStyle\");\n      }), this.context.invoke(\"buttons.updateCurrentStyle\"), this.options.followingToolbar && this.$window.on(\"scroll resize\", this.followScroll);\n    }, t.prototype.destroy = function () {\n      this.$toolbar.children().remove(), this.options.followingToolbar && this.$window.off(\"scroll resize\", this.followScroll);\n    }, t.prototype.followScroll = function () {\n      if (this.$editor.hasClass(\"fullscreen\")) return !1;\n      var t = this.$editor.outerHeight(),\n          e = this.$editor.width(),\n          o = this.$toolbar.height(),\n          n = this.$statusbar.height(),\n          i = 0;\n      this.options.otherStaticBar && (i = C(this.options.otherStaticBar).outerHeight());\n      var r = this.$document.scrollTop(),\n          s = this.$editor.offset().top,\n          a = s - i,\n          l = s + t - i - o - n;\n      !this.isFollowing && a < r && r < l - o ? (this.isFollowing = !0, this.$toolbar.css({\n        position: \"fixed\",\n        top: i,\n        width: e\n      }), this.$editable.css({\n        marginTop: this.$toolbar.height() + 5\n      })) : this.isFollowing && (r < a || l < r) && (this.isFollowing = !1, this.$toolbar.css({\n        position: \"relative\",\n        top: 0,\n        width: \"100%\"\n      }), this.$editable.css({\n        marginTop: \"\"\n      }));\n    }, t.prototype.changeContainer = function (t) {\n      t ? this.$toolbar.prependTo(this.$editor) : this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.followScroll();\n    }, t.prototype.updateFullscreen = function (t) {\n      this.ui.toggleBtnActive(this.$toolbar.find(\".btn-fullscreen\"), t), this.changeContainer(t);\n    }, t.prototype.updateCodeview = function (t) {\n      this.ui.toggleBtnActive(this.$toolbar.find(\".btn-codeview\"), t), t ? this.deactivate() : this.activate();\n    }, t.prototype.activate = function (t) {\n      var e = this.$toolbar.find(\"button\");\n      t || (e = e.not(\".btn-codeview\")), this.ui.toggleBtn(e, !0);\n    }, t.prototype.deactivate = function (t) {\n      var e = this.$toolbar.find(\"button\");\n      t || (e = e.not(\".btn-codeview\")), this.ui.toggleBtn(e, !1);\n    }, t;\n  }(),\n      oe = function () {\n    function t(t) {\n      this.context = t, this.ui = C.summernote.ui, this.$body = C(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo, t.memo(\"help.linkDialog.show\", this.options.langInfo.help[\"linkDialog.show\"]);\n    }\n\n    return t.prototype.initialize = function () {\n      var t = this.options.dialogsInBody ? this.$body : this.$editor,\n          e = ['<div class=\"form-group note-form-group\">', '<label class=\"note-form-label\">' + this.lang.link.textToDisplay + \"</label>\", '<input class=\"note-link-text form-control note-form-control note-input\" type=\"text\" />', \"</div>\", '<div class=\"form-group note-form-group\">', '<label class=\"note-form-label\">' + this.lang.link.url + \"</label>\", '<input class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\" />', \"</div>\", this.options.disableLinkTarget ? \"\" : C(\"<div/>\").append(this.ui.checkbox({\n        className: \"sn-checkbox-open-in-new-window\",\n        text: this.lang.link.openInNewWindow,\n        checked: !0\n      }).render()).html()].join(\"\"),\n          o = '<input type=\"button\" href=\"#\" class=\"btn btn-primary note-btn note-btn-primary note-link-btn\" value=\"' + this.lang.link.insert + '\" disabled>';\n      this.$dialog = this.ui.dialog({\n        className: \"link-dialog\",\n        title: this.lang.link.insert,\n        fade: this.options.dialogsFade,\n        body: e,\n        footer: o\n      }).render().appendTo(t);\n    }, t.prototype.destroy = function () {\n      this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n    }, t.prototype.bindEnterKey = function (t, e) {\n      t.on(\"keypress\", function (t) {\n        t.keyCode === Pt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n      });\n    }, t.prototype.toggleLinkBtn = function (t, e, o) {\n      this.ui.toggleBtn(t, e.val() && o.val());\n    }, t.prototype.showLinkDialog = function (s) {\n      var a = this;\n      return C.Deferred(function (e) {\n        var o = a.$dialog.find(\".note-link-text\"),\n            n = a.$dialog.find(\".note-link-url\"),\n            i = a.$dialog.find(\".note-link-btn\"),\n            r = a.$dialog.find(\".sn-checkbox-open-in-new-window input[type=checkbox]\");\n        a.ui.onDialogShown(a.$dialog, function () {\n          a.context.triggerEvent(\"dialog.shown\"), !s.url && A.isValidUrl(s.text) && (s.url = s.text), o.on(\"input paste propertychange\", function () {\n            s.text = o.val(), a.toggleLinkBtn(i, o, n);\n          }).val(s.text), n.on(\"input paste propertychange\", function () {\n            s.text || o.val(n.val()), a.toggleLinkBtn(i, o, n);\n          }).val(s.url), R.isSupportTouch || n.trigger(\"focus\"), a.toggleLinkBtn(i, o, n), a.bindEnterKey(n, i), a.bindEnterKey(o, i);\n          var t = void 0 !== s.isNewWindow ? s.isNewWindow : a.context.options.linkTargetBlank;\n          r.prop(\"checked\", t), i.one(\"click\", function (t) {\n            t.preventDefault(), e.resolve({\n              range: s.range,\n              url: n.val(),\n              text: o.val(),\n              isNewWindow: r.is(\":checked\")\n            }), a.ui.hideDialog(a.$dialog);\n          });\n        }), a.ui.onDialogHidden(a.$dialog, function () {\n          o.off(), n.off(), i.off(), \"pending\" === e.state() && e.reject();\n        }), a.ui.showDialog(a.$dialog);\n      }).promise();\n    }, t.prototype.show = function () {\n      var e = this,\n          t = this.context.invoke(\"editor.getLinkInfo\");\n      this.context.invoke(\"editor.saveRange\"), this.showLinkDialog(t).then(function (t) {\n        e.context.invoke(\"editor.restoreRange\"), e.context.invoke(\"editor.createLink\", t);\n      }).fail(function () {\n        e.context.invoke(\"editor.restoreRange\");\n      });\n    }, t;\n  }(),\n      ne = function () {\n    function t(t) {\n      var e = this;\n      this.context = t, this.ui = C.summernote.ui, this.options = t.options, this.events = {\n        \"summernote.keyup summernote.mouseup summernote.change summernote.scroll\": function summernoteKeyupSummernoteMouseupSummernoteChangeSummernoteScroll() {\n          e.update();\n        },\n        \"summernote.disable summernote.dialog.shown\": function summernoteDisableSummernoteDialogShown() {\n          e.hide();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !B.isEmpty(this.options.popover.link);\n    }, t.prototype.initialize = function () {\n      this.$popover = this.ui.popover({\n        className: \"note-link-popover\",\n        callback: function callback(t) {\n          t.find(\".popover-content,.note-popover-content\").prepend('<span><a target=\"_blank\"></a>&nbsp;</span>');\n        }\n      }).render().appendTo(this.options.container);\n      var t = this.$popover.find(\".popover-content,.note-popover-content\");\n      this.context.invoke(\"buttons.build\", t, this.options.popover.link);\n    }, t.prototype.destroy = function () {\n      this.$popover.remove();\n    }, t.prototype.update = function () {\n      if (this.context.invoke(\"editor.hasFocus\")) {\n        var t = this.context.invoke(\"editor.getLastRange\");\n\n        if (t.isCollapsed() && t.isOnAnchor()) {\n          var e = $t.ancestor(t.sc, $t.isAnchor),\n              o = C(e).attr(\"href\");\n          this.$popover.find(\"a\").attr(\"href\", o).html(o);\n          var n = $t.posFromPlaceholder(e);\n          this.$popover.css({\n            display: \"block\",\n            left: n.left,\n            top: n.top\n          });\n        } else this.hide();\n      } else this.hide();\n    }, t.prototype.hide = function () {\n      this.$popover.hide();\n    }, t;\n  }(),\n      ie = function () {\n    function t(t) {\n      this.context = t, this.ui = C.summernote.ui, this.$body = C(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n    }\n\n    return t.prototype.initialize = function () {\n      var t = this.options.dialogsInBody ? this.$body : this.$editor,\n          e = \"\";\n\n      if (this.options.maximumImageFileSize) {\n        var o = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024)),\n            n = 1 * (this.options.maximumImageFileSize / Math.pow(1024, o)).toFixed(2) + \" \" + \" KMGTP\"[o] + \"B\";\n        e = \"<small>\" + this.lang.image.maximumFileSize + \" : \" + n + \"</small>\";\n      }\n\n      var i = ['<div class=\"form-group note-form-group note-group-select-from-files\">', '<label class=\"note-form-label\">' + this.lang.image.selectFromFiles + \"</label>\", '<input class=\"note-image-input form-control-file note-form-control note-input\" ', ' type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\" />', e, \"</div>\", '<div class=\"form-group note-group-image-url\" style=\"overflow:auto;\">', '<label class=\"note-form-label\">' + this.lang.image.url + \"</label>\", '<input class=\"note-image-url form-control note-form-control note-input ', ' col-md-12\" type=\"text\" />', \"</div>\"].join(\"\"),\n          r = '<input type=\"button\" href=\"#\" class=\"btn btn-primary note-btn note-btn-primary note-image-btn\" value=\"' + this.lang.image.insert + '\" disabled>';\n      this.$dialog = this.ui.dialog({\n        title: this.lang.image.insert,\n        fade: this.options.dialogsFade,\n        body: i,\n        footer: r\n      }).render().appendTo(t);\n    }, t.prototype.destroy = function () {\n      this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n    }, t.prototype.bindEnterKey = function (t, e) {\n      t.on(\"keypress\", function (t) {\n        t.keyCode === Pt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n      });\n    }, t.prototype.show = function () {\n      var e = this;\n      this.context.invoke(\"editor.saveRange\"), this.showImageDialog().then(function (t) {\n        e.ui.hideDialog(e.$dialog), e.context.invoke(\"editor.restoreRange\"), \"string\" == typeof t ? e.options.callbacks.onImageLinkInsert ? e.context.triggerEvent(\"image.link.insert\", t) : e.context.invoke(\"editor.insertImage\", t) : e.context.invoke(\"editor.insertImagesOrCallback\", t);\n      }).fail(function () {\n        e.context.invoke(\"editor.restoreRange\");\n      });\n    }, t.prototype.showImageDialog = function () {\n      var i = this;\n      return C.Deferred(function (e) {\n        var t = i.$dialog.find(\".note-image-input\"),\n            o = i.$dialog.find(\".note-image-url\"),\n            n = i.$dialog.find(\".note-image-btn\");\n        i.ui.onDialogShown(i.$dialog, function () {\n          i.context.triggerEvent(\"dialog.shown\"), t.replaceWith(t.clone().on(\"change\", function (t) {\n            e.resolve(t.target.files || t.target.value);\n          }).val(\"\")), o.on(\"input paste propertychange\", function () {\n            i.ui.toggleBtn(n, o.val());\n          }).val(\"\"), R.isSupportTouch || o.trigger(\"focus\"), n.click(function (t) {\n            t.preventDefault(), e.resolve(o.val());\n          }), i.bindEnterKey(o, n);\n        }), i.ui.onDialogHidden(i.$dialog, function () {\n          t.off(), o.off(), n.off(), \"pending\" === e.state() && e.reject();\n        }), i.ui.showDialog(i.$dialog);\n      });\n    }, t;\n  }(),\n      re = function () {\n    function t(t) {\n      var e = this;\n      this.context = t, this.ui = C.summernote.ui, this.editable = t.layoutInfo.editable[0], this.options = t.options, this.events = {\n        \"summernote.disable\": function summernoteDisable() {\n          e.hide();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !B.isEmpty(this.options.popover.image);\n    }, t.prototype.initialize = function () {\n      this.$popover = this.ui.popover({\n        className: \"note-image-popover\"\n      }).render().appendTo(this.options.container);\n      var t = this.$popover.find(\".popover-content,.note-popover-content\");\n      this.context.invoke(\"buttons.build\", t, this.options.popover.image);\n    }, t.prototype.destroy = function () {\n      this.$popover.remove();\n    }, t.prototype.update = function (t, e) {\n      if ($t.isImg(t)) {\n        var o = $t.posFromPlaceholder(t),\n            n = $t.posFromPlaceholder(this.editable);\n        this.$popover.css({\n          display: \"block\",\n          left: this.options.popatmouse ? e.pageX - 20 : o.left,\n          top: this.options.popatmouse ? e.pageY : Math.min(o.top, n.top)\n        });\n      } else this.hide();\n    }, t.prototype.hide = function () {\n      this.$popover.hide();\n    }, t;\n  }(),\n      se = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.ui = C.summernote.ui, this.options = t.options, this.events = {\n        \"summernote.mousedown\": function summernoteMousedown(t, e) {\n          o.update(e.target);\n        },\n        \"summernote.keyup summernote.scroll summernote.change\": function summernoteKeyupSummernoteScrollSummernoteChange() {\n          o.update();\n        },\n        \"summernote.disable\": function summernoteDisable() {\n          o.hide();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return !B.isEmpty(this.options.popover.table);\n    }, t.prototype.initialize = function () {\n      this.$popover = this.ui.popover({\n        className: \"note-table-popover\"\n      }).render().appendTo(this.options.container);\n      var t = this.$popover.find(\".popover-content,.note-popover-content\");\n      this.context.invoke(\"buttons.build\", t, this.options.popover.table), R.isFF && document.execCommand(\"enableInlineTableEditing\", !1, !1);\n    }, t.prototype.destroy = function () {\n      this.$popover.remove();\n    }, t.prototype.update = function (t) {\n      if (this.context.isDisabled()) return !1;\n      var e = $t.isCell(t);\n\n      if (e) {\n        var o = $t.posFromPlaceholder(t);\n        this.$popover.css({\n          display: \"block\",\n          left: o.left,\n          top: o.top\n        });\n      } else this.hide();\n\n      return e;\n    }, t.prototype.hide = function () {\n      this.$popover.hide();\n    }, t;\n  }(),\n      ae = function () {\n    function t(t) {\n      this.context = t, this.ui = C.summernote.ui, this.$body = C(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n    }\n\n    return t.prototype.initialize = function () {\n      var t = this.options.dialogsInBody ? this.$body : this.$editor,\n          e = ['<div class=\"form-group note-form-group row-fluid\">', '<label class=\"note-form-label\">' + this.lang.video.url + ' <small class=\"text-muted\">' + this.lang.video.providers + \"</small></label>\", '<input class=\"note-video-url form-control note-form-control note-input\" type=\"text\" />', \"</div>\"].join(\"\"),\n          o = '<input type=\"button\" href=\"#\" class=\"btn btn-primary note-btn note-btn-primary note-video-btn\" value=\"' + this.lang.video.insert + '\" disabled>';\n      this.$dialog = this.ui.dialog({\n        title: this.lang.video.insert,\n        fade: this.options.dialogsFade,\n        body: e,\n        footer: o\n      }).render().appendTo(t);\n    }, t.prototype.destroy = function () {\n      this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n    }, t.prototype.bindEnterKey = function (t, e) {\n      t.on(\"keypress\", function (t) {\n        t.keyCode === Pt.code.ENTER && (t.preventDefault(), e.trigger(\"click\"));\n      });\n    }, t.prototype.createVideoNode = function (t) {\n      var e,\n          o = t.match(/\\/\\/(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/),\n          n = t.match(/(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/),\n          i = t.match(/\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/),\n          r = t.match(/\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/),\n          s = t.match(/.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/),\n          a = t.match(/\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/),\n          l = t.match(/\\/\\/v\\.qq\\.com.*?vid=(.+)/),\n          c = t.match(/\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/),\n          d = t.match(/^.+.(mp4|m4v)$/),\n          u = t.match(/^.+.(ogg|ogv)$/),\n          h = t.match(/^.+.(webm)$/),\n          p = t.match(/(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/);\n\n      if (o && 11 === o[1].length) {\n        var f = o[1],\n            m = 0;\n\n        if (void 0 !== o[2]) {\n          var g = o[2].match(/^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/);\n          if (g) for (var v = [3600, 60, 1], b = 0, y = v.length; b < y; b++) {\n            m += void 0 !== g[b + 1] ? v[b] * parseInt(g[b + 1], 10) : 0;\n          }\n        }\n\n        e = C(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"//www.youtube.com/embed/\" + f + (0 < m ? \"?start=\" + m : \"\")).attr(\"width\", \"640\").attr(\"height\", \"360\");\n      } else if (n && n[0].length) e = C(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"https://instagram.com/p/\" + n[1] + \"/embed/\").attr(\"width\", \"612\").attr(\"height\", \"710\").attr(\"scrolling\", \"no\").attr(\"allowtransparency\", \"true\");else if (i && i[0].length) e = C(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", i[0] + \"/embed/simple\").attr(\"width\", \"600\").attr(\"height\", \"600\").attr(\"class\", \"vine-embed\");else if (r && r[3].length) e = C(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"src\", \"//player.vimeo.com/video/\" + r[3]).attr(\"width\", \"640\").attr(\"height\", \"360\");else if (s && s[2].length) e = C(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"//www.dailymotion.com/embed/video/\" + s[2]).attr(\"width\", \"640\").attr(\"height\", \"360\");else if (a && a[1].length) e = C(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"height\", \"498\").attr(\"width\", \"510\").attr(\"src\", \"//player.youku.com/embed/\" + a[1]);else if (l && l[1].length || c && c[2].length) {\n        var k = l && l[1].length ? l[1] : c[2];\n        e = C(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\", 0).attr(\"height\", \"310\").attr(\"width\", \"500\").attr(\"src\", \"http://v.qq.com/iframe/player.html?vid=\" + k + \"&amp;auto=0\");\n      } else if (d || u || h) e = C(\"<video controls>\").attr(\"src\", t).attr(\"width\", \"640\").attr(\"height\", \"360\");else {\n        if (!p || !p[0].length) return !1;\n        e = C(\"<iframe>\").attr(\"frameborder\", 0).attr(\"src\", \"https://www.facebook.com/plugins/video.php?href=\" + encodeURIComponent(p[0]) + \"&show_text=0&width=560\").attr(\"width\", \"560\").attr(\"height\", \"301\").attr(\"scrolling\", \"no\").attr(\"allowtransparency\", \"true\");\n      }\n\n      return e.addClass(\"note-video-clip\"), e[0];\n    }, t.prototype.show = function () {\n      var o = this,\n          t = this.context.invoke(\"editor.getSelectedText\");\n      this.context.invoke(\"editor.saveRange\"), this.showVideoDialog(t).then(function (t) {\n        o.ui.hideDialog(o.$dialog), o.context.invoke(\"editor.restoreRange\");\n        var e = o.createVideoNode(t);\n        e && o.context.invoke(\"editor.insertNode\", e);\n      }).fail(function () {\n        o.context.invoke(\"editor.restoreRange\");\n      });\n    }, t.prototype.showVideoDialog = function (t) {\n      var n = this;\n      return C.Deferred(function (e) {\n        var o = n.$dialog.find(\".note-video-url\"),\n            t = n.$dialog.find(\".note-video-btn\");\n        n.ui.onDialogShown(n.$dialog, function () {\n          n.context.triggerEvent(\"dialog.shown\"), o.on(\"input paste propertychange\", function () {\n            n.ui.toggleBtn(t, o.val());\n          }), R.isSupportTouch || o.trigger(\"focus\"), t.click(function (t) {\n            t.preventDefault(), e.resolve(o.val());\n          }), n.bindEnterKey(o, t);\n        }), n.ui.onDialogHidden(n.$dialog, function () {\n          o.off(), t.off(), \"pending\" === e.state() && e.reject();\n        }), n.ui.showDialog(n.$dialog);\n      });\n    }, t;\n  }(),\n      le = function () {\n    function t(t) {\n      this.context = t, this.ui = C.summernote.ui, this.$body = C(document.body), this.$editor = t.layoutInfo.editor, this.options = t.options, this.lang = this.options.langInfo;\n    }\n\n    return t.prototype.initialize = function () {\n      var t = this.options.dialogsInBody ? this.$body : this.$editor,\n          e = ['<p class=\"text-center\">', '<a href=\"http://summernote.org/\" target=\"_blank\">Summernote 0.8.12</a> · ', '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\">Project</a> · ', '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>', \"</p>\"].join(\"\");\n      this.$dialog = this.ui.dialog({\n        title: this.lang.options.help,\n        fade: this.options.dialogsFade,\n        body: this.createShortcutList(),\n        footer: e,\n        callback: function callback(t) {\n          t.find(\".modal-body,.note-modal-body\").css({\n            \"max-height\": 300,\n            overflow: \"scroll\"\n          });\n        }\n      }).render().appendTo(t);\n    }, t.prototype.destroy = function () {\n      this.ui.hideDialog(this.$dialog), this.$dialog.remove();\n    }, t.prototype.createShortcutList = function () {\n      var n = this,\n          i = this.options.keyMap[R.isMac ? \"mac\" : \"pc\"];\n      return Object.keys(i).map(function (t) {\n        var e = i[t],\n            o = C('<div><div class=\"help-list-item\"/></div>');\n        return o.append(C(\"<label><kbd>\" + t + \"</kdb></label>\").css({\n          width: 180,\n          \"margin-right\": 10\n        })).append(C(\"<span/>\").html(n.context.memo(\"help.\" + e) || e)), o.html();\n      }).join(\"\");\n    }, t.prototype.showHelpDialog = function () {\n      var e = this;\n      return C.Deferred(function (t) {\n        e.ui.onDialogShown(e.$dialog, function () {\n          e.context.triggerEvent(\"dialog.shown\"), t.resolve();\n        }), e.ui.showDialog(e.$dialog);\n      }).promise();\n    }, t.prototype.show = function () {\n      var t = this;\n      this.context.invoke(\"editor.saveRange\"), this.showHelpDialog().then(function () {\n        t.context.invoke(\"editor.restoreRange\");\n      });\n    }, t;\n  }(),\n      ce = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.ui = C.summernote.ui, this.options = t.options, this.events = {\n        \"summernote.keyup summernote.mouseup summernote.scroll\": function summernoteKeyupSummernoteMouseupSummernoteScroll() {\n          o.update();\n        },\n        \"summernote.disable summernote.change summernote.dialog.shown\": function summernoteDisableSummernoteChangeSummernoteDialogShown() {\n          o.hide();\n        },\n        \"summernote.focusout\": function summernoteFocusout(t, e) {\n          R.isFF || e.relatedTarget && $t.ancestor(e.relatedTarget, A.eq(o.$popover[0])) || o.hide();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return this.options.airMode && !B.isEmpty(this.options.popover.air);\n    }, t.prototype.initialize = function () {\n      this.$popover = this.ui.popover({\n        className: \"note-air-popover\"\n      }).render().appendTo(this.options.container);\n      var t = this.$popover.find(\".popover-content\");\n      this.context.invoke(\"buttons.build\", t, this.options.popover.air);\n    }, t.prototype.destroy = function () {\n      this.$popover.remove();\n    }, t.prototype.update = function () {\n      var t = this.context.invoke(\"editor.currentStyle\");\n\n      if (t.range && !t.range.isCollapsed()) {\n        var e = B.last(t.range.getClientRects());\n\n        if (e) {\n          var o = A.rect2bnd(e);\n          this.$popover.css({\n            display: \"block\",\n            left: Math.max(o.left + o.width / 2, 0) - 20,\n            top: o.top + o.height\n          }), this.context.invoke(\"buttons.updateCurrentStyle\", this.$popover);\n        }\n      } else this.hide();\n    }, t.prototype.hide = function () {\n      this.$popover.hide();\n    }, t;\n  }(),\n      de = function () {\n    function t(t) {\n      var o = this;\n      this.context = t, this.ui = C.summernote.ui, this.$editable = t.layoutInfo.editable, this.options = t.options, this.hint = this.options.hint || [], this.direction = this.options.hintDirection || \"bottom\", this.hints = Array.isArray(this.hint) ? this.hint : [this.hint], this.events = {\n        \"summernote.keyup\": function summernoteKeyup(t, e) {\n          e.isDefaultPrevented() || o.handleKeyup(e);\n        },\n        \"summernote.keydown\": function summernoteKeydown(t, e) {\n          o.handleKeydown(e);\n        },\n        \"summernote.disable summernote.dialog.shown\": function summernoteDisableSummernoteDialogShown() {\n          o.hide();\n        }\n      };\n    }\n\n    return t.prototype.shouldInitialize = function () {\n      return 0 < this.hints.length;\n    }, t.prototype.initialize = function () {\n      var e = this;\n      this.lastWordRange = null, this.$popover = this.ui.popover({\n        className: \"note-hint-popover\",\n        hideArrow: !0,\n        direction: \"\"\n      }).render().appendTo(this.options.container), this.$popover.hide(), this.$content = this.$popover.find(\".popover-content,.note-popover-content\"), this.$content.on(\"click\", \".note-hint-item\", function (t) {\n        e.$content.find(\".active\").removeClass(\"active\"), C(t.currentTarget).addClass(\"active\"), e.replace();\n      });\n    }, t.prototype.destroy = function () {\n      this.$popover.remove();\n    }, t.prototype.selectItem = function (t) {\n      this.$content.find(\".active\").removeClass(\"active\"), t.addClass(\"active\"), this.$content[0].scrollTop = t[0].offsetTop - this.$content.innerHeight() / 2;\n    }, t.prototype.moveDown = function () {\n      var t = this.$content.find(\".note-hint-item.active\"),\n          e = t.next();\n      if (e.length) this.selectItem(e);else {\n        var o = t.parent().next();\n        o.length || (o = this.$content.find(\".note-hint-group\").first()), this.selectItem(o.find(\".note-hint-item\").first());\n      }\n    }, t.prototype.moveUp = function () {\n      var t = this.$content.find(\".note-hint-item.active\"),\n          e = t.prev();\n      if (e.length) this.selectItem(e);else {\n        var o = t.parent().prev();\n        o.length || (o = this.$content.find(\".note-hint-group\").last()), this.selectItem(o.find(\".note-hint-item\").last());\n      }\n    }, t.prototype.replace = function () {\n      var t = this.$content.find(\".note-hint-item.active\");\n\n      if (t.length) {\n        var e = this.nodeFromItem(t);\n        this.lastWordRange.insertNode(e), At.createFromNode(e).collapse().select(), this.lastWordRange = null, this.hide(), this.context.triggerEvent(\"change\", this.$editable.html(), this.$editable[0]), this.context.invoke(\"editor.focus\");\n      }\n    }, t.prototype.nodeFromItem = function (t) {\n      var e = this.hints[t.data(\"index\")],\n          o = t.data(\"item\"),\n          n = e.content ? e.content(o) : o;\n      return \"string\" == typeof n && (n = $t.createText(n)), n;\n    }, t.prototype.createItemTemplates = function (n, t) {\n      var i = this.hints[n];\n      return t.map(function (t, e) {\n        var o = C('<div class=\"note-hint-item\"/>');\n        return o.append(i.template ? i.template(t) : t + \"\"), o.data({\n          index: n,\n          item: t\n        }), o;\n      });\n    }, t.prototype.handleKeydown = function (t) {\n      this.$popover.is(\":visible\") && (t.keyCode === Pt.code.ENTER ? (t.preventDefault(), this.replace()) : t.keyCode === Pt.code.UP ? (t.preventDefault(), this.moveUp()) : t.keyCode === Pt.code.DOWN && (t.preventDefault(), this.moveDown()));\n    }, t.prototype.searchKeyword = function (t, e, o) {\n      var n = this.hints[t];\n\n      if (n && n.match.test(e) && n.search) {\n        var i = n.match.exec(e);\n        n.search(i[1], o);\n      } else o();\n    }, t.prototype.createGroup = function (e, t) {\n      var o = this,\n          n = C('<div class=\"note-hint-group note-hint-group-' + e + '\"/>');\n      return this.searchKeyword(e, t, function (t) {\n        (t = t || []).length && (n.html(o.createItemTemplates(e, t)), o.show());\n      }), n;\n    }, t.prototype.handleKeyup = function (t) {\n      var o = this;\n\n      if (!B.contains([Pt.code.ENTER, Pt.code.UP, Pt.code.DOWN], t.keyCode)) {\n        var e = this.context.invoke(\"editor.getLastRange\").getWordRange(),\n            n = e.toString();\n\n        if (this.hints.length && n) {\n          this.$content.empty();\n          var i = A.rect2bnd(B.last(e.getClientRects()));\n          i && (this.$popover.hide(), this.lastWordRange = e, this.hints.forEach(function (t, e) {\n            t.match.test(n) && o.createGroup(e, n).appendTo(o.$content);\n          }), this.$content.find(\".note-hint-item:first\").addClass(\"active\"), \"top\" === this.direction ? this.$popover.css({\n            left: i.left,\n            top: i.top - this.$popover.outerHeight() - 5\n          }) : this.$popover.css({\n            left: i.left,\n            top: i.top + i.height + 5\n          }));\n        } else this.hide();\n      }\n    }, t.prototype.show = function () {\n      this.$popover.show();\n    }, t.prototype.hide = function () {\n      this.$popover.hide();\n    }, t;\n  }();\n\n  C.summernote = C.extend(C.summernote, {\n    version: \"0.8.12\",\n    plugins: {},\n    dom: $t,\n    range: At,\n    options: {\n      langInfo: C.summernote.lang[\"en-US\"],\n      modules: {\n        editor: jt,\n        clipboard: Kt,\n        dropzone: Wt,\n        codeview: Vt,\n        statusbar: qt,\n        fullscreen: Gt,\n        handle: _t,\n        hintPopover: de,\n        autoLink: Yt,\n        autoSync: Qt,\n        autoReplace: Jt,\n        placeholder: Xt,\n        buttons: te,\n        toolbar: ee,\n        linkDialog: oe,\n        linkPopover: ne,\n        imageDialog: ie,\n        imagePopover: re,\n        tablePopover: se,\n        videoDialog: ae,\n        helpDialog: le,\n        airPopover: ce\n      },\n      buttons: {},\n      lang: \"en-US\",\n      followingToolbar: !1,\n      otherStaticBar: \"\",\n      toolbar: [[\"style\", [\"style\"]], [\"font\", [\"bold\", \"underline\", \"clear\"]], [\"fontname\", [\"fontname\"]], [\"color\", [\"color\"]], [\"para\", [\"ul\", \"ol\", \"paragraph\"]], [\"table\", [\"table\"]], [\"insert\", [\"link\", \"picture\", \"video\"]], [\"view\", [\"fullscreen\", \"codeview\", \"help\"]]],\n      popatmouse: !0,\n      popover: {\n        image: [[\"resize\", [\"resizeFull\", \"resizeHalf\", \"resizeQuarter\", \"resizeNone\"]], [\"float\", [\"floatLeft\", \"floatRight\", \"floatNone\"]], [\"remove\", [\"removeMedia\"]]],\n        link: [[\"link\", [\"linkDialogShow\", \"unlink\"]]],\n        table: [[\"add\", [\"addRowDown\", \"addRowUp\", \"addColLeft\", \"addColRight\"]], [\"delete\", [\"deleteRow\", \"deleteCol\", \"deleteTable\"]]],\n        air: [[\"color\", [\"color\"]], [\"font\", [\"bold\", \"underline\", \"clear\"]], [\"para\", [\"ul\", \"paragraph\"]], [\"table\", [\"table\"]], [\"insert\", [\"link\", \"picture\"]]]\n      },\n      airMode: !1,\n      width: null,\n      height: null,\n      linkTargetBlank: !0,\n      focus: !1,\n      tabSize: 4,\n      styleWithSpan: !0,\n      shortcuts: !0,\n      textareaAutoSync: !0,\n      hintDirection: \"bottom\",\n      tooltip: \"auto\",\n      container: \"body\",\n      maxTextLength: 0,\n      blockquoteBreakingLevel: 2,\n      spellCheck: !0,\n      styleTags: [\"p\", \"blockquote\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n      fontNames: [\"Arial\", \"Arial Black\", \"Comic Sans MS\", \"Courier New\", \"Helvetica Neue\", \"Helvetica\", \"Impact\", \"Lucida Grande\", \"Tahoma\", \"Times New Roman\", \"Verdana\"],\n      fontNamesIgnoreCheck: [],\n      fontSizes: [\"8\", \"9\", \"10\", \"11\", \"12\", \"14\", \"18\", \"24\", \"36\"],\n      colors: [[\"#000000\", \"#424242\", \"#636363\", \"#9C9C94\", \"#CEC6CE\", \"#EFEFEF\", \"#F7F7F7\", \"#FFFFFF\"], [\"#FF0000\", \"#FF9C00\", \"#FFFF00\", \"#00FF00\", \"#00FFFF\", \"#0000FF\", \"#9C00FF\", \"#FF00FF\"], [\"#F7C6CE\", \"#FFE7CE\", \"#FFEFC6\", \"#D6EFD6\", \"#CEDEE7\", \"#CEE7F7\", \"#D6D6E7\", \"#E7D6DE\"], [\"#E79C9C\", \"#FFC69C\", \"#FFE79C\", \"#B5D6A5\", \"#A5C6CE\", \"#9CC6EF\", \"#B5A5D6\", \"#D6A5BD\"], [\"#E76363\", \"#F7AD6B\", \"#FFD663\", \"#94BD7B\", \"#73A5AD\", \"#6BADDE\", \"#8C7BC6\", \"#C67BA5\"], [\"#CE0000\", \"#E79439\", \"#EFC631\", \"#6BA54A\", \"#4A7B8C\", \"#3984C6\", \"#634AA5\", \"#A54A7B\"], [\"#9C0000\", \"#B56308\", \"#BD9400\", \"#397B21\", \"#104A5A\", \"#085294\", \"#311873\", \"#731842\"], [\"#630000\", \"#7B3900\", \"#846300\", \"#295218\", \"#083139\", \"#003163\", \"#21104A\", \"#4A1031\"]],\n      colorsName: [[\"Black\", \"Tundora\", \"Dove Gray\", \"Star Dust\", \"Pale Slate\", \"Gallery\", \"Alabaster\", \"White\"], [\"Red\", \"Orange Peel\", \"Yellow\", \"Green\", \"Cyan\", \"Blue\", \"Electric Violet\", \"Magenta\"], [\"Azalea\", \"Karry\", \"Egg White\", \"Zanah\", \"Botticelli\", \"Tropical Blue\", \"Mischka\", \"Twilight\"], [\"Tonys Pink\", \"Peach Orange\", \"Cream Brulee\", \"Sprout\", \"Casper\", \"Perano\", \"Cold Purple\", \"Careys Pink\"], [\"Mandy\", \"Rajah\", \"Dandelion\", \"Olivine\", \"Gulf Stream\", \"Viking\", \"Blue Marguerite\", \"Puce\"], [\"Guardsman Red\", \"Fire Bush\", \"Golden Dream\", \"Chelsea Cucumber\", \"Smalt Blue\", \"Boston Blue\", \"Butterfly Bush\", \"Cadillac\"], [\"Sangria\", \"Mai Tai\", \"Buddha Gold\", \"Forest Green\", \"Eden\", \"Venice Blue\", \"Meteorite\", \"Claret\"], [\"Rosewood\", \"Cinnamon\", \"Olive\", \"Parsley\", \"Tiber\", \"Midnight Blue\", \"Valentino\", \"Loulou\"]],\n      colorButton: {\n        foreColor: \"#000000\",\n        backColor: \"#FFFF00\"\n      },\n      lineHeights: [\"1.0\", \"1.2\", \"1.4\", \"1.5\", \"1.6\", \"1.8\", \"2.0\", \"3.0\"],\n      tableClassName: \"table table-bordered\",\n      insertTableMaxSize: {\n        col: 10,\n        row: 10\n      },\n      dialogsInBody: !1,\n      dialogsFade: !1,\n      maximumImageFileSize: null,\n      callbacks: {\n        onBeforeCommand: null,\n        onBlur: null,\n        onBlurCodeview: null,\n        onChange: null,\n        onChangeCodeview: null,\n        onDialogShown: null,\n        onEnter: null,\n        onFocus: null,\n        onImageLinkInsert: null,\n        onImageUpload: null,\n        onImageUploadError: null,\n        onInit: null,\n        onKeydown: null,\n        onKeyup: null,\n        onMousedown: null,\n        onMouseup: null,\n        onPaste: null,\n        onScroll: null\n      },\n      codemirror: {\n        mode: \"text/html\",\n        htmlMode: !0,\n        lineNumbers: !0\n      },\n      codeviewFilter: !1,\n      codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\n      codeviewIframeFilter: !0,\n      codeviewIframeWhitelistSrc: [],\n      codeviewIframeWhitelistSrcBase: [\"www.youtube.com\", \"www.youtube-nocookie.com\", \"www.facebook.com\", \"vine.co\", \"instagram.com\", \"player.vimeo.com\", \"www.dailymotion.com\", \"player.youku.com\", \"v.qq.com\"],\n      keyMap: {\n        pc: {\n          ENTER: \"insertParagraph\",\n          \"CTRL+Z\": \"undo\",\n          \"CTRL+Y\": \"redo\",\n          TAB: \"tab\",\n          \"SHIFT+TAB\": \"untab\",\n          \"CTRL+B\": \"bold\",\n          \"CTRL+I\": \"italic\",\n          \"CTRL+U\": \"underline\",\n          \"CTRL+SHIFT+S\": \"strikethrough\",\n          \"CTRL+BACKSLASH\": \"removeFormat\",\n          \"CTRL+SHIFT+L\": \"justifyLeft\",\n          \"CTRL+SHIFT+E\": \"justifyCenter\",\n          \"CTRL+SHIFT+R\": \"justifyRight\",\n          \"CTRL+SHIFT+J\": \"justifyFull\",\n          \"CTRL+SHIFT+NUM7\": \"insertUnorderedList\",\n          \"CTRL+SHIFT+NUM8\": \"insertOrderedList\",\n          \"CTRL+LEFTBRACKET\": \"outdent\",\n          \"CTRL+RIGHTBRACKET\": \"indent\",\n          \"CTRL+NUM0\": \"formatPara\",\n          \"CTRL+NUM1\": \"formatH1\",\n          \"CTRL+NUM2\": \"formatH2\",\n          \"CTRL+NUM3\": \"formatH3\",\n          \"CTRL+NUM4\": \"formatH4\",\n          \"CTRL+NUM5\": \"formatH5\",\n          \"CTRL+NUM6\": \"formatH6\",\n          \"CTRL+ENTER\": \"insertHorizontalRule\",\n          \"CTRL+K\": \"linkDialog.show\"\n        },\n        mac: {\n          ENTER: \"insertParagraph\",\n          \"CMD+Z\": \"undo\",\n          \"CMD+SHIFT+Z\": \"redo\",\n          TAB: \"tab\",\n          \"SHIFT+TAB\": \"untab\",\n          \"CMD+B\": \"bold\",\n          \"CMD+I\": \"italic\",\n          \"CMD+U\": \"underline\",\n          \"CMD+SHIFT+S\": \"strikethrough\",\n          \"CMD+BACKSLASH\": \"removeFormat\",\n          \"CMD+SHIFT+L\": \"justifyLeft\",\n          \"CMD+SHIFT+E\": \"justifyCenter\",\n          \"CMD+SHIFT+R\": \"justifyRight\",\n          \"CMD+SHIFT+J\": \"justifyFull\",\n          \"CMD+SHIFT+NUM7\": \"insertUnorderedList\",\n          \"CMD+SHIFT+NUM8\": \"insertOrderedList\",\n          \"CMD+LEFTBRACKET\": \"outdent\",\n          \"CMD+RIGHTBRACKET\": \"indent\",\n          \"CMD+NUM0\": \"formatPara\",\n          \"CMD+NUM1\": \"formatH1\",\n          \"CMD+NUM2\": \"formatH2\",\n          \"CMD+NUM3\": \"formatH3\",\n          \"CMD+NUM4\": \"formatH4\",\n          \"CMD+NUM5\": \"formatH5\",\n          \"CMD+NUM6\": \"formatH6\",\n          \"CMD+ENTER\": \"insertHorizontalRule\",\n          \"CMD+K\": \"linkDialog.show\"\n        }\n      },\n      icons: {\n        align: \"note-icon-align\",\n        alignCenter: \"note-icon-align-center\",\n        alignJustify: \"note-icon-align-justify\",\n        alignLeft: \"note-icon-align-left\",\n        alignRight: \"note-icon-align-right\",\n        rowBelow: \"note-icon-row-below\",\n        colBefore: \"note-icon-col-before\",\n        colAfter: \"note-icon-col-after\",\n        rowAbove: \"note-icon-row-above\",\n        rowRemove: \"note-icon-row-remove\",\n        colRemove: \"note-icon-col-remove\",\n        indent: \"note-icon-align-indent\",\n        outdent: \"note-icon-align-outdent\",\n        arrowsAlt: \"note-icon-arrows-alt\",\n        bold: \"note-icon-bold\",\n        caret: \"note-icon-caret\",\n        circle: \"note-icon-circle\",\n        close: \"note-icon-close\",\n        code: \"note-icon-code\",\n        eraser: \"note-icon-eraser\",\n        floatLeft: \"note-icon-float-left\",\n        floatRight: \"note-icon-float-right\",\n        font: \"note-icon-font\",\n        frame: \"note-icon-frame\",\n        italic: \"note-icon-italic\",\n        link: \"note-icon-link\",\n        unlink: \"note-icon-chain-broken\",\n        magic: \"note-icon-magic\",\n        menuCheck: \"note-icon-menu-check\",\n        minus: \"note-icon-minus\",\n        orderedlist: \"note-icon-orderedlist\",\n        pencil: \"note-icon-pencil\",\n        picture: \"note-icon-picture\",\n        question: \"note-icon-question\",\n        redo: \"note-icon-redo\",\n        rollback: \"note-icon-rollback\",\n        square: \"note-icon-square\",\n        strikethrough: \"note-icon-strikethrough\",\n        subscript: \"note-icon-subscript\",\n        superscript: \"note-icon-superscript\",\n        table: \"note-icon-table\",\n        textHeight: \"note-icon-text-height\",\n        trash: \"note-icon-trash\",\n        underline: \"note-icon-underline\",\n        undo: \"note-icon-undo\",\n        unorderedlist: \"note-icon-unorderedlist\",\n        video: \"note-icon-video\"\n      }\n    }\n  }), C.summernote = C.extend(C.summernote, {\n    ui: b\n  });\n});","map":null,"metadata":{},"sourceType":"script"}